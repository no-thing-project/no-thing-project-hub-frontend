{"version":3,"file":"static/js/714.b8df4177.chunk.js","mappings":"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","sources":["components/Dialogs/DeleteConfirmationDialog.jsx","components/Dialogs/MemberFormDialog.jsx","api/gatesApi.js","hooks/useGates.js","utils/validations.js","components/Dialogs/BoardFormDialog.jsx","api/socialApi.js","hooks/useSocial.js"],"sourcesContent":["import React from \"react\";\nimport {\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogContentText,\n  DialogActions,\n  Button,\n  useTheme,\n} from \"@mui/material\";\nimport { actionButtonStyles, cancelButtonStyle } from \"../../styles/BaseStyles\";\nimport PropTypes from \"prop-types\";\n\nconst DeleteConfirmationDialog = ({ open, onClose, onConfirm, message, disabled }) => {\n  const theme = useTheme();\n\n  return (\n    <Dialog\n      open={open}\n      onClose={onClose}\n      maxWidth=\"xs\"\n      fullWidth\n      sx={{\n        \"& .MuiDialog-paper\": {\n          borderRadius: theme.shape.borderRadiusMedium,\n          p: { xs: 1, md: 2 },\n        },\n      }}\n    >\n      <DialogTitle sx={{ fontSize: { xs: \"1.25rem\", md: \"1.5rem\" } }}>\n        Confirm Deletion\n      </DialogTitle>\n      <DialogContent>\n        <DialogContentText\n          sx={{ color: \"text.primary\", fontSize: { xs: \"0.875rem\", md: \"1rem\" } }}\n        >\n          {message}\n        </DialogContentText>\n      </DialogContent>\n      <DialogActions>\n        <Button\n          onClick={onClose}\n          sx={{\n            ...cancelButtonStyle,\n            minWidth: { xs: \"100%\", sm: 120 },\n            fontSize: { xs: \"0.75rem\", sm: \"0.875rem\" },\n          }}\n          disabled={disabled}\n          aria-label=\"Cancel deletion\"\n        >\n          Cancel\n        </Button>\n        <Button\n          onClick={onConfirm}\n          sx={{\n            ...actionButtonStyles,\n            backgroundColor: \"error.main\",\n            \"&:hover\": {\n              backgroundColor: \"error.dark\",\n            },\n            minWidth: { xs: \"100%\", sm: 120 },\n            fontSize: { xs: \"0.75rem\", sm: \"0.875rem\" },\n          }}\n          disabled={disabled}\n          aria-label=\"Confirm deletion\"\n        >\n          Delete\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n};\n\nDeleteConfirmationDialog.propTypes = {\n  open: PropTypes.bool.isRequired,\n  onClose: PropTypes.func.isRequired,\n  onConfirm: PropTypes.func.isRequired,\n  message: PropTypes.string.isRequired,\n  disabled: PropTypes.bool,\n};\n\nexport default React.memo(DeleteConfirmationDialog);","import React, { useState, useCallback, useEffect, useMemo } from \"react\";\nimport {\n  Box,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogActions,\n  TextField,\n  Select,\n  MenuItem,\n  InputLabel,\n  FormControl,\n  Button,\n  FormHelperText,\n  Autocomplete,\n  CircularProgress,\n  Typography,\n  Chip,\n  IconButton,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  Paper,\n  useTheme,\n} from \"@mui/material\";\nimport { Delete } from \"@mui/icons-material\";\nimport { inputStyles, actionButtonStyles, cancelButtonStyle, selectStyles } from \"../../styles/BaseStyles\";\nimport { validateField, validateForm } from \"../../utils/validations\";\nimport { debounce } from \"lodash\";\nimport { useNotification } from \"../../context/NotificationContext\";\nimport { useSocial } from \"../../hooks/useSocial\";\nimport PropTypes from \"prop-types\";\n\nconst MemberFormDialog = ({\n  open,\n  title,\n  gateId,\n  classId,\n  boardId,\n  token,\n  onSave,\n  onCancel,\n  disabled,\n  members,\n  addMember,\n  removeMember,\n  updateMemberRole,\n}) => {\n  const theme = useTheme();\n  const { showNotification } = useNotification();\n  const { searchUsersByUsername, loading: searchLoading } = useSocial(token, () => {}, () => {});\n  const [username, setUsername] = useState(\"\");\n  const [role, setRole] = useState(\"viewer\");\n  const [errors, setErrors] = useState({});\n  const [userSuggestions, setUserSuggestions] = useState([]);\n\n  const validRoles = [\"viewer\", \"moderator\", \"admin\", \"owner\"];\n\n  // Determine the context (gate, class, or board) based on provided IDs\n  const context = useMemo(() => {\n    if (gateId) return { type: \"gate\", id: gateId, name: \"Gate\" };\n    if (classId) return { type: \"class\", id: classId, name: \"Class\" };\n    if (boardId) return { type: \"board\", id: boardId, name: \"Board\" };\n    return { type: null, id: null, name: \"Unknown\" };\n  }, [gateId, classId, boardId]);\n\n  const validationRules = useMemo(\n    () => ({\n      username: {\n        value: username,\n        rules: { required: true, minLength: 3, maxLength: 50 },\n      },\n      role: {\n        value: role,\n        rules: { required: true, validRoles },\n      },\n    }),\n    [username, role]\n  );\n\n  const debouncedSearchUsers = useMemo(\n    () =>\n      debounce(async (query) => {\n        if (!query || query.length < 3) {\n          setUserSuggestions([]);\n          return;\n        }\n        try {\n          const users = await searchUsersByUsername(query, { limit: 10 });\n          const suggestions = users.map((user) => ({\n            username: user.username || user.anonymous_id || \"Unknown\",\n            anonymous_id: user.anonymous_id,\n          }));\n          setUserSuggestions(suggestions);\n          if (!suggestions.length) {\n            showNotification(`No users found for this ${context.name.toLowerCase()}`, \"info\");\n          }\n        } catch (err) {\n          console.error(\"Search users error:\", err);\n          showNotification(\"Failed to fetch user suggestions\", \"error\");\n          setUserSuggestions([]);\n        }\n      }, 300),\n    [searchUsersByUsername, showNotification, context.name]\n  );\n\n  const handleUsernameChange = useCallback(\n    (event, newValue) => {\n      const value = newValue || \"\";\n      setUsername(value);\n\n      const fieldErrors = validateField(\"username\", value, validationRules.username.rules);\n      setErrors((prev) => ({\n        ...prev,\n        username: fieldErrors[0] || null,\n      }));\n\n      if (value.length >= 3) {\n        debouncedSearchUsers(value);\n      } else {\n        setUserSuggestions([]);\n      }\n    },\n    [debouncedSearchUsers, validationRules]\n  );\n\n  const handleRoleChange = useCallback(\n    (e) => {\n      const { value } = e.target;\n      setRole(value);\n\n      const fieldErrors = validateField(\"role\", value, validationRules.role.rules);\n      setErrors((prev) => ({\n        ...prev,\n        role: fieldErrors[0] || null,\n      }));\n    },\n    [validationRules]\n  );\n\n  const handleAddMember = useCallback(async () => {\n    const formErrors = validateForm(validationRules);\n    if (Object.keys(formErrors).length > 0) {\n      setErrors(formErrors);\n      return;\n    }\n\n    const selectedUser = userSuggestions.find((user) => user.username === username);\n    if (!selectedUser) {\n      showNotification(\"Please select a valid user from the suggestions\", \"error\");\n      setErrors((prev) => ({\n        ...prev,\n        username: \"Invalid user selected\",\n      }));\n      return;\n    }\n\n    if (!context.id) {\n      showNotification(`No valid ${context.name.toLowerCase()} ID provided`, \"error\");\n      return;\n    }\n\n    try {\n      await addMember(context.id, { username: selectedUser.username, role });\n      setUsername(\"\");\n      setRole(\"viewer\");\n      setErrors({});\n      setUserSuggestions([]);\n      showNotification(`Member added to ${context.name.toLowerCase()} successfully!`, \"success\");\n      onSave();\n    } catch (err) {\n      console.error(`Add ${context.name.toLowerCase()} member error:`, err);\n      showNotification(err.message || `Failed to add member to ${context.name.toLowerCase()}`, \"error\");\n    }\n  }, [context, username, role, userSuggestions, addMember, showNotification, validationRules, onSave]);\n\n  const handleRemoveMember = useCallback(\n    async (username) => {\n      if (!context.id) {\n        showNotification(`No valid ${context.name.toLowerCase()} ID provided`, \"error\");\n        return;\n      }\n\n      try {\n        await removeMember(context.id, username);\n        showNotification(`Member removed from ${context.name.toLowerCase()} successfully!`, \"success\");\n      } catch (err) {\n        console.error(`Remove ${context.name.toLowerCase()} member error:`, err);\n        showNotification(err.message || `Failed to remove member from ${context.name.toLowerCase()}`, \"error\");\n      }\n    },\n    [context, removeMember, showNotification]\n  );\n\n  const handleUpdateRole = useCallback(\n    async (username, newRole) => {\n      if (!context.id) {\n        showNotification(`No valid ${context.name.toLowerCase()} ID provided`, \"error\");\n        return;\n      }\n\n      try {\n        await updateMemberRole(context.id, username, newRole);\n        showNotification(`Member role updated in ${context.name.toLowerCase()} successfully!`, \"success\");\n      } catch (err) {\n        console.error(`Update ${context.name.toLowerCase()} role error:`, err);\n        showNotification(err.message || `Failed to update member role in ${context.name.toLowerCase()}`, \"error\");\n      }\n    },\n    [context, updateMemberRole, showNotification]\n  );\n\n  useEffect(() => {\n    if (!open) {\n      setUsername(\"\");\n      setRole(\"viewer\");\n      setUserSuggestions([]);\n      setErrors({});\n    }\n  }, [open]);\n\n  return (\n    <Dialog\n      open={open}\n      onClose={onCancel}\n      maxWidth=\"md\"\n      fullWidth\n      sx={{\n        \"& .MuiDialog-paper\": {\n          borderRadius: theme.shape.borderRadiusMedium,\n          p: { xs: 1, md: 2 },\n        },\n      }}\n    >\n      <DialogTitle sx={{ fontSize: { xs: \"1.25rem\", md: \"1.5rem\" } }}>\n        {title || `Manage ${context.name} Members`}\n      </DialogTitle>\n      <DialogContent>\n        <Box\n          sx={{\n            display: \"flex\",\n            gap: { xs: 1, md: 2 },\n            mb: { xs: 2, md: 3 },\n            alignItems: \"center\",\n            flexDirection: { xs: \"column\", sm: \"row\" },\n          }}\n        >\n          <Autocomplete\n            freeSolo={false}\n            options={userSuggestions}\n            getOptionLabel={(option) => option.username || \"\"}\n            inputValue={username}\n            onInputChange={handleUsernameChange}\n            loading={searchLoading}\n            sx={{ flex: 1, width: { xs: \"100%\", sm: \"auto\" } }}\n            renderInput={(params) => (\n              <TextField\n                {...params}\n                autoFocus\n                label=\"Username\"\n                type=\"text\"\n                variant=\"outlined\"\n                sx={{ ...inputStyles, mt: 0 }}\n                required\n                disabled={disabled}\n                error={!!errors.username}\n                helperText={errors.username || `Search for a user to add to the ${context.name.toLowerCase()}`}\n                InputProps={{\n                  ...params.InputProps,\n                  endAdornment: (\n                    <>\n                      {searchLoading ? <CircularProgress color=\"inherit\" size={20} /> : null}\n                      {params.InputProps.endAdornment}\n                    </>\n                  ),\n                }}\n              />\n            )}\n            aria-label={`Search for a user to add to ${context.name.toLowerCase()}`}\n          />\n          <FormControl\n            sx={{ minWidth: { xs: \"100%\", sm: 150 }, mt: 0, ...selectStyles }}\n            error={!!errors.role}\n          >\n            <InputLabel>Role</InputLabel>\n            <Select\n              value={role}\n              onChange={handleRoleChange}\n              label=\"Role\"\n              disabled={disabled}\n            >\n              <MenuItem value=\"viewer\">Viewer</MenuItem>\n              <MenuItem value=\"moderator\">Moderator</MenuItem>\n              <MenuItem value=\"admin\">Admin</MenuItem>\n            </Select>\n            {errors.role && <FormHelperText>{errors.role}</FormHelperText>}\n          </FormControl>\n          <Button\n            variant=\"contained\"\n            onClick={handleAddMember}\n            sx={{\n              ...actionButtonStyles,\n              minWidth: { xs: \"100%\", sm: 120 },\n              fontSize: { xs: \"0.75rem\", sm: \"0.875rem\" },\n            }}\n            disabled={disabled || Object.keys(errors).some((key) => errors[key])}\n            aria-label={`Add member to ${context.name.toLowerCase()}`}\n          >\n            Add\n          </Button>\n        </Box>\n\n        <Typography\n          variant=\"h6\"\n          sx={{ mb: 2, fontSize: { xs: \"1.25rem\", md: \"1.5rem\" } }}\n        >\n          Current {context.name} Members\n        </Typography>\n        {members?.length > 0 ? (\n          <TableContainer component={Paper} sx={{ borderRadius: theme.shape.borderRadiusSmall }}>\n            <Table>\n              <TableHead>\n                <TableRow>\n                  <TableCell sx={{ fontSize: { xs: \"0.75rem\", md: \"0.875rem\" } }}>\n                    Username\n                  </TableCell>\n                  <TableCell sx={{ fontSize: { xs: \"0.75rem\", md: \"0.875rem\" } }}>\n                    Role\n                  </TableCell>\n                  <TableCell sx={{ fontSize: { xs: \"0.75rem\", md: \"0.875rem\" } }}>\n                    Joined At\n                  </TableCell>\n                  <TableCell sx={{ fontSize: { xs: \"0.75rem\", md: \"0.875rem\" } }}>\n                    Actions\n                  </TableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {members.map((member) => (\n                  <TableRow key={member.anonymous_id || member._id}>\n                    <TableCell>\n                      <Chip\n                        label={member.username || \"Unknown\"}\n                        size=\"small\"\n                        sx={{\n                          bgcolor: \"background.paper\",\n                          fontSize: { xs: \"0.75rem\", md: \"0.875rem\" },\n                        }}\n                      />\n                    </TableCell>\n                    <TableCell>\n                      <FormControl sx={{ minWidth: { xs: 100, sm: 120 }, ...selectStyles }}>\n                        <InputLabel>Role</InputLabel>\n                        <Select\n                          value={member.role}\n                          onChange={(e) => handleUpdateRole(member.username, e.target.value)}\n                          label=\"Role\"\n                          disabled={disabled || member.role === \"owner\"}\n                          size=\"small\"\n                        >\n                          <MenuItem value=\"viewer\">Viewer</MenuItem>\n                          <MenuItem value=\"moderator\">Moderator</MenuItem>\n                          <MenuItem value=\"admin\">Admin</MenuItem>\n                          {member.role === \"owner\" && (\n                            <MenuItem value=\"owner\" disabled>Owner</MenuItem>\n                          )}\n                        </Select>\n                      </FormControl>\n                    </TableCell>\n                    <TableCell sx={{ fontSize: { xs: \"0.75rem\", md: \"0.875rem\" } }}>\n                      {member.joined_at\n                        ? new Date(member.joined_at).toLocaleDateString()\n                        : \"Unknown\"}\n                    </TableCell>\n                    <TableCell>\n                      {member.role !== \"owner\" && (\n                        <IconButton\n                          onClick={() => handleRemoveMember(member.username)}\n                          disabled={disabled}\n                          aria-label={`Remove member ${member.username || \"Unknown\"} from ${context.name.toLowerCase()}`}\n                        >\n                          <Delete fontSize=\"small\" color=\"error\" />\n                        </IconButton>\n                      )}\n                    </TableCell>\n                  </TableRow>\n                ))}\n              </TableBody>\n            </Table>\n          </TableContainer>\n        ) : (\n          <Typography variant=\"body2\" color=\"text.secondary\">\n            No members in this {context.name.toLowerCase()} yet.\n          </Typography>\n        )}\n      </DialogContent>\n      <DialogActions>\n        <Button\n          variant=\"contained\"\n          onClick={onCancel}\n          sx={{\n            ...cancelButtonStyle,\n            minWidth: { xs: \"100%\", sm: 150 },\n            fontSize: { xs: \"0.75rem\", sm: \"0.875rem\" },\n          }}\n          disabled={disabled}\n          aria-label=\"Close\"\n        >\n          Close\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n};\n\nMemberFormDialog.propTypes = {\n  open: PropTypes.bool.isRequired,\n  title: PropTypes.string,\n  gateId: PropTypes.string,\n  classId: PropTypes.string,\n  boardId: PropTypes.string,\n  token: PropTypes.string,\n  onSave: PropTypes.func.isRequired,\n  onCancel: PropTypes.func.isRequired,\n  disabled: PropTypes.bool,\n  members: PropTypes.array.isRequired,\n  addMember: PropTypes.func.isRequired,\n  removeMember: PropTypes.func.isRequired,\n  updateMemberRole: PropTypes.func.isRequired,\n};\n\nexport default React.memo(MemberFormDialog);","import { get, post, put, del, handleApiError } from './apiClient';\n\n// Базовий шлях API\nconst BASE_GATE_PATH = '/api/v1/gates';\n\nexport const fetchGates = async (token, filters = {}, signal) => {\n  if (!token) throw new Error('Token is required');\n  try {\n    const response = await get(BASE_GATE_PATH, {\n      headers: { Authorization: `Bearer ${token}` },\n      params: filters,\n      signal: signal instanceof AbortSignal ? signal : undefined, // Validate signal\n    });\n    return response.data.content;\n  } catch (error) {\n    throw handleApiError(error);\n  }\n};\n\nexport const fetchGateById = async (gateId, token, signal) => {\n  if (!gateId || !token) throw new Error('Gate ID and token are required');\n  try {\n    const response = await get(`${BASE_GATE_PATH}/${gateId}`, {\n      headers: { Authorization: `Bearer ${token}` },\n      signal: signal instanceof AbortSignal ? signal : undefined,\n    });\n    return response.data.content;\n  } catch (error) {\n    throw handleApiError(error);\n  }\n};\n\nexport const createGate = async (gateData, token) => {\n  if (!gateData || !token) throw new Error('Gate data and token are required');\n  try {\n    const response = await post(BASE_GATE_PATH, gateData, {\n      headers: { Authorization: `Bearer ${token}` },\n    });\n    return response.data.content;\n  } catch (error) {\n    throw handleApiError(error);\n  }\n};\n\nexport const updateGate = async (gateId, gateData, token) => {\n  if (!gateId || !gateData || !token) throw new Error('Gate ID, data, and token are required');\n  try {\n    const response = await put(`${BASE_GATE_PATH}/${gateId}`, gateData, {\n      headers: { Authorization: `Bearer ${token}` },\n    });\n    return response.data.content;\n  } catch (error) {\n    throw handleApiError(error);\n  }\n};\n\nexport const updateGateStatus = async (gateId, statusData, token) => {\n  if (!gateId || !statusData || !token) throw new Error('Gate ID, status data, and token are required');\n  try {\n    const response = await put(`${BASE_GATE_PATH}/${gateId}/status`, statusData, {\n      headers: { Authorization: `Bearer ${token}` },\n    });\n    return response.data.content;\n  } catch (error) {\n    throw handleApiError(error);\n  }\n};\n\nexport const deleteGate = async (gateId, token) => {\n  if (!gateId || !token) throw new Error('Gate ID and token are required');\n  try {\n    const response = await del(`${BASE_GATE_PATH}/${gateId}`, {\n      headers: { Authorization: `Bearer ${token}` },\n    });\n    return response.data.content;\n  } catch (error) {\n    throw handleApiError(error);\n  }\n};\n\nexport const addGateMember = async (gateId, memberData, token) => {\n  if (!gateId || !memberData || !token) throw new Error('Gate ID, member data, and token are required');\n  try {\n    const response = await post(`${BASE_GATE_PATH}/${gateId}/members`, memberData, {\n      headers: { Authorization: `Bearer ${token}` },\n    });\n    return response.data.content;\n  } catch (error) {\n    throw handleApiError(error);\n  }\n};\n\nexport const removeGateMember = async (gateId, username, token) => {\n  if (!gateId || !username || !token) throw new Error('Gate ID, username, and token are required');\n  try {\n    const response = await del(`${BASE_GATE_PATH}/${gateId}/members/${encodeURIComponent(username)}`, {\n      headers: { Authorization: `Bearer ${token}` },\n    });\n    return response.data.content;\n  } catch (error) {\n    throw handleApiError(error);\n  }\n};\n\nexport const updateGateMember = async (gateId, username, data, token) => {\n  if (!gateId || !username || !data || !token) throw new Error('Gate ID, username, data, and token are required');\n  try {\n    const response = await put(`${BASE_GATE_PATH}/${gateId}/members/${encodeURIComponent(username)}`, data, {\n      headers: { Authorization: `Bearer ${token}` },\n    });\n    return response.data.content;\n  } catch (error) {\n    throw handleApiError(error);\n  }\n};\n\nexport const fetchGateMembers = async (gateId, token, signal) => {\n  if (!gateId || !token) throw new Error('Gate ID and token are required');\n  try {\n    const response = await get(`${BASE_GATE_PATH}/${gateId}/members`, {\n      headers: { Authorization: `Bearer ${token}` },\n      signal: signal instanceof AbortSignal ? signal : undefined,\n    });\n    return response.data.content;\n  } catch (error) {\n    throw handleApiError(error);\n  }\n};\n\nexport const favoriteGate = async (gateId, token) => {\n  if (!gateId || !token) throw new Error('Gate ID and token are required');\n  try {\n    const response = await post(`${BASE_GATE_PATH}/${gateId}/favorite`, {}, {\n      headers: { Authorization: `Bearer ${token}` },\n    });\n    return response.data.content;\n  } catch (error) {\n    throw handleApiError(error);\n  }\n};\n\nexport const unfavoriteGate = async (gateId, token) => {\n  if (!gateId || !token) throw new Error('Gate ID and token are required');\n  try {\n    const response = await post(`${BASE_GATE_PATH}/${gateId}/unfavorite`, {}, {\n      headers: { Authorization: `Bearer ${token}` },\n    });\n    return response.data.content;\n  } catch (error) {\n    throw handleApiError(error);\n  }\n};","/**\n * @module useGates\n * @description React hook for managing gates and their members with caching and debounced API calls.\n */\nimport { useState, useCallback, useMemo, useEffect } from 'react';\nimport debounce from 'lodash/debounce';\nimport {\n  fetchGates,\n  fetchGateById,\n  createGate,\n  updateGate,\n  updateGateStatus,\n  deleteGate,\n  addGateMember,\n  removeGateMember,\n  updateGateMember,\n  favoriteGate,\n  unfavoriteGate,\n  fetchGateMembers,\n} from '../api/gatesApi';\n\n// Constants\nconst ERROR_MESSAGES = {\n  AUTH_REQUIRED: 'Authentication required.',\n  GATE_ID_MISSING: 'Gate ID is missing.',\n  GATE_NAME_MISSING: 'Gate name is missing.',\n  GATE_NOT_FOUND: 'Gate not found.',\n  STATUS_DATA_MISSING: 'Status data is missing.',\n  USERNAME_MISSING: 'Username is missing.',\n  ROLE_MISSING: 'Role is missing.',\n  GENERIC: 'An error occurred.',\n};\n\nconst CONFIG = {\n  MAX_CACHE_SIZE: 10,\n  CACHE_EXPIRY_MS: 30 * 60 * 1000, // 30 minutes\n  DEBOUNCE_MS: 300,\n  DEFAULT_LIMIT: 50,\n  CACHE_VERSION: 'v1',\n};\n\n// LRU Cache implementation\nclass LRUCache {\n  constructor(capacity) {\n    this.capacity = capacity;\n    this.cache = new Map();\n  }\n\n  get(key) {\n    if (!this.cache.has(key)) return null;\n    const { value, timestamp } = this.cache.get(key);\n    if (Date.now() - timestamp > CONFIG.CACHE_EXPIRY_MS) {\n      this.cache.delete(key);\n      return null;\n    }\n    this.cache.delete(key);\n    this.cache.set(key, { value, timestamp });\n    return value;\n  }\n\n  set(key, value) {\n    if (this.cache.size >= this.capacity) {\n      const firstKey = this.cache.keys().next().value;\n      this.cache.delete(firstKey);\n    }\n    this.cache.set(key, { value, timestamp: Date.now() });\n  }\n\n  clear() {\n    this.cache.clear();\n  }\n}\n\nconst gateCache = new LRUCache(CONFIG.MAX_CACHE_SIZE);\n\n/**\n * Hook for managing gates and their members.\n * @param {string|null} token - Authentication token.\n * @param {function} onLogout - Logout callback.\n * @param {function} navigate - Navigation callback.\n * @returns {object} Gate management functions and state.\n */\nexport const useGates = (token, onLogout, navigate) => {\n  const [gates, setGates] = useState([]);\n  const [gate, setGate] = useState(null);\n  const [members, setMembers] = useState([]);\n  const [stats, setStats] = useState(null);\n  const [pagination, setPagination] = useState({ page: 1, limit: CONFIG.DEFAULT_LIMIT, total: 0, hasMore: true });\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  const handleError = useCallback((err, message) => {\n    if (err.name === 'AbortError') return Promise.resolve(null);\n    const status = err.status || 500;\n    if (status === 401 || status === 403) {\n      onLogout('Session expired. Please log in again.');\n      navigate('/login');\n    }\n    const errorMessage = message || err.message || ERROR_MESSAGES.GENERIC;\n    setError(errorMessage);\n    return Promise.reject(new Error(errorMessage));\n  }, [onLogout, navigate]);\n\n  const normalizeMembers = useCallback((members = []) => {\n    return members.map((member) => ({\n      member_id: member.user?.anonymous_id || member.anonymous_id || '',\n      username: member.user?.username || 'Unknown',\n      role: member.role || 'viewer',\n      joined_at: member.joined_at || null,\n      avatar: member.user?.avatar || null,\n      total_points: member.user?.total_points || 0,\n      anonymous_id: member.user?.anonymous_id || member.anonymous_id || '',\n    }));\n  }, []);\n\n  const normalizeClasses = useCallback((classes = []) => {\n    return classes.map((cls) => ({\n      class_id: cls.class_id || '',\n      name: cls.name || 'Untitled Class',\n      description: cls.description || '',\n      gate_id: cls.gate_id || '',\n      creator_id: cls.creator_id || '',\n      visibility: cls.visibility || 'private',\n      access: cls.access || { is_public: false },\n      settings: cls.settings || {},\n      stats: {\n        board_count: cls.board_count || 0,\n        tweet_count: cls.tweet_count || 0,\n        member_count: cls.members?.length || 0,\n      },\n      members: cls.members || [],\n      favorited_by: cls.favorited_by || [],\n      is_favorited: cls.is_favorited || false,\n      tags: cls.tags || [],\n      status: cls.status || 'active',\n      created_at: cls.created_at || null,\n      updated_at: cls.updated_at || null,\n    }));\n  }, []);\n\n  const resetState = useCallback(() => {\n    setGates([]);\n    setGate(null);\n    setMembers([]);\n    setStats(null);\n    setPagination({ page: 1, limit: CONFIG.DEFAULT_LIMIT, total: 0, hasMore: true });\n    setError(null);\n    gateCache.clear();\n  }, []);\n\n  const fetchGatesList = useCallback(async (filters = {}, signal, append = false) => {\n    if (!token) return handleError(new Error(), ERROR_MESSAGES.AUTH_REQUIRED);\n\n    const { page = 1, limit = CONFIG.DEFAULT_LIMIT } = filters;\n    const cacheKey = `${CONFIG.CACHE_VERSION}:gates:${JSON.stringify({ ...filters, page, limit })}`;\n    const cachedData = gateCache.get(cacheKey);\n\n    if (cachedData && !append) {\n      setGates(cachedData.gates || []);\n      setPagination(cachedData.pagination || { page, limit, total: 0, hasMore: true });\n      return Promise.resolve(cachedData);\n    }\n\n    setLoading(true);\n    setError(null);\n\n    try {\n      const data = await fetchGates(token, { ...filters, page, limit }, signal);\n      if (!data) throw new Error('No data received');\n      const newGates = data.gates || [];\n      setGates((prev) => (append ? [...prev, ...newGates] : newGates));\n      setPagination({\n        page: data.pagination?.page || page,\n        limit: data.pagination?.limit || limit,\n        total: data.pagination?.total || 0,\n        hasMore: newGates.length === limit,\n      });\n      gateCache.set(cacheKey, data);\n      return Promise.resolve(data);\n    } catch (err) {\n      if (err.name === 'AbortError') return Promise.resolve(null);\n      return handleError(err, ERROR_MESSAGES.GENERIC);\n    } finally {\n      setLoading(false);\n    }\n  }, [token, handleError]);\n\n  const debouncedFetchGatesList = useMemo(() => {\n    return debounce((filters, signal, append, callback) => {\n      fetchGatesList(filters, signal, append)\n        .then((result) => callback(null, result))\n        .catch((err) => callback(err, null));\n    }, CONFIG.DEBOUNCE_MS);\n  }, [fetchGatesList]);\n\n  const fetchGate = useCallback(async (gateId, signal) => {\n    if (!token || !gateId?.trim()) {\n      return handleError(new Error(), token ? ERROR_MESSAGES.GATE_ID_MISSING : ERROR_MESSAGES.AUTH_REQUIRED);\n    }\n\n    const cacheKey = `${CONFIG.CACHE_VERSION}:gate:${gateId}`;\n    const cachedData = gateCache.get(cacheKey);\n\n    if (cachedData) {\n      setGate(cachedData);\n      setMembers(normalizeMembers(cachedData.members));\n      setStats(cachedData.stats || null);\n      return Promise.resolve(cachedData);\n    }\n\n    setLoading(true);\n    setError(null);\n\n    try {\n      const gateData = await fetchGateById(gateId, token, signal);\n      if (!gateData) throw new Error('No gate data received');\n      const normalizedData = {\n        ...gateData,\n        members: normalizeMembers(gateData.members || []),\n        classes: normalizeClasses(gateData.classes || []),\n      };\n      setGate(normalizedData);\n      setMembers(normalizedData.members);\n      setStats(gateData.stats || null);\n      gateCache.set(cacheKey, normalizedData);\n      return Promise.resolve(normalizedData);\n    } catch (err) {\n      if (err.name === 'AbortError') return Promise.resolve(null);\n      return handleError(err, ERROR_MESSAGES.GATE_NOT_FOUND);\n    } finally {\n      setLoading(false);\n    }\n  }, [token, handleError, normalizeMembers, normalizeClasses]);\n\n  const createNewGate = useCallback(async (gateData) => {\n    if (!token || !gateData?.name?.trim()) {\n      return handleError(new Error(), token ? ERROR_MESSAGES.GATE_NAME_MISSING : ERROR_MESSAGES.AUTH_REQUIRED);\n    }\n\n    setLoading(true);\n    setError(null);\n\n    try {\n      const newGate = await createGate(\n        {\n          ...gateData,\n          is_public: gateData.is_public ?? true,\n          visibility: gateData.visibility || (gateData.is_public ? 'public' : 'private'),\n          settings: {\n            class_creation_cost: gateData.settings?.class_creation_cost || 100,\n            board_creation_cost: gateData.settings?.board_creation_cost || 50,\n            max_members: gateData.settings?.max_members || 1000,\n            ai_moderation_enabled: gateData.settings?.ai_moderation_enabled ?? true,\n            ...gateData.settings,\n          },\n        },\n        token\n      );\n      if (!newGate) throw new Error('Failed to create gate');\n      setGates((prev) => [...prev, newGate]);\n      gateCache.clear();\n      return Promise.resolve(newGate);\n    } catch (err) {\n      return handleError(err, ERROR_MESSAGES.GENERIC);\n    } finally {\n      setLoading(false);\n    }\n  }, [token, handleError]);\n\n  const updateExistingGate = useCallback(async (gateId, gateData) => {\n    if (!token || !gateId?.trim() || !gateData?.name?.trim()) {\n      return handleError(new Error(), !token ? ERROR_MESSAGES.AUTH_REQUIRED : !gateId ? ERROR_MESSAGES.GATE_ID_MISSING : ERROR_MESSAGES.GATE_NAME_MISSING);\n    }\n\n    setLoading(true);\n    setError(null);\n\n    try {\n      const { gate_id, ...updateData } = gateData;\n      const updatedGate = await updateGate(gateId, updateData, token);\n      if (!updatedGate) throw new Error('Failed to update gate');\n      setGates((prev) => prev.map((g) => (g.gate_id === gateId ? updatedGate : g)));\n      setGate((prev) => (prev?.gate_id === gateId ? updatedGate : prev));\n      gateCache.clear();\n      return Promise.resolve(updatedGate);\n    } catch (err) {\n      return handleError(err, ERROR_MESSAGES.GENERIC);\n    } finally {\n      setLoading(false);\n    }\n  }, [token, handleError]);\n\n  const updateGateStatusById = useCallback(async (gateId, statusData) => {\n    if (!token || !gateId?.trim() || !statusData) {\n      return handleError(new Error(), !token ? ERROR_MESSAGES.AUTH_REQUIRED : !gateId ? ERROR_MESSAGES.GATE_ID_MISSING : ERROR_MESSAGES.STATUS_DATA_MISSING);\n    }\n\n    setLoading(true);\n    setError(null);\n\n    try {\n      const updatedGate = await updateGateStatus(gateId, statusData, token);\n      if (!updatedGate) throw new Error('Failed to update gate status');\n      setGates((prev) => prev.map((g) => (g.gate_id === gateId ? updatedGate : g)));\n      setGate((prev) => (prev?.gate_id === gateId ? updatedGate : prev));\n      gateCache.clear();\n      return Promise.resolve(updatedGate);\n    } catch (err) {\n      return handleError(err, ERROR_MESSAGES.GENERIC);\n    } finally {\n      setLoading(false);\n    }\n  }, [token, handleError]);\n\n  const deleteExistingGate = useCallback(async (gateId) => {\n    if (!token || !gateId?.trim()) {\n      return handleError(new Error(), token ? ERROR_MESSAGES.GATE_ID_MISSING : ERROR_MESSAGES.AUTH_REQUIRED);\n    }\n\n    setLoading(true);\n    setError(null);\n\n    try {\n      await deleteGate(gateId, token);\n      setGates((prev) => prev.filter((g) => g.gate_id !== gateId));\n      setGate((prev) => (prev?.gate_id === gateId ? null : prev));\n      gateCache.clear();\n      return Promise.resolve(true);\n    } catch (err) {\n      return handleError(err, ERROR_MESSAGES.GENERIC);\n    } finally {\n      setLoading(false);\n    }\n  }, [token, handleError]);\n\n  const addMemberToGate = useCallback(async (gateId, { username, role = 'viewer' }) => {\n    if (!token || !gateId?.trim() || !username?.trim()) {\n      return handleError(new Error(), !token ? ERROR_MESSAGES.AUTH_REQUIRED : !gateId ? ERROR_MESSAGES.GATE_ID_MISSING : ERROR_MESSAGES.USERNAME_MISSING);\n    }\n\n    setLoading(true);\n    setError(null);\n\n    try {\n      const updatedGate = await addGateMember(gateId, { username, role }, token);\n      if (!updatedGate) throw new Error('Failed to add member');\n      setMembers(normalizeMembers(updatedGate.members));\n      setGate((prev) => (prev?.gate_id === gateId ? updatedGate : prev));\n      setGates((prev) => prev.map((g) => (g.gate_id === gateId ? updatedGate : g)));\n      gateCache.clear();\n      return Promise.resolve(updatedGate);\n    } catch (err) {\n      return handleError(err, ERROR_MESSAGES.GENERIC);\n    } finally {\n      setLoading(false);\n    }\n  }, [token, handleError, normalizeMembers]);\n\n  const removeMemberFromGate = useCallback(async (gateId, username) => {\n    if (!token || !gateId?.trim() || !username?.trim()) {\n      return handleError(new Error(), !token ? ERROR_MESSAGES.AUTH_REQUIRED : !gateId ? ERROR_MESSAGES.GATE_ID_MISSING : ERROR_MESSAGES.USERNAME_MISSING);\n    }\n\n    setLoading(true);\n    setError(null);\n\n    try {\n      const updatedGate = await removeGateMember(gateId, username, token);\n      if (!updatedGate) throw new Error('Failed to remove member');\n      setMembers(normalizeMembers(updatedGate.members));\n      setGate((prev) => (prev?.gate_id === gateId ? updatedGate : prev));\n      setGates((prev) => prev.map((g) => (g.gate_id === gateId ? updatedGate : g)));\n      gateCache.clear();\n      return Promise.resolve(updatedGate);\n    } catch (err) {\n      return handleError(err, ERROR_MESSAGES.GENERIC);\n    } finally {\n      setLoading(false);\n    }\n  }, [token, handleError, normalizeMembers]);\n\n  const updateMemberRole = useCallback(async (gateId, username, role) => {\n    if (!token || !gateId?.trim() || !username?.trim() || !role?.trim()) {\n      return handleError(new Error(), !token ? ERROR_MESSAGES.AUTH_REQUIRED : !gateId ? ERROR_MESSAGES.GATE_ID_MISSING : !username ? ERROR_MESSAGES.USERNAME_MISSING : ERROR_MESSAGES.ROLE_MISSING);\n    }\n\n    setLoading(true);\n    setError(null);\n\n    try {\n      const updatedGate = await updateGateMember(gateId, username, { role }, token);\n      if (!updatedGate) throw new Error('Failed to update member role');\n      setMembers(normalizeMembers(updatedGate.members));\n      setGate((prev) => (prev?.gate_id === gateId ? updatedGate : prev));\n      setGates((prev) => prev.map((g) => (g.gate_id === gateId ? updatedGate : g)));\n      gateCache.clear();\n      return Promise.resolve(updatedGate);\n    } catch (err) {\n      return handleError(err, ERROR_MESSAGES.GENERIC);\n    } finally {\n      setLoading(false);\n    }\n  }, [token, handleError, normalizeMembers]);\n\n  const fetchGateMembersList = useCallback(async (gateId, signal) => {\n    if (!token || !gateId?.trim()) {\n      return handleError(new Error(), token ? ERROR_MESSAGES.GATE_ID_MISSING : ERROR_MESSAGES.AUTH_REQUIRED);\n    }\n\n    setLoading(true);\n    setError(null);\n\n    try {\n      const data = await fetchGateMembers(gateId, token, signal);\n      if (!data) throw new Error('No members data received');\n      setMembers(normalizeMembers(data.members));\n      return Promise.resolve(data);\n    } catch (err) {\n      if (err.name === 'AbortError') return Promise.resolve(null);\n      return handleError(err, ERROR_MESSAGES.GENERIC);\n    } finally {\n      setLoading(false);\n    }\n  }, [token, handleError, normalizeMembers]);\n\n  const toggleFavoriteGate = useCallback(async (gateId, isFavorited) => {\n    if (!token || !gateId?.trim()) {\n      return handleError(new Error(), token ? ERROR_MESSAGES.GATE_ID_MISSING : ERROR_MESSAGES.AUTH_REQUIRED);\n    }\n\n    setLoading(true);\n    setError(null);\n\n    try {\n      const updatedGate = isFavorited ? await unfavoriteGate(gateId, token) : await favoriteGate(gateId, token);\n      if (!updatedGate) throw new Error('Failed to toggle favorite status');\n      setGates((prev) => prev.map((g) => (g.gate_id === gateId ? updatedGate : g)));\n      setGate((prev) => (prev?.gate_id === gateId ? updatedGate : prev));\n      gateCache.clear();\n      return Promise.resolve(updatedGate);\n    } catch (err) {\n      return handleError(err, ERROR_MESSAGES.GENERIC);\n    } finally {\n      setLoading(false);\n    }\n  }, [token, handleError]);\n\n  useEffect(() => {\n    if (!token) {\n      resetState();\n      return;\n    }\n\n    const controller = new AbortController();\n    debouncedFetchGatesList({}, controller.signal, false, (err, result) => {\n      if (err && err.name !== 'AbortError') {\n        setError(err.message || ERROR_MESSAGES.GENERIC);\n      }\n    });\n\n    return () => {\n      controller.abort();\n      debouncedFetchGatesList.cancel();\n    };\n  }, [token, resetState, debouncedFetchGatesList]);\n\n  return useMemo(() => ({\n    gates,\n    gate,\n    members,\n    stats,\n    pagination,\n    loading,\n    error,\n    fetchGatesList: debouncedFetchGatesList,\n    fetchGate,\n    createNewGate,\n    updateExistingGate,\n    updateGateStatusById,\n    deleteExistingGate,\n    addMemberToGate,\n    removeMemberFromGate,\n    updateMemberRole,\n    fetchGateMembersList,\n    toggleFavoriteGate,\n    resetState,\n  }), [\n    gates,\n    gate,\n    members,\n    stats,\n    pagination,\n    loading,\n    error,\n    debouncedFetchGatesList,\n    fetchGate,\n    createNewGate,\n    updateExistingGate,\n    updateGateStatusById,\n    deleteExistingGate,\n    addMemberToGate,\n    removeMemberFromGate,\n    updateMemberRole,\n    fetchGateMembersList,\n    toggleFavoriteGate,\n    resetState,\n  ]);\n};\n\nexport default useGates;","export const validateField = (name, value, rules) => {\n  const errors = [];\n\n  if (rules.required && !value?.toString().trim()) {\n    errors.push(`${name} is required.`);\n  }\n\n  if (rules.minLength && value.length < rules.minLength) {\n    errors.push(`${name} must be at least ${rules.minLength} characters long.`);\n  }\n\n  if (rules.maxLength && value.length > rules.maxLength) {\n    errors.push(`${name} cannot exceed ${rules.maxLength} characters.`);\n  }\n\n  if (rules.minValue && Number(value) < rules.minValue) {\n    errors.push(`${name} must be at least ${rules.minValue}.`);\n  }\n\n  if (rules.maxValue && Number(value) > rules.maxValue) {\n    errors.push(`${name} cannot exceed ${rules.maxValue}.`);\n  }\n\n  if (rules.validRoles && !rules.validRoles.includes(value)) {\n    errors.push(`${name} must be one of: ${rules.validRoles.join(\", \")}.`);\n  }\n\n  return errors;\n};\n\nexport const validateForm = (fields) => {\n  const errors = {};\n  Object.entries(fields).forEach(([key, { value, rules }]) => {\n    const fieldErrors = validateField(key, value, rules);\n    if (fieldErrors.length > 0) {\n      errors[key] = fieldErrors[0];\n    }\n  });\n  return errors;\n};","import React, { useState, useCallback, useMemo, useRef, useEffect } from \"react\";\nimport {\n  Box,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogActions,\n  TextField,\n  FormControl,\n  InputLabel,\n  Select,\n  MenuItem,\n  FormHelperText,\n  Button,\n  Switch,\n  FormControlLabel,\n  Tooltip,\n  useTheme,\n} from \"@mui/material\";\nimport PropTypes from \"prop-types\";\nimport { validateForm, validateField } from \"../../utils/validations\";\nimport {\n  inputStyles,\n  selectStyles,\n  actionButtonStyles,\n  cancelButtonStyle,\n} from \"../../styles/BaseStyles\";\n\nconst BoardFormDialog = ({\n  open,\n  title,\n  board,\n  setBoard,\n  onSave,\n  onCancel,\n  disabled,\n  gates = [],\n  classes = [],\n  currentClass,\n  initialClassId,\n  fixedClassId,\n  fixedGateId,\n}) => {\n  const theme = useTheme();\n  const [errors, setErrors] = useState({});\n  const firstInputRef = useRef(null);\n\n  // Focus the first input when the dialog opens\n  useEffect(() => {\n    if (open && firstInputRef.current) {\n      firstInputRef.current.focus();\n    }\n  }, [open]);\n\n  // Initialize board.class_id and board.gate_id\n  useEffect(() => {\n    if (open) {\n      setBoard((prev) => {\n        const newState = { ...prev };\n        // Apply fixedClassId and fixedGateId if provided (e.g., from ClassPage)\n        if (fixedClassId) {\n          newState.class_id = fixedClassId;\n        } else if (currentClass && !prev.class_id && !prev.gate_id) {\n          newState.class_id = initialClassId || currentClass.class_id || null;\n        }\n        if (fixedGateId !== undefined) {\n          newState.gate_id = fixedGateId;\n        } else if (currentClass && !prev.gate_id && !fixedClassId) {\n          newState.gate_id =\n            prev.class_id === currentClass.class_id ? currentClass.gate_id : null;\n        }\n        return newState;\n      });\n    }\n  }, [open, currentClass, initialClassId, fixedClassId, fixedGateId, setBoard]);\n\n  // Filter classes based on selected gate_id (or fixedGateId)\n  const filteredClasses = useMemo(() => {\n    if (fixedClassId) return classes.filter((cls) => cls.class_id === fixedClassId);\n    if (!board.gate_id && !fixedGateId) return classes;\n    const gateId = fixedGateId !== undefined ? fixedGateId : board.gate_id;\n    return classes.filter((cls) => cls.gate_id === gateId || !cls.gate_id);\n  }, [board.gate_id, classes, fixedClassId, fixedGateId]);\n\n  // Determine if gate_id field should be disabled\n  const isGateDisabled = useMemo(() => {\n    if (fixedGateId !== undefined) return true; // Disable if fixedGateId is provided\n    if (!board.class_id) return false;\n    const selectedClass = classes.find((cls) => cls.class_id === board.class_id);\n    return !!selectedClass; // Disable gate if any class is selected\n  }, [board.class_id, classes, fixedGateId]);\n\n  // Determine if class_id field should be disabled\n  const isClassDisabled = useMemo(() => {\n    if (fixedClassId) return true; // Disable if fixedClassId is provided\n    if (!board.gate_id && fixedGateId === undefined) return false;\n    return filteredClasses.length === 0; // Disable class if no classes match the gate\n  }, [board.gate_id, filteredClasses, fixedClassId, fixedGateId]);\n\n  // Validation rules\n  const validationRules = useMemo(\n    () => ({\n      name: {\n        value: board.name || \"\",\n        rules: { required: true, minLength: 3, maxLength: 100 },\n      },\n      description: {\n        value: board.description || \"\",\n        rules: { maxLength: 1000 },\n      },\n      visibility: {\n        value: board.visibility || \"private\",\n        rules: { required: true, enum: [\"public\", \"private\"] },\n      },\n      type: {\n        value: board.type || \"personal\",\n        rules: { required: true, enum: [\"personal\", \"group\"] },\n      },\n      class_id: {\n        value: board.class_id || \"\",\n        rules: {\n          required:\n            board.visibility === \"public\" && !board.gate_id && classes.length > 0 && !fixedClassId,\n        },\n      },\n      gate_id: {\n        value: board.gate_id || \"\",\n        rules: {\n          required:\n            board.visibility === \"public\" && !board.class_id && gates.length > 0 && fixedGateId === undefined,\n        },\n      },\n      \"settings.max_tweets\": {\n        value: board.settings?.max_tweets || 100,\n        rules: { required: true, minValue: 1, maxValue: 10000 },\n      },\n      \"settings.tweet_cost\": {\n        value: board.settings?.tweet_cost || 1,\n        rules: { required: true, minValue: 0 },\n      },\n      \"settings.max_members\": {\n        value: board.settings?.max_members || 50,\n        rules: { required: true, minValue: 1, maxValue: 10000 },\n      },\n      \"settings.ai_moderation_enabled\": {\n        value: board.settings?.ai_moderation_enabled || false,\n        rules: {},\n      },\n    }),\n    [board, gates, classes, fixedClassId, fixedGateId]\n  );\n\n  const handleChange = useCallback(\n    (e) => {\n      const { name, value, type, checked } = e.target;\n      let newValue = type === \"checkbox\" ? checked : value;\n\n      // Prevent changes to class_id or gate_id if fixed\n      if ((name === \"class_id\" && fixedClassId) || (name === \"gate_id\" && fixedGateId !== undefined)) {\n        return;\n      }\n\n      if (name === \"gate_id\" || name === \"class_id\") {\n        newValue = value || null; // Convert empty string to null\n      }\n\n      if (name.startsWith(\"settings.\")) {\n        const settingKey = name.split(\".\")[1];\n        newValue = settingKey === \"ai_moderation_enabled\" ? newValue : Number(newValue) || 0;\n        setBoard((prev) => ({\n          ...prev,\n          settings: { ...prev.settings, [settingKey]: newValue },\n        }));\n      } else {\n        setBoard((prev) => {\n          const newState = {\n            ...prev,\n            [name]: newValue,\n            is_public: name === \"visibility\" ? value === \"public\" : prev.is_public,\n          };\n          // If class_id changes, update gate_id to match the selected class's gate_id\n          if (name === \"class_id\" && classes.length > 0 && !fixedGateId) {\n            const selectedClass = classes.find((cls) => cls.class_id === newValue);\n            newState.gate_id = selectedClass?.gate_id || null;\n          }\n          // If gate_id changes, reset class_id if no matching classes\n          if (name === \"gate_id\" && newValue && !fixedClassId) {\n            const availableClasses = classes.filter(\n              (cls) => cls.gate_id === newValue || !cls.gate_id\n            );\n            if (availableClasses.length === 0) {\n              newState.class_id = null;\n            } else if (prev.class_id) {\n              const selectedClass = classes.find((cls) => cls.class_id === prev.class_id);\n              if (selectedClass?.gate_id && selectedClass.gate_id !== newValue) {\n                newState.class_id = null;\n              }\n            }\n          }\n          return newState;\n        });\n      }\n\n      const fieldRules = validationRules[name]?.rules || {};\n      const fieldErrors = validateField(name, newValue, fieldRules, {\n        visibility: name === \"visibility\" ? value : board.visibility,\n        class_id: name === \"class_id\" ? newValue : board.class_id,\n        gate_id: name === \"gate_id\" ? newValue : board.gate_id,\n      });\n      setErrors((prev) => ({\n        ...prev,\n        [name]: fieldErrors[0] || null,\n        gate_id: validateField(\n          \"gate_id\",\n          name === \"gate_id\" ? newValue : board.gate_id,\n          validationRules.gate_id.rules,\n          {\n            visibility: name === \"visibility\" ? value : board.visibility,\n            class_id: name === \"class_id\" ? newValue : board.class_id,\n          }\n        )[0] || null,\n        class_id: validateField(\n          \"class_id\",\n          name === \"class_id\" ? newValue : board.class_id,\n          validationRules.class_id.rules,\n          {\n            visibility: name === \"visibility\" ? value : board.visibility,\n            gate_id: name === \"gate_id\" ? newValue : board.gate_id,\n          }\n        )[0] || null,\n      }));\n    },\n    [setBoard, board, validationRules, classes, fixedClassId, fixedGateId]\n  );\n\n  const handleSave = useCallback(() => {\n    const formErrors = validateForm(validationRules);\n    if (Object.keys(formErrors).length > 0) {\n      setErrors(formErrors);\n      return;\n    }\n    onSave();\n  }, [onSave, validationRules]);\n\n  return (\n    <Dialog\n      open={open}\n      onClose={onCancel}\n      maxWidth=\"sm\"\n      fullWidth\n      sx={{\n        \"& .MuiDialog-paper\": {\n          borderRadius: theme.shape.borderRadiusMedium,\n          p: { xs: 2, md: 3 },\n        },\n      }}\n      aria-labelledby=\"board-form-dialog-title\"\n      aria-describedby=\"board-form-dialog-description\"\n    >\n      <DialogTitle\n        id=\"board-form-dialog-title\"\n        sx={{ fontSize: { xs: \"1.25rem\", md: \"1.5rem\" } }}\n      >\n        {title}\n      </DialogTitle>\n      <DialogContent>\n        <Box\n          sx={{\n            display: \"flex\",\n            flexDirection: \"column\",\n            gap: { xs: 2, md: 3 },\n            mt: 2,\n          }}\n        >\n          <Tooltip title=\"Enter a unique name for the board\" placement=\"right\">\n            <TextField\n              label=\"Board Name\"\n              name=\"name\"\n              value={board.name || \"\"}\n              onChange={handleChange}\n              fullWidth\n              required\n              error={!!errors.name}\n              helperText={errors.name}\n              sx={{ ...inputStyles, mt: 0 }}\n              disabled={disabled}\n              inputProps={{ maxLength: 100 }}\n              inputRef={firstInputRef}\n              aria-label=\"Board name\"\n              aria-describedby=\"name-tooltip\"\n            />\n          </Tooltip>\n          <Tooltip title=\"Provide a description of the board's purpose\" placement=\"right\">\n            <TextField\n              label=\"Description\"\n              name=\"description\"\n              value={board.description || \"\"}\n              onChange={handleChange}\n              fullWidth\n              multiline\n              rows={4}\n              error={!!errors.description}\n              helperText={errors.description}\n              sx={{ ...inputStyles, mt: 0 }}\n              disabled={disabled}\n              inputProps={{ maxLength: 1000 }}\n              aria-label=\"Board description\"\n              aria-describedby=\"description-tooltip\"\n            />\n          </Tooltip>\n          <Tooltip\n            title=\"Public boards are visible to everyone; private boards are restricted to members\"\n            placement=\"right\"\n          >\n            <FormControl\n              fullWidth\n              error={!!errors.visibility}\n              disabled={disabled}\n              sx={{ ...selectStyles, mt: 0 }}\n            >\n              <InputLabel id=\"visibility-label\">Visibility</InputLabel>\n              <Select\n                labelId=\"visibility-label\"\n                name=\"visibility\"\n                value={board.visibility || \"private\"}\n                onChange={handleChange}\n                label=\"Visibility\"\n                aria-label=\"Board visibility\"\n                aria-describedby=\"visibility-tooltip\"\n              >\n                <MenuItem value=\"public\">Public</MenuItem>\n                <MenuItem value=\"private\">Private</MenuItem>\n              </Select>\n              {errors.visibility && <FormHelperText>{errors.visibility}</FormHelperText>}\n            </FormControl>\n          </Tooltip>\n          <Tooltip\n            title=\"Personal boards are managed by individuals; group boards allow collaboration\"\n            placement=\"right\"\n          >\n            <FormControl\n              fullWidth\n              error={!!errors.type}\n              disabled={disabled}\n              sx={{ ...selectStyles, mt: 0 }}\n            >\n              <InputLabel id=\"type-label\">Type</InputLabel>\n              <Select\n                labelId=\"type-label\"\n                name=\"type\"\n                value={board.type || \"personal\"}\n                onChange={handleChange}\n                label=\"Type\"\n                aria-label=\"Board type\"\n                aria-describedby=\"type-tooltip\"\n              >\n                <MenuItem value=\"personal\">Personal</MenuItem>\n                <MenuItem value=\"group\">Group</MenuItem>\n              </Select>\n              {errors.type && <FormHelperText>{errors.type}</FormHelperText>}\n            </FormControl>\n          </Tooltip>\n          {board.visibility === \"public\" && (\n            <>\n              {classes.length > 0 && (\n                <Tooltip\n                  title={\n                    fixedClassId\n                      ? \"Class is fixed for this board\"\n                      : \"Select a class to associate the board; required if no gate is selected\"\n                  }\n                  placement=\"right\"\n                >\n                  <FormControl\n                    fullWidth\n                    error={!!errors.class_id}\n                    disabled={disabled || isClassDisabled}\n                    sx={{ ...selectStyles, mt: 0 }}\n                  >\n                    <InputLabel id=\"class-label\">Class</InputLabel>\n                    <Select\n                      labelId=\"class-label\"\n                      name=\"class_id\"\n                      value={board.class_id || \"\"}\n                      onChange={handleChange}\n                      label=\"Class\"\n                      aria-label=\"Select class for public board\"\n                      aria-describedby=\"class-tooltip\"\n                    >\n                      <MenuItem value=\"\">None</MenuItem>\n                      {filteredClasses.map((cls) => (\n                        <MenuItem key={cls.class_id} value={cls.class_id}>\n                          {cls.name}\n                        </MenuItem>\n                      ))}\n                    </Select>\n                    {errors.class_id && <FormHelperText>{errors.class_id}</FormHelperText>}\n                  </FormControl>\n                </Tooltip>\n              )}\n              {gates.length > 0 && (\n                <Tooltip\n                  title={\n                    fixedGateId !== undefined\n                      ? \"Gate is fixed for this board\"\n                      : \"Select a gate to restrict access; disabled if a class is selected\"\n                  }\n                  placement=\"right\"\n                >\n                  <FormControl\n                    fullWidth\n                    error={!!errors.gate_id}\n                    disabled={disabled || isGateDisabled}\n                    sx={{ ...selectStyles, mt: 0 }}\n                  >\n                    <InputLabel id=\"gate-label\">Gate</InputLabel>\n                    <Select\n                      labelId=\"gate-label\"\n                      name=\"gate_id\"\n                      value={board.gate_id || \"\"}\n                      onChange={handleChange}\n                      label=\"Gate\"\n                      aria-label=\"Select gate for public board\"\n                      aria-describedby=\"gate-tooltip\"\n                    >\n                      <MenuItem value=\"\">None</MenuItem>\n                      {gates.map((gate) => (\n                        <MenuItem key={gate.gate_id} value={gate.gate_id}>\n                          {gate.name}\n                        </MenuItem>\n                      ))}\n                    </Select>\n                    {errors.gate_id && <FormHelperText>{errors.gate_id}</FormHelperText>}\n                  </FormControl>\n                </Tooltip>\n              )}\n            </>\n          )}\n          <Tooltip title=\"Maximum number of tweets allowed on the board\" placement=\"right\">\n            <TextField\n              label=\"Max Tweets\"\n              name=\"settings.max_tweets\"\n              type=\"number\"\n              value={board.settings?.max_tweets || 100}\n              onChange={handleChange}\n              fullWidth\n              required\n              error={!!errors[\"settings.max_tweets\"]}\n              helperText={errors[\"settings.max_tweets\"]}\n              sx={{ ...inputStyles, mt: 0 }}\n              disabled={disabled}\n              inputProps={{ min: 1, max: 10000 }}\n              aria-label=\"Maximum tweets\"\n              aria-describedby=\"max-tweets-tooltip\"\n            />\n          </Tooltip>\n          <Tooltip title=\"Points required to post a tweet on the board\" placement=\"right\">\n            <TextField\n              label=\"Tweet Cost\"\n              name=\"settings.tweet_cost\"\n              type=\"number\"\n              value={board.settings?.tweet_cost || 1}\n              onChange={handleChange}\n              fullWidth\n              required\n              error={!!errors[\"settings.tweet_cost\"]}\n              helperText={errors[\"settings.tweet_cost\"]}\n              sx={{ ...inputStyles, mt: 0 }}\n              disabled={disabled}\n              inputProps={{ min: 0 }}\n              aria-label=\"Tweet creation cost\"\n              aria-describedby=\"tweet-cost-tooltip\"\n            />\n          </Tooltip>\n          <Tooltip title=\"Maximum number of members allowed on the board\" placement=\"right\">\n            <TextField\n              label=\"Max Members\"\n              name=\"settings.max_members\"\n              type=\"number\"\n              value={board.settings?.max_members || 50}\n              onChange={handleChange}\n              fullWidth\n              required\n              error={!!errors[\"settings.max_members\"]}\n              helperText={errors[\"settings.max_members\"]}\n              sx={{ ...inputStyles, mt: 0 }}\n              disabled={disabled}\n              inputProps={{ min: 1, max: 10000 }}\n              aria-label=\"Maximum members\"\n              aria-describedby=\"max-members-tooltip\"\n            />\n          </Tooltip>\n          <Tooltip\n            title=\"Enable AI to automatically moderate content on the board\"\n            placement=\"right\"\n          >\n            <FormControlLabel\n              control={\n                <Switch\n                  checked={board.settings?.ai_moderation_enabled || false}\n                  onChange={handleChange}\n                  name=\"settings.ai_moderation_enabled\"\n                  disabled={disabled}\n                  aria-label=\"Enable AI moderation\"\n                  aria-describedby=\"ai-moderation-tooltip\"\n                />\n              }\n              label=\"Enable AI Moderation\"\n              sx={{ color: \"text.primary\" }}\n            />\n          </Tooltip>\n        </Box>\n      </DialogContent>\n      <DialogActions>\n        <Button\n          onClick={onCancel}\n          sx={{\n            ...cancelButtonStyle,\n            minWidth: { xs: \"100%\", sm: 150 },\n            fontSize: { xs: \"0.75rem\", sm: \"0.875rem\" },\n          }}\n          disabled={disabled}\n          aria-label=\"Cancel board form\"\n        >\n          Cancel\n        </Button>\n        <Button\n          onClick={handleSave}\n          sx={{\n            ...actionButtonStyles,\n            minWidth: { xs: \"100%\", sm: 150 },\n            fontSize: { xs: \"0.75rem\", sm: \"0.875rem\" },\n          }}\n          disabled={disabled}\n          aria-label=\"Save board form\"\n        >\n          Save\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n};\n\nBoardFormDialog.propTypes = {\n  open: PropTypes.bool.isRequired,\n  title: PropTypes.string.isRequired,\n  board: PropTypes.shape({\n    name: PropTypes.string,\n    description: PropTypes.string,\n    is_public: PropTypes.bool,\n    visibility: PropTypes.string,\n    type: PropTypes.string,\n    gate_id: PropTypes.string,\n    class_id: PropTypes.string,\n    settings: PropTypes.shape({\n      max_tweets: PropTypes.number,\n      tweet_cost: PropTypes.number,\n      max_members: PropTypes.number,\n      ai_moderation_enabled: PropTypes.bool,\n    }),\n    tags: PropTypes.array,\n  }).isRequired,\n  setBoard: PropTypes.func.isRequired,\n  onSave: PropTypes.func.isRequired,\n  onCancel: PropTypes.func.isRequired,\n  disabled: PropTypes.bool,\n  gates: PropTypes.arrayOf(\n    PropTypes.shape({\n      gate_id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n    })\n  ),\n  classes: PropTypes.arrayOf(\n    PropTypes.shape({\n      class_id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      gate_id: PropTypes.string,\n    })\n  ),\n  currentClass: PropTypes.shape({\n    class_id: PropTypes.string,\n    name: PropTypes.string,\n    gate_id: PropTypes.string,\n  }),\n  initialClassId: PropTypes.string,\n  fixedClassId: PropTypes.string, // New prop for fixed class_id\n  fixedGateId: PropTypes.string, // New prop for fixed gate_id (can be null)\n};\n\nBoardFormDialog.defaultProps = {\n  gates: [],\n  classes: [],\n  currentClass: null,\n  fixedClassId: null,\n  fixedGateId: undefined,\n};\n\nexport default React.memo(BoardFormDialog);","import { get, post, handleApiError } from './apiClient';\n\nconst BASE_SOCIAL_PATH = '/api/v1/social/friends';\n\n/**\n * Add a friend\n * @param {string} friendId - Friend ID\n * @param {string} token - Authorization token\n * @returns {Promise<object>} Friend data\n */\nexport const addFriend = async (friendId, token) => {\n  if (!friendId || typeof friendId !== 'string' || !friendId.trim()) throw new Error('Friend ID is required');\n  if (!token || typeof token !== 'string' || !token.trim()) throw new Error('Token is required');\n  try {\n    const response = await post(`${BASE_SOCIAL_PATH}/add`, { friendId }, {\n      headers: { Authorization: `Bearer ${token}` },\n    });\n    return response.data.content || {};\n  } catch (error) {\n    throw handleApiError(error);\n  }\n};\n\n/**\n * Accept a friend request\n * @param {string} friendId - Friend ID\n * @param {string} token - Authorization token\n * @returns {Promise<object>} Friend data\n */\nexport const acceptFriendRequest = async (friendId, token) => {\n  if (!friendId || typeof friendId !== 'string' || !friendId.trim()) throw new Error('Friend ID is required');\n  if (!token || typeof token !== 'string' || !token.trim()) throw new Error('Token is required');\n  try {\n    const response = await post(`${BASE_SOCIAL_PATH}/accept`, { friendId }, {\n      headers: { Authorization: `Bearer ${token}` },\n    });\n    return response.data.content || {};\n  } catch (error) {\n    throw handleApiError(error);\n  }\n};\n\n/**\n * Reject a friend request\n * @param {string} friendId - Friend ID\n * @param {string} token - Authorization token\n * @returns {Promise<object>} Friend data\n */\nexport const rejectFriendRequest = async (friendId, token) => {\n  if (!friendId || typeof friendId !== 'string' || !friendId.trim()) throw new Error('Friend ID is required');\n  if (!token || typeof token !== 'string' || !token.trim()) throw new Error('Token is required');\n  try {\n    const response = await post(`${BASE_SOCIAL_PATH}/reject`, { friendId }, {\n      headers: { Authorization: `Bearer ${token}` },\n    });\n    return response.data.content || {};\n  } catch (error) {\n    throw handleApiError(error);\n  }\n};\n\n/**\n * Remove a friend\n * @param {string} friendId - Friend ID\n * @param {string} token - Authorization token\n * @returns {Promise<object>} Friend data\n */\nexport const removeFriend = async (friendId, token) => {\n  if (!friendId || typeof friendId !== 'string' || !friendId.trim()) throw new Error('Friend ID is required');\n  if (!token || typeof token !== 'string' || !token.trim()) throw new Error('Token is required');\n  try {\n    const response = await post(`${BASE_SOCIAL_PATH}/remove`, { friendId }, {\n      headers: { Authorization: `Bearer ${token}` },\n    });\n    return response.data.content || {};\n  } catch (error) {\n    throw handleApiError(error);\n  }\n};\n\n/**\n * Fetch friends list\n * @param {string} token - Authorization token\n * @param {object} [options={page: 1, limit: 20}] - Query options\n * @param {AbortSignal} [signal] - Abort signal\n * @returns {Promise<object>} Friends data\n */\nexport const fetchFriends = async (token, options = { page: 1, limit: 20 }, signal) => {\n  if (!token || typeof token !== 'string' || !token.trim()) throw new Error('Token is required');\n  try {\n    const { page, limit } = options;\n    const response = await get(BASE_SOCIAL_PATH, {\n      headers: { Authorization: `Bearer ${token}` },\n      params: { page, limit },\n      signal: signal instanceof AbortSignal ? signal : undefined,\n    });\n    return response.data.content || { friends: [], pagination: {} };\n  } catch (error) {\n    throw handleApiError(error);\n  }\n};\n\n/**\n * Fetch pending friend requests\n * @param {string} token - Authorization token\n * @param {object} [options={page: 1, limit: 20}] - Query options\n * @param {AbortSignal} [signal] - Abort signal\n * @returns {Promise<object>} Pending requests data\n */\nexport const fetchPendingRequests = async (token, options = { page: 1, limit: 20 }, signal) => {\n  if (!token || typeof token !== 'string' || !token.trim()) throw new Error('Token is required');\n  try {\n    const { page, limit } = options;\n    const response = await get(`${BASE_SOCIAL_PATH}/pending`, {\n      headers: { Authorization: `Bearer ${token}` },\n      params: { page, limit },\n      signal: signal instanceof AbortSignal ? signal : undefined,\n    });\n    return response.data.content || { pendingRequests: [], pagination: {} };\n  } catch (error) {\n    throw handleApiError(error);\n  }\n};\n\n/**\n * Fetch users by username\n * @param {string} username - Username to search\n * @param {string} token - Authorization token\n * @param {object} [options={page: 1, limit: 10}] - Query options\n * @returns {Promise<object>} Users data\n */\nexport const fetchUsersByUsername = async (username, token, options = { page: 1, limit: 10 }) => {\n  if (!username || typeof username !== 'string' || !username.trim()) throw new Error('Username is required');\n  if (!token || typeof token !== 'string' || !token.trim()) throw new Error('Token is required');\n  try {\n    const { page, limit } = options;\n    const response = await get('/api/v1/social/users/search', {\n      headers: { Authorization: `Bearer ${token}` },\n      params: { username, page, limit },\n    });\n    return response.data.content || { users: [], pagination: {} };\n  } catch (error) {\n    throw handleApiError(error);\n  }\n};","import { useState, useCallback } from \"react\";\nimport {\n  addFriend,\n  acceptFriendRequest,\n  rejectFriendRequest,\n  removeFriend,\n  fetchFriends,\n  fetchPendingRequests,\n  fetchUsersByUsername,\n} from \"../api/socialApi\";\n\nexport const useSocial = (token, onLogout, navigate) => {\n  const [friends, setFriends] = useState([]);\n  const [pendingRequests, setPendingRequests] = useState([]);\n  const [friendsPagination, setFriendsPagination] = useState({});\n  const [pendingPagination, setPendingPagination] = useState({});\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  const handleAuthError = useCallback(\n    (err) => {\n      if (err.status === 401 || err.status === 403) {\n        onLogout(\"Session expired. Please log in again.\");\n        navigate(\"/login\");\n      }\n      setError(err.message || \"Authentication error\");\n    },\n    [onLogout, navigate]\n  );\n\n  // Пошук користувачів за username\n  const searchUsersByUsername = useCallback(\n    async (username, options = { limit: 10 }) => {\n      if (!token || !username.trim()) {\n        setError(\"Authentication or username missing\");\n        return [];\n      }\n      setLoading(true);\n      setError(null);\n      try {\n        const data = await fetchUsersByUsername(username, token, options);\n        return data.users || [];\n      } catch (err) {\n        handleAuthError(err);\n        return [];\n      } finally {\n        setLoading(false);\n      }\n    },\n    [token, handleAuthError]\n  );\n\n  const addNewFriend = useCallback(\n    async (friendId) => {\n      if (!token || !friendId) {\n        setError(\"Authentication or friend ID missing\");\n        return null;\n      }\n      setLoading(true);\n      setError(null);\n      try {\n        const data = await addFriend(friendId, token);\n        return data;\n      } catch (err) {\n        handleAuthError(err);\n        throw err;\n      } finally {\n        setLoading(false);\n      }\n    },\n    [token, handleAuthError]\n  );\n\n  const acceptFriend = useCallback(\n    async (friendId) => {\n      if (!token || !friendId) {\n        setError(\"Authentication or friend ID missing\");\n        return null;\n      }\n      setLoading(true);\n      setError(null);\n      try {\n        const data = await acceptFriendRequest(friendId, token);\n        return data;\n      } catch (err) {\n        handleAuthError(err);\n        throw err;\n      } finally {\n        setLoading(false);\n      }\n    },\n    [token, handleAuthError]\n  );\n\n  const rejectFriend = useCallback(\n    async (friendId) => {\n      if (!token || !friendId) {\n        setError(\"Authentication or friend ID missing\");\n        return null;\n      }\n      setLoading(true);\n      setError(null);\n      try {\n        const data = await rejectFriendRequest(friendId, token);\n        return data;\n      } catch (err) {\n        handleAuthError(err);\n        throw err;\n      } finally {\n        setLoading(false);\n      }\n    },\n    [token, handleAuthError]\n  );\n\n  const removeExistingFriend = useCallback(\n    async (friendId) => {\n      if (!token || !friendId) {\n        setError(\"Authentication or friend ID missing\");\n        return null;\n      }\n      setLoading(true);\n      setError(null);\n      try {\n        const data = await removeFriend(friendId, token);\n        return data;\n      } catch (err) {\n        handleAuthError(err);\n        throw err;\n      } finally {\n        setLoading(false);\n      }\n    },\n    [token, handleAuthError]\n  );\n\n  const getFriends = useCallback(\n    async (options = { page: 1, limit: 20 }, signal) => {\n      if (!token) {\n        setError(\"Authentication required\");\n        return [];\n      }\n      setLoading(true);\n      setError(null);\n      try {\n        const data = await fetchFriends(token, options, signal);\n        setFriends((prev) => {\n          const newFriends = data.friends || [];\n          return JSON.stringify(newFriends) === JSON.stringify(prev) ? prev : newFriends;\n        });\n        setFriendsPagination(data.pagination || {});\n        return data.friends;\n      } catch (err) {\n        if (err.name !== \"AbortError\") handleAuthError(err);\n        return [];\n      } finally {\n        setLoading(false);\n      }\n    },\n    [token, handleAuthError]\n  );\n\n  const getPendingRequests = useCallback(\n    async (options = { page: 1, limit: 20 }, signal) => {\n      if (!token) {\n        setError(\"Authentication required\");\n        return [];\n      }\n      setLoading(true);\n      setError(null);\n      try {\n        const data = await fetchPendingRequests(token, options, signal);\n        setPendingRequests(data.pendingRequests || []);\n        setPendingPagination(data.pagination || {});\n        return data.pendingRequests;\n      } catch (err) {\n        if (err.name !== \"AbortError\") handleAuthError(err);\n        return [];\n      } finally {\n        setLoading(false);\n      }\n    },\n    [token, handleAuthError]\n  );\n\n  return {\n    friends,\n    pendingRequests,\n    friendsPagination,\n    pendingPagination,\n    loading,\n    error,\n    addNewFriend,\n    acceptFriend,\n    rejectFriend,\n    removeExistingFriend,\n    getFriends,\n    getPendingRequests,\n    searchUsersByUsername,\n  };\n};\n\nexport default useSocial;"],"names":["DeleteConfirmationDialog","_ref","open","onClose","onConfirm","message","disabled","theme","useTheme","_jsxs","Dialog","maxWidth","fullWidth","sx","borderRadius","shape","borderRadiusMedium","p","xs","md","children","_jsx","DialogTitle","fontSize","DialogContent","DialogContentText","color","DialogActions","Button","onClick","cancelButtonStyle","minWidth","sm","actionButtonStyles","backgroundColor","React","MemberFormDialog","title","gateId","classId","boardId","token","onSave","onCancel","members","addMember","removeMember","updateMemberRole","showNotification","useNotification","searchUsersByUsername","loading","searchLoading","useSocial","username","setUsername","useState","role","setRole","errors","setErrors","userSuggestions","setUserSuggestions","validRoles","context","useMemo","type","id","name","validationRules","value","rules","required","minLength","maxLength","debouncedSearchUsers","debounce","async","query","length","suggestions","limit","map","user","anonymous_id","toLowerCase","err","console","error","handleUsernameChange","useCallback","event","newValue","fieldErrors","validateField","prev","handleRoleChange","e","target","handleAddMember","formErrors","validateForm","Object","keys","selectedUser","find","handleRemoveMember","handleUpdateRole","newRole","useEffect","Box","display","gap","mb","alignItems","flexDirection","Autocomplete","freeSolo","options","getOptionLabel","option","inputValue","onInputChange","flex","width","renderInput","params","TextField","autoFocus","label","variant","inputStyles","mt","helperText","InputProps","endAdornment","_Fragment","CircularProgress","size","FormControl","selectStyles","InputLabel","Select","onChange","MenuItem","FormHelperText","some","key","Typography","TableContainer","component","Paper","borderRadiusSmall","Table","TableHead","TableRow","TableCell","TableBody","member","Chip","bgcolor","joined_at","Date","toLocaleDateString","IconButton","Delete","_id","BASE_GATE_PATH","ERROR_MESSAGES","CONFIG","MAX_CACHE_SIZE","CACHE_EXPIRY_MS","DEBOUNCE_MS","DEFAULT_LIMIT","CACHE_VERSION","gateCache","constructor","capacity","this","cache","Map","get","has","timestamp","now","delete","set","firstKey","next","clear","useGates","onLogout","navigate","gates","setGates","gate","setGate","setMembers","stats","setStats","pagination","setPagination","page","total","hasMore","setLoading","setError","handleError","Promise","resolve","status","errorMessage","reject","Error","normalizeMembers","arguments","undefined","_member$user","_member$user2","_member$user3","_member$user4","_member$user5","member_id","avatar","total_points","normalizeClasses","cls","_cls$members","class_id","description","gate_id","creator_id","visibility","access","is_public","settings","board_count","tweet_count","member_count","favorited_by","is_favorited","tags","created_at","updated_at","resetState","fetchGatesList","filters","signal","append","cacheKey","JSON","stringify","cachedData","_data$pagination","_data$pagination2","_data$pagination3","data","headers","Authorization","AbortSignal","content","handleApiError","fetchGates","newGates","debouncedFetchGatesList","callback","then","result","catch","fetchGate","trim","gateData","fetchGateById","normalizedData","classes","createNewGate","_gateData$name","_gateData$is_public","_gateData$settings","_gateData$settings2","_gateData$settings3","_gateData$settings$ai","_gateData$settings4","newGate","post","createGate","class_creation_cost","board_creation_cost","max_members","ai_moderation_enabled","updateExistingGate","_gateData$name2","updateData","updatedGate","put","updateGate","g","updateGateStatusById","statusData","updateGateStatus","deleteExistingGate","del","deleteGate","filter","addMemberToGate","memberData","addGateMember","removeMemberFromGate","encodeURIComponent","removeGateMember","updateGateMember","fetchGateMembersList","fetchGateMembers","toggleFavoriteGate","isFavorited","unfavoriteGate","favoriteGate","controller","AbortController","abort","cancel","toString","push","minValue","Number","maxValue","includes","join","fields","entries","forEach","BoardFormDialog","_board$settings5","_board$settings6","_board$settings7","_board$settings8","board","setBoard","currentClass","initialClassId","fixedClassId","fixedGateId","firstInputRef","useRef","current","focus","newState","filteredClasses","isGateDisabled","isClassDisabled","_board$settings","_board$settings2","_board$settings3","_board$settings4","enum","max_tweets","tweet_cost","handleChange","_validationRules$name","checked","startsWith","settingKey","split","selectedClass","fieldRules","handleSave","Tooltip","placement","inputProps","inputRef","multiline","rows","labelId","min","max","FormControlLabel","control","Switch","defaultProps","BASE_SOCIAL_PATH","friends","setFriends","pendingRequests","setPendingRequests","friendsPagination","setFriendsPagination","pendingPagination","setPendingPagination","handleAuthError","users","fetchUsersByUsername","addNewFriend","friendId","addFriend","acceptFriend","acceptFriendRequest","rejectFriend","rejectFriendRequest","removeExistingFriend","removeFriend","getFriends","fetchFriends","newFriends","getPendingRequests","fetchPendingRequests"],"sourceRoot":""}