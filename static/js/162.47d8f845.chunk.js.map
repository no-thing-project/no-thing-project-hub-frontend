{"version":3,"file":"static/js/162.47d8f845.chunk.js","mappings":"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","sources":["../node_modules/motion-utils/dist/es/clamp.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-dynamic-variants.mjs","../node_modules/framer-motion/dist/es/utils/use-isomorphic-effect.mjs","../node_modules/motion-dom/dist/es/value/types/int.mjs","../node_modules/motion-dom/dist/es/value/types/maps/transform.mjs","../node_modules/motion-dom/dist/es/value/types/maps/number.mjs","../node_modules/motion-dom/dist/es/render/utils/keys-position.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/camel-case-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/SVGVisualElement.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/render.mjs","../node_modules/motion-dom/dist/es/animation/generators/utils/create-generator-easing.mjs","../node_modules/motion-dom/dist/es/utils/is-svg-svg-element.mjs","../node_modules/motion-dom/dist/es/value/types/numbers/index.mjs","../node_modules/motion-utils/dist/es/is-numerical-string.mjs","../node_modules/motion-dom/dist/es/animation/keyframes/utils/unit-conversion.mjs","../node_modules/motion-dom/dist/es/animation/keyframes/offsets/default.mjs","../node_modules/framer-motion/dist/es/animation/optimized-appear/data-id.mjs","../node_modules/framer-motion/dist/es/context/MotionConfigContext.mjs","../node_modules/motion-dom/dist/es/animation/utils/css-variables-conversion.mjs","../node_modules/motion-dom/dist/es/animation/keyframes/utils/make-none-animatable.mjs","../node_modules/motion-dom/dist/es/animation/keyframes/DOMKeyframesResolver.mjs","../node_modules/motion-dom/dist/es/animation/keyframes/utils/is-none.mjs","../node_modules/framer-motion/dist/es/render/dom/DOMVisualElement.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/scrape-motion-values.mjs","../node_modules/motion-dom/dist/es/frameloop/order.mjs","../node_modules/motion-dom/dist/es/frameloop/batcher.mjs","../node_modules/motion-dom/dist/es/frameloop/render-step.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-keyframes-target.mjs","../node_modules/motion-dom/dist/es/value/utils/is-motion-value.mjs","../node_modules/motion-dom/dist/es/animation/generators/utils/calc-duration.mjs","../node_modules/motion-dom/dist/es/value/types/dimensions.mjs","../node_modules/motion-dom/dist/es/value/types/auto.mjs","../node_modules/motion-utils/dist/es/easing/modifiers/reverse.mjs","../node_modules/motion-dom/dist/es/utils/mix/number.mjs","../node_modules/motion-dom/dist/es/animation/utils/is-css-variable.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/camel-to-dash.mjs","../node_modules/framer-motion/dist/es/context/LayoutGroupContext.mjs","../node_modules/motion-dom/dist/es/value/types/utils/color-regex.mjs","../node_modules/motion-dom/dist/es/value/types/complex/index.mjs","../node_modules/motion-utils/dist/es/progress.mjs","../node_modules/framer-motion/dist/es/motion/utils/is-forced-motion-value.mjs","../node_modules/motion-dom/dist/es/render/dom/parse-transform.mjs","../node_modules/motion-dom/dist/es/animation/generators/utils/is-generator.mjs","../node_modules/framer-motion/dist/es/render/html/utils/render.mjs","../node_modules/motion-dom/dist/es/value/types/color/hsla.mjs","../node_modules/motion-utils/dist/es/global-config.mjs","../node_modules/motion-utils/dist/es/time-conversion.mjs","../node_modules/framer-motion/dist/es/render/utils/variant-props.mjs","../node_modules/motion-dom/dist/es/animation/waapi/utils/linear.mjs","../node_modules/motion-utils/dist/es/easing/utils/is-easing-array.mjs","../node_modules/motion-dom/dist/es/animation/generators/utils/velocity.mjs","../node_modules/framer-motion/dist/es/projection/utils/has-transform.mjs","../node_modules/motion-dom/dist/es/value/types/test.mjs","../node_modules/framer-motion/dist/es/utils/is-browser.mjs","../node_modules/motion-utils/dist/es/noop.mjs","../node_modules/motion-utils/dist/es/velocity-per-second.mjs","../node_modules/motion-utils/dist/es/easing/circ.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-correction.mjs","../node_modules/framer-motion/dist/es/utils/use-constant.mjs","../node_modules/motion-dom/dist/es/value/types/color/hex.mjs","../node_modules/motion-dom/dist/es/value/types/utils/sanitize.mjs","../node_modules/motion-dom/dist/es/value/types/utils/animatable-none.mjs","../node_modules/motion-dom/dist/es/animation/keyframes/KeyframesResolver.mjs","../node_modules/motion-dom/dist/es/animation/keyframes/utils/fill-wildcards.mjs","../node_modules/motion-dom/dist/es/utils/is-svg-element.mjs","../node_modules/framer-motion/dist/es/render/html/HTMLVisualElement.mjs","../node_modules/motion-dom/dist/es/animation/keyframes/offsets/fill.mjs","../node_modules/motion-dom/dist/es/value/types/color/index.mjs","../node_modules/framer-motion/dist/es/render/components/create-proxy.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-variant.mjs","../node_modules/framer-motion/dist/es/utils/shallow-compare.mjs","../node_modules/framer-motion/dist/es/render/utils/get-variant-context.mjs","../node_modules/framer-motion/dist/es/render/utils/animation-state.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element.mjs","../node_modules/framer-motion/dist/es/motion/features/Feature.mjs","../node_modules/framer-motion/dist/es/motion/features/animation/exit.mjs","../node_modules/framer-motion/dist/es/motion/features/animations.mjs","../node_modules/framer-motion/dist/es/motion/features/animation/index.mjs","../node_modules/motion-dom/dist/es/gestures/drag/state/is-active.mjs","../node_modules/framer-motion/dist/es/events/add-dom-event.mjs","../node_modules/motion-dom/dist/es/gestures/utils/is-primary-pointer.mjs","../node_modules/framer-motion/dist/es/events/event-info.mjs","../node_modules/framer-motion/dist/es/events/add-pointer-event.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-calc.mjs","../node_modules/framer-motion/dist/es/projection/utils/each-axis.mjs","../node_modules/framer-motion/dist/es/utils/get-context-window.mjs","../node_modules/framer-motion/dist/es/utils/is-ref-object.mjs","../node_modules/framer-motion/dist/es/utils/distance.mjs","../node_modules/framer-motion/dist/es/gestures/pan/PanSession.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/constraints.mjs","../node_modules/framer-motion/dist/es/gestures/drag/VisualElementDragControls.mjs","../node_modules/motion-dom/dist/es/gestures/drag/state/set-active.mjs","../node_modules/framer-motion/dist/es/gestures/pan/index.mjs","../node_modules/motion-dom/dist/es/frameloop/microtask.mjs","../node_modules/framer-motion/dist/es/context/SwitchLayoutGroupContext.mjs","../node_modules/framer-motion/dist/es/projection/node/state.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-border-radius.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-box-shadow.mjs","../node_modules/framer-motion/dist/es/motion/features/layout/MeasureLayout.mjs","../node_modules/framer-motion/dist/es/render/utils/compare-by-depth.mjs","../node_modules/framer-motion/dist/es/render/utils/flat-tree.mjs","../node_modules/framer-motion/dist/es/utils/delay.mjs","../node_modules/framer-motion/dist/es/value/utils/resolve-motion-value.mjs","../node_modules/framer-motion/dist/es/projection/animation/mix-values.mjs","../node_modules/framer-motion/dist/es/projection/geometry/copy.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-remove.mjs","../node_modules/framer-motion/dist/es/projection/geometry/utils.mjs","../node_modules/framer-motion/dist/es/projection/shared/stack.mjs","../node_modules/framer-motion/dist/es/projection/node/create-projection-node.mjs","../node_modules/framer-motion/dist/es/projection/styles/transform.mjs","../node_modules/framer-motion/dist/es/projection/node/DocumentProjectionNode.mjs","../node_modules/framer-motion/dist/es/projection/node/HTMLProjectionNode.mjs","../node_modules/framer-motion/dist/es/motion/features/drag.mjs","../node_modules/framer-motion/dist/es/gestures/drag/index.mjs","../node_modules/motion-dom/dist/es/gestures/utils/setup.mjs","../node_modules/motion-dom/dist/es/gestures/hover.mjs","../node_modules/framer-motion/dist/es/gestures/hover.mjs","../node_modules/motion-dom/dist/es/gestures/utils/is-node-or-child.mjs","../node_modules/motion-dom/dist/es/gestures/press/utils/is-keyboard-accessible.mjs","../node_modules/motion-dom/dist/es/gestures/press/utils/state.mjs","../node_modules/motion-dom/dist/es/gestures/press/utils/keyboard.mjs","../node_modules/motion-dom/dist/es/gestures/press/index.mjs","../node_modules/framer-motion/dist/es/gestures/press.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/observers.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/index.mjs","../node_modules/framer-motion/dist/es/motion/features/gestures.mjs","../node_modules/framer-motion/dist/es/gestures/focus.mjs","../node_modules/framer-motion/dist/es/motion/features/layout.mjs","../node_modules/framer-motion/dist/es/context/LazyContext.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/index.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/create.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/utils.mjs","../node_modules/framer-motion/dist/es/motion/utils/symbol.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-motion-ref.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-element.mjs","../node_modules/framer-motion/dist/es/motion/index.mjs","../node_modules/framer-motion/dist/es/motion/features/load-features.mjs","../node_modules/framer-motion/dist/es/render/html/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/html/use-props.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/svg/use-props.mjs","../node_modules/framer-motion/dist/es/motion/utils/valid-prop.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/filter-props.mjs","../node_modules/framer-motion/dist/es/render/svg/lowercase-elements.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-component.mjs","../node_modules/framer-motion/dist/es/render/dom/use-render.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-state.mjs","../node_modules/framer-motion/dist/es/render/html/config-motion.mjs","../node_modules/framer-motion/dist/es/render/svg/config-motion.mjs","../node_modules/framer-motion/dist/es/render/components/create-factory.mjs","../node_modules/framer-motion/dist/es/render/dom/create-visual-element.mjs","../node_modules/framer-motion/dist/es/render/components/motion/proxy.mjs","../node_modules/framer-motion/dist/es/render/components/motion/create.mjs","../node_modules/motion-dom/dist/es/value/types/utils/get-as-type.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-transform.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-styles.mjs","../node_modules/framer-motion/dist/es/value/use-will-change/add-will-change.mjs","../node_modules/framer-motion/dist/es/value/use-will-change/is.mjs","../node_modules/motion-utils/dist/es/subscription-manager.mjs","../node_modules/framer-motion/dist/es/projection/utils/measure.mjs","../node_modules/framer-motion/dist/es/animation/optimized-appear/get-appear-id.mjs","../node_modules/framer-motion/dist/es/projection/geometry/conversion.mjs","../node_modules/motion-dom/dist/es/stats/buffer.mjs","../node_modules/motion-dom/dist/es/frameloop/sync-time.mjs","../node_modules/motion-dom/dist/es/value/index.mjs","../node_modules/motion-dom/dist/es/value/types/complex/filter.mjs","../node_modules/motion-dom/dist/es/value/types/numbers/units.mjs","../node_modules/framer-motion/dist/es/render/html/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-apply.mjs","../node_modules/motion-dom/dist/es/value/types/utils/float-regex.mjs","../node_modules/framer-motion/dist/es/projection/geometry/models.mjs","../node_modules/motion-dom/dist/es/value/types/color/rgba.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-variants.mjs","../node_modules/motion-dom/dist/es/utils/resolve-elements.mjs","../node_modules/motion-utils/dist/es/is-object.mjs","../node_modules/motion-dom/dist/es/frameloop/frame.mjs","../node_modules/motion-dom/dist/es/value/types/utils/single-color-regex.mjs","../node_modules/motion-dom/dist/es/value/types/color/utils.mjs","../node_modules/motion-dom/dist/es/value/types/utils/is-nullish.mjs","../node_modules/motion-dom/dist/es/stats/animation-count.mjs","../node_modules/motion-utils/dist/es/pipe.mjs","../node_modules/motion-dom/dist/es/utils/is-html-element.mjs","../node_modules/motion-dom/dist/es/render/utils/keys-transform.mjs","../node_modules/motion-dom/dist/es/animation/generators/spring/defaults.mjs","../node_modules/motion-dom/dist/es/animation/generators/spring/find.mjs","../node_modules/motion-dom/dist/es/animation/generators/spring/index.mjs","../node_modules/motion-dom/dist/es/value/types/utils/find.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/state.mjs","../node_modules/framer-motion/dist/es/render/VisualElement.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/index.mjs","../node_modules/framer-motion/dist/es/render/utils/motion-values.mjs","../node_modules/motion-dom/dist/es/animation/utils/get-value-transition.mjs","../node_modules/framer-motion/dist/es/components/AnimatePresence/use-presence.mjs","../node_modules/motion-utils/dist/es/easing/modifiers/mirror.mjs","../node_modules/motion-dom/dist/es/value/types/color/hsla-to-rgba.mjs","../node_modules/motion-dom/dist/es/utils/mix/immediate.mjs","../node_modules/motion-dom/dist/es/utils/mix/color.mjs","../node_modules/motion-dom/dist/es/utils/mix/visibility.mjs","../node_modules/motion-dom/dist/es/utils/mix/complex.mjs","../node_modules/motion-dom/dist/es/utils/mix/index.mjs","../node_modules/motion-dom/dist/es/animation/drivers/frame.mjs","../node_modules/motion-dom/dist/es/animation/generators/inertia.mjs","../node_modules/motion-utils/dist/es/easing/cubic-bezier.mjs","../node_modules/motion-utils/dist/es/easing/ease.mjs","../node_modules/motion-utils/dist/es/easing/back.mjs","../node_modules/motion-utils/dist/es/easing/anticipate.mjs","../node_modules/motion-utils/dist/es/easing/utils/is-bezier-definition.mjs","../node_modules/motion-utils/dist/es/easing/utils/map.mjs","../node_modules/motion-dom/dist/es/utils/interpolate.mjs","../node_modules/motion-dom/dist/es/animation/generators/keyframes.mjs","../node_modules/motion-dom/dist/es/animation/keyframes/offsets/time.mjs","../node_modules/motion-dom/dist/es/animation/keyframes/get-final.mjs","../node_modules/motion-dom/dist/es/animation/utils/replace-transition-type.mjs","../node_modules/motion-dom/dist/es/animation/utils/WithPromise.mjs","../node_modules/motion-dom/dist/es/animation/JSAnimation.mjs","../node_modules/motion-utils/dist/es/memo.mjs","../node_modules/motion-dom/dist/es/utils/supports/scroll-timeline.mjs","../node_modules/motion-dom/dist/es/utils/supports/flags.mjs","../node_modules/motion-dom/dist/es/utils/supports/memo.mjs","../node_modules/motion-dom/dist/es/utils/supports/linear-easing.mjs","../node_modules/motion-dom/dist/es/animation/waapi/easing/cubic-bezier.mjs","../node_modules/motion-dom/dist/es/animation/waapi/easing/supported.mjs","../node_modules/motion-dom/dist/es/animation/waapi/easing/map-easing.mjs","../node_modules/motion-dom/dist/es/animation/waapi/start-waapi-animation.mjs","../node_modules/motion-dom/dist/es/animation/NativeAnimation.mjs","../node_modules/motion-dom/dist/es/animation/waapi/utils/apply-generator.mjs","../node_modules/motion-dom/dist/es/render/dom/style-set.mjs","../node_modules/motion-dom/dist/es/render/dom/is-css-var.mjs","../node_modules/motion-dom/dist/es/animation/waapi/utils/unsupported-easing.mjs","../node_modules/motion-dom/dist/es/animation/NativeAnimationExtended.mjs","../node_modules/motion-dom/dist/es/animation/utils/is-animatable.mjs","../node_modules/motion-dom/dist/es/animation/waapi/supports/waapi.mjs","../node_modules/motion-dom/dist/es/animation/AsyncMotionValueAnimation.mjs","../node_modules/motion-dom/dist/es/animation/utils/can-animate.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/utils/get-final-keyframe.mjs","../node_modules/framer-motion/dist/es/animation/utils/default-transitions.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/motion-value.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-transition-defined.mjs","../node_modules/framer-motion/dist/es/render/utils/setters.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-target.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/is-svg-tag.mjs","../node_modules/framer-motion/dist/es/render/utils/is-controlling-variants.mjs","../node_modules/motion-dom/dist/es/value/types/maps/defaults.mjs","../node_modules/motion-utils/dist/es/errors.mjs","../node_modules/framer-motion/dist/es/motion/features/definitions.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animation-controls.mjs","../node_modules/framer-motion/dist/es/context/PresenceContext.mjs","../node_modules/framer-motion/dist/es/render/utils/is-variant-label.mjs","../node_modules/motion-utils/dist/es/array.mjs","../node_modules/framer-motion/dist/es/animation/animate/single-value.mjs","../node_modules/motion-utils/dist/es/is-zero-value-string.mjs","../node_modules/framer-motion/dist/es/render/store.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/path.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/build-attrs.mjs"],"sourcesContent":["const clamp = (min, max, v) => {\n    if (v > max)\n        return max;\n    if (v < min)\n        return min;\n    return v;\n};\n\nexport { clamp };\n","import { resolveVariantFromProps } from './resolve-variants.mjs';\n\nfunction resolveVariant(visualElement, definition, custom) {\n    const props = visualElement.getProps();\n    return resolveVariantFromProps(props, definition, custom !== undefined ? custom : props.custom, visualElement);\n}\n\nexport { resolveVariant };\n","import { useLayoutEffect, useEffect } from 'react';\nimport { isBrowser } from './is-browser.mjs';\n\nconst useIsomorphicLayoutEffect = isBrowser ? useLayoutEffect : useEffect;\n\nexport { useIsomorphicLayoutEffect };\n","import { number } from './numbers/index.mjs';\n\nconst int = {\n    ...number,\n    transform: Math.round,\n};\n\nexport { int };\n","import { scale, alpha } from '../numbers/index.mjs';\nimport { degrees, px, progressPercentage } from '../numbers/units.mjs';\n\nconst transformValueTypes = {\n    rotate: degrees,\n    rotateX: degrees,\n    rotateY: degrees,\n    rotateZ: degrees,\n    scale,\n    scaleX: scale,\n    scaleY: scale,\n    scaleZ: scale,\n    skew: degrees,\n    skewX: degrees,\n    skewY: degrees,\n    distance: px,\n    translateX: px,\n    translateY: px,\n    translateZ: px,\n    x: px,\n    y: px,\n    z: px,\n    perspective: px,\n    transformPerspective: px,\n    opacity: alpha,\n    originX: progressPercentage,\n    originY: progressPercentage,\n    originZ: px,\n};\n\nexport { transformValueTypes };\n","import { int } from '../int.mjs';\nimport { alpha } from '../numbers/index.mjs';\nimport { px } from '../numbers/units.mjs';\nimport { transformValueTypes } from './transform.mjs';\n\nconst numberValueTypes = {\n    // Border props\n    borderWidth: px,\n    borderTopWidth: px,\n    borderRightWidth: px,\n    borderBottomWidth: px,\n    borderLeftWidth: px,\n    borderRadius: px,\n    radius: px,\n    borderTopLeftRadius: px,\n    borderTopRightRadius: px,\n    borderBottomRightRadius: px,\n    borderBottomLeftRadius: px,\n    // Positioning props\n    width: px,\n    maxWidth: px,\n    height: px,\n    maxHeight: px,\n    top: px,\n    right: px,\n    bottom: px,\n    left: px,\n    // Spacing props\n    padding: px,\n    paddingTop: px,\n    paddingRight: px,\n    paddingBottom: px,\n    paddingLeft: px,\n    margin: px,\n    marginTop: px,\n    marginRight: px,\n    marginBottom: px,\n    marginLeft: px,\n    // Misc\n    backgroundPositionX: px,\n    backgroundPositionY: px,\n    ...transformValueTypes,\n    zIndex: int,\n    // SVG\n    fillOpacity: alpha,\n    strokeOpacity: alpha,\n    numOctaves: int,\n};\n\nexport { numberValueTypes };\n","import { transformPropOrder } from './keys-transform.mjs';\n\nconst positionalKeys = new Set([\n    \"width\",\n    \"height\",\n    \"top\",\n    \"left\",\n    \"right\",\n    \"bottom\",\n    ...transformPropOrder,\n]);\n\nexport { positionalKeys };\n","/**\n * A set of attribute names that are always read/written as camel case.\n */\nconst camelCaseAttributes = new Set([\n    \"baseFrequency\",\n    \"diffuseConstant\",\n    \"kernelMatrix\",\n    \"kernelUnitLength\",\n    \"keySplines\",\n    \"keyTimes\",\n    \"limitingConeAngle\",\n    \"markerHeight\",\n    \"markerWidth\",\n    \"numOctaves\",\n    \"targetX\",\n    \"targetY\",\n    \"surfaceScale\",\n    \"specularConstant\",\n    \"specularExponent\",\n    \"stdDeviation\",\n    \"tableValues\",\n    \"viewBox\",\n    \"gradientTransform\",\n    \"pathLength\",\n    \"startOffset\",\n    \"textLength\",\n    \"lengthAdjust\",\n]);\n\nexport { camelCaseAttributes };\n","import { transformProps, getDefaultValueType } from 'motion-dom';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { camelToDash } from '../dom/utils/camel-to-dash.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { camelCaseAttributes } from './utils/camel-case-attrs.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\nimport { renderSVG } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\n\nclass SVGVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.type = \"svg\";\n        this.isSVGTag = false;\n        this.measureInstanceViewportBox = createBox;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props[key];\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        key = !camelCaseAttributes.has(key) ? camelToDash(key) : key;\n        return instance.getAttribute(key);\n    }\n    scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n        return scrapeMotionValuesFromProps(props, prevProps, visualElement);\n    }\n    build(renderState, latestValues, props) {\n        buildSVGAttrs(renderState, latestValues, this.isSVGTag, props.transformTemplate, props.style);\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderSVG(instance, renderState, styleProp, projection);\n    }\n    mount(instance) {\n        this.isSVGTag = isSVGTag(instance.tagName);\n        super.mount(instance);\n    }\n}\n\nexport { SVGVisualElement };\n","import { camelToDash } from '../../dom/utils/camel-to-dash.mjs';\nimport { renderHTML } from '../../html/utils/render.mjs';\nimport { camelCaseAttributes } from './camel-case-attrs.mjs';\n\nfunction renderSVG(element, renderState, _styleProp, projection) {\n    renderHTML(element, renderState, undefined, projection);\n    for (const key in renderState.attrs) {\n        element.setAttribute(!camelCaseAttributes.has(key) ? camelToDash(key) : key, renderState.attrs[key]);\n    }\n}\n\nexport { renderSVG };\n","import { millisecondsToSeconds } from 'motion-utils';\nimport { calcGeneratorDuration, maxGeneratorDuration } from './calc-duration.mjs';\n\n/**\n * Create a progress => progress easing function from a generator.\n */\nfunction createGeneratorEasing(options, scale = 100, createGenerator) {\n    const generator = createGenerator({ ...options, keyframes: [0, scale] });\n    const duration = Math.min(calcGeneratorDuration(generator), maxGeneratorDuration);\n    return {\n        type: \"keyframes\",\n        ease: (progress) => {\n            return generator.next(duration * progress).value / scale;\n        },\n        duration: millisecondsToSeconds(duration),\n    };\n}\n\nexport { createGeneratorEasing };\n","import { isSVGElement } from './is-svg-element.mjs';\n\n/**\n * Checks if an element is specifically an SVGSVGElement (the root SVG element)\n * in a way that works across iframes\n */\nfunction isSVGSVGElement(element) {\n    return isSVGElement(element) && element.tagName === \"svg\";\n}\n\nexport { isSVGSVGElement };\n","import { clamp } from 'motion-utils';\n\nconst number = {\n    test: (v) => typeof v === \"number\",\n    parse: parseFloat,\n    transform: (v) => v,\n};\nconst alpha = {\n    ...number,\n    transform: (v) => clamp(0, 1, v),\n};\nconst scale = {\n    ...number,\n    default: 1,\n};\n\nexport { alpha, number, scale };\n","/**\n * Check if value is a numerical string, ie a string that is purely a number eg \"100\" or \"-100.1\"\n */\nconst isNumericalString = (v) => /^-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)$/u.test(v);\n\nexport { isNumericalString };\n","import { parseValueFromTransform } from '../../../render/dom/parse-transform.mjs';\nimport { transformPropOrder } from '../../../render/utils/keys-transform.mjs';\nimport { number } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\n\nconst isNumOrPxType = (v) => v === number || v === px;\nconst transformKeys = new Set([\"x\", \"y\", \"z\"]);\nconst nonTranslationalTransformKeys = transformPropOrder.filter((key) => !transformKeys.has(key));\nfunction removeNonTranslationalTransform(visualElement) {\n    const removedTransforms = [];\n    nonTranslationalTransformKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (value !== undefined) {\n            removedTransforms.push([key, value.get()]);\n            value.set(key.startsWith(\"scale\") ? 1 : 0);\n        }\n    });\n    return removedTransforms;\n}\nconst positionalValues = {\n    // Dimensions\n    width: ({ x }, { paddingLeft = \"0\", paddingRight = \"0\" }) => x.max - x.min - parseFloat(paddingLeft) - parseFloat(paddingRight),\n    height: ({ y }, { paddingTop = \"0\", paddingBottom = \"0\" }) => y.max - y.min - parseFloat(paddingTop) - parseFloat(paddingBottom),\n    top: (_bbox, { top }) => parseFloat(top),\n    left: (_bbox, { left }) => parseFloat(left),\n    bottom: ({ y }, { top }) => parseFloat(top) + (y.max - y.min),\n    right: ({ x }, { left }) => parseFloat(left) + (x.max - x.min),\n    // Transform\n    x: (_bbox, { transform }) => parseValueFromTransform(transform, \"x\"),\n    y: (_bbox, { transform }) => parseValueFromTransform(transform, \"y\"),\n};\n// Alias translate longform names\npositionalValues.translateX = positionalValues.x;\npositionalValues.translateY = positionalValues.y;\n\nexport { isNumOrPxType, positionalValues, removeNonTranslationalTransform };\n","import { fillOffset } from './fill.mjs';\n\nfunction defaultOffset(arr) {\n    const offset = [0];\n    fillOffset(offset, arr.length - 1);\n    return offset;\n}\n\nexport { defaultOffset };\n","import { camelToDash } from '../../render/dom/utils/camel-to-dash.mjs';\n\nconst optimizedAppearDataId = \"framerAppearId\";\nconst optimizedAppearDataAttribute = \"data-\" + camelToDash(optimizedAppearDataId);\n\nexport { optimizedAppearDataAttribute, optimizedAppearDataId };\n","\"use client\";\nimport { createContext } from 'react';\n\n/**\n * @public\n */\nconst MotionConfigContext = createContext({\n    transformPagePoint: (p) => p,\n    isStatic: false,\n    reducedMotion: \"never\",\n});\n\nexport { MotionConfigContext };\n","import { invariant, isNumericalString } from 'motion-utils';\nimport { isCSSVariableToken } from './is-css-variable.mjs';\n\n/**\n * Parse Framer's special CSS variable format into a CSS token and a fallback.\n *\n * ```\n * `var(--foo, #fff)` => [`--foo`, '#fff']\n * ```\n *\n * @param current\n */\nconst splitCSSVariableRegex = \n// eslint-disable-next-line redos-detector/no-unsafe-regex -- false positive, as it can match a lot of words\n/^var\\(--(?:([\\w-]+)|([\\w-]+), ?([a-zA-Z\\d ()%#.,-]+))\\)/u;\nfunction parseCSSVariable(current) {\n    const match = splitCSSVariableRegex.exec(current);\n    if (!match)\n        return [,];\n    const [, token1, token2, fallback] = match;\n    return [`--${token1 ?? token2}`, fallback];\n}\nconst maxDepth = 4;\nfunction getVariableValue(current, element, depth = 1) {\n    invariant(depth <= maxDepth, `Max CSS variable fallback depth detected in property \"${current}\". This may indicate a circular fallback dependency.`);\n    const [token, fallback] = parseCSSVariable(current);\n    // No CSS variable detected\n    if (!token)\n        return;\n    // Attempt to read this CSS variable off the element\n    const resolved = window.getComputedStyle(element).getPropertyValue(token);\n    if (resolved) {\n        const trimmed = resolved.trim();\n        return isNumericalString(trimmed) ? parseFloat(trimmed) : trimmed;\n    }\n    return isCSSVariableToken(fallback)\n        ? getVariableValue(fallback, element, depth + 1)\n        : fallback;\n}\n\nexport { getVariableValue, parseCSSVariable };\n","import { analyseComplexValue } from '../../../value/types/complex/index.mjs';\nimport { getAnimatableNone } from '../../../value/types/utils/animatable-none.mjs';\n\n/**\n * If we encounter keyframes like \"none\" or \"0\" and we also have keyframes like\n * \"#fff\" or \"200px 200px\" we want to find a keyframe to serve as a template for\n * the \"none\" keyframes. In this case \"#fff\" or \"200px 200px\" - then these get turned into\n * zero equivalents, i.e. \"#fff0\" or \"0px 0px\".\n */\nconst invalidTemplates = new Set([\"auto\", \"none\", \"0\"]);\nfunction makeNoneKeyframesAnimatable(unresolvedKeyframes, noneKeyframeIndexes, name) {\n    let i = 0;\n    let animatableTemplate = undefined;\n    while (i < unresolvedKeyframes.length && !animatableTemplate) {\n        const keyframe = unresolvedKeyframes[i];\n        if (typeof keyframe === \"string\" &&\n            !invalidTemplates.has(keyframe) &&\n            analyseComplexValue(keyframe).values.length) {\n            animatableTemplate = unresolvedKeyframes[i];\n        }\n        i++;\n    }\n    if (animatableTemplate && name) {\n        for (const noneIndex of noneKeyframeIndexes) {\n            unresolvedKeyframes[noneIndex] = getAnimatableNone(name, animatableTemplate);\n        }\n    }\n}\n\nexport { makeNoneKeyframesAnimatable };\n","import { positionalKeys } from '../../render/utils/keys-position.mjs';\nimport { findDimensionValueType } from '../../value/types/dimensions.mjs';\nimport { getVariableValue } from '../utils/css-variables-conversion.mjs';\nimport { isCSSVariableToken } from '../utils/is-css-variable.mjs';\nimport { KeyframeResolver } from './KeyframesResolver.mjs';\nimport { isNone } from './utils/is-none.mjs';\nimport { makeNoneKeyframesAnimatable } from './utils/make-none-animatable.mjs';\nimport { isNumOrPxType, positionalValues } from './utils/unit-conversion.mjs';\n\nclass DOMKeyframesResolver extends KeyframeResolver {\n    constructor(unresolvedKeyframes, onComplete, name, motionValue, element) {\n        super(unresolvedKeyframes, onComplete, name, motionValue, element, true);\n    }\n    readKeyframes() {\n        const { unresolvedKeyframes, element, name } = this;\n        if (!element || !element.current)\n            return;\n        super.readKeyframes();\n        /**\n         * If any keyframe is a CSS variable, we need to find its value by sampling the element\n         */\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            let keyframe = unresolvedKeyframes[i];\n            if (typeof keyframe === \"string\") {\n                keyframe = keyframe.trim();\n                if (isCSSVariableToken(keyframe)) {\n                    const resolved = getVariableValue(keyframe, element.current);\n                    if (resolved !== undefined) {\n                        unresolvedKeyframes[i] = resolved;\n                    }\n                    if (i === unresolvedKeyframes.length - 1) {\n                        this.finalKeyframe = keyframe;\n                    }\n                }\n            }\n        }\n        /**\n         * Resolve \"none\" values. We do this potentially twice - once before and once after measuring keyframes.\n         * This could be seen as inefficient but it's a trade-off to avoid measurements in more situations, which\n         * have a far bigger performance impact.\n         */\n        this.resolveNoneKeyframes();\n        /**\n         * Check to see if unit type has changed. If so schedule jobs that will\n         * temporarily set styles to the destination keyframes.\n         * Skip if we have more than two keyframes or this isn't a positional value.\n         * TODO: We can throw if there are multiple keyframes and the value type changes.\n         */\n        if (!positionalKeys.has(name) || unresolvedKeyframes.length !== 2) {\n            return;\n        }\n        const [origin, target] = unresolvedKeyframes;\n        const originType = findDimensionValueType(origin);\n        const targetType = findDimensionValueType(target);\n        /**\n         * Either we don't recognise these value types or we can animate between them.\n         */\n        if (originType === targetType)\n            return;\n        /**\n         * If both values are numbers or pixels, we can animate between them by\n         * converting them to numbers.\n         */\n        if (isNumOrPxType(originType) && isNumOrPxType(targetType)) {\n            for (let i = 0; i < unresolvedKeyframes.length; i++) {\n                const value = unresolvedKeyframes[i];\n                if (typeof value === \"string\") {\n                    unresolvedKeyframes[i] = parseFloat(value);\n                }\n            }\n        }\n        else if (positionalValues[name]) {\n            /**\n             * Else, the only way to resolve this is by measuring the element.\n             */\n            this.needsMeasurement = true;\n        }\n    }\n    resolveNoneKeyframes() {\n        const { unresolvedKeyframes, name } = this;\n        const noneKeyframeIndexes = [];\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            if (unresolvedKeyframes[i] === null ||\n                isNone(unresolvedKeyframes[i])) {\n                noneKeyframeIndexes.push(i);\n            }\n        }\n        if (noneKeyframeIndexes.length) {\n            makeNoneKeyframesAnimatable(unresolvedKeyframes, noneKeyframeIndexes, name);\n        }\n    }\n    measureInitialState() {\n        const { element, unresolvedKeyframes, name } = this;\n        if (!element || !element.current)\n            return;\n        if (name === \"height\") {\n            this.suspendedScrollY = window.pageYOffset;\n        }\n        this.measuredOrigin = positionalValues[name](element.measureViewportBox(), window.getComputedStyle(element.current));\n        unresolvedKeyframes[0] = this.measuredOrigin;\n        // Set final key frame to measure after next render\n        const measureKeyframe = unresolvedKeyframes[unresolvedKeyframes.length - 1];\n        if (measureKeyframe !== undefined) {\n            element.getValue(name, measureKeyframe).jump(measureKeyframe, false);\n        }\n    }\n    measureEndState() {\n        const { element, name, unresolvedKeyframes } = this;\n        if (!element || !element.current)\n            return;\n        const value = element.getValue(name);\n        value && value.jump(this.measuredOrigin, false);\n        const finalKeyframeIndex = unresolvedKeyframes.length - 1;\n        const finalKeyframe = unresolvedKeyframes[finalKeyframeIndex];\n        unresolvedKeyframes[finalKeyframeIndex] = positionalValues[name](element.measureViewportBox(), window.getComputedStyle(element.current));\n        if (finalKeyframe !== null && this.finalKeyframe === undefined) {\n            this.finalKeyframe = finalKeyframe;\n        }\n        // If we removed transform values, reapply them before the next render\n        if (this.removedTransforms?.length) {\n            this.removedTransforms.forEach(([unsetTransformName, unsetTransformValue]) => {\n                element\n                    .getValue(unsetTransformName)\n                    .set(unsetTransformValue);\n            });\n        }\n        this.resolveNoneKeyframes();\n    }\n}\n\nexport { DOMKeyframesResolver };\n","import { isZeroValueString } from 'motion-utils';\n\nfunction isNone(value) {\n    if (typeof value === \"number\") {\n        return value === 0;\n    }\n    else if (value !== null) {\n        return value === \"none\" || value === \"0\" || isZeroValueString(value);\n    }\n    else {\n        return true;\n    }\n}\n\nexport { isNone };\n","import { DOMKeyframesResolver, isMotionValue } from 'motion-dom';\nimport { VisualElement } from '../VisualElement.mjs';\n\nclass DOMVisualElement extends VisualElement {\n    constructor() {\n        super(...arguments);\n        this.KeyframeResolver = DOMKeyframesResolver;\n    }\n    sortInstanceNodePosition(a, b) {\n        /**\n         * compareDocumentPosition returns a bitmask, by using the bitwise &\n         * we're returning true if 2 in that bitmask is set to true. 2 is set\n         * to true if b preceeds a.\n         */\n        return a.compareDocumentPosition(b) & 2 ? 1 : -1;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props.style\n            ? props.style[key]\n            : undefined;\n    }\n    removeValueFromRenderState(key, { vars, style }) {\n        delete vars[key];\n        delete style[key];\n    }\n    handleChildMotionValue() {\n        if (this.childSubscription) {\n            this.childSubscription();\n            delete this.childSubscription;\n        }\n        const { children } = this.props;\n        if (isMotionValue(children)) {\n            this.childSubscription = children.on(\"change\", (latest) => {\n                if (this.current) {\n                    this.current.textContent = `${latest}`;\n                }\n            });\n        }\n    }\n}\n\nexport { DOMVisualElement };\n","import { isMotionValue, transformPropOrder } from 'motion-dom';\nimport { scrapeMotionValuesFromProps as scrapeMotionValuesFromProps$1 } from '../../html/utils/scrape-motion-values.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n    const newValues = scrapeMotionValuesFromProps$1(props, prevProps, visualElement);\n    for (const key in props) {\n        if (isMotionValue(props[key]) ||\n            isMotionValue(prevProps[key])) {\n            const targetKey = transformPropOrder.indexOf(key) !== -1\n                ? \"attr\" + key.charAt(0).toUpperCase() + key.substring(1)\n                : key;\n            newValues[targetKey] = props[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","const stepsOrder = [\n    \"setup\", // Compute\n    \"read\", // Read\n    \"resolveKeyframes\", // Write/Read/Write/Read\n    \"preUpdate\", // Compute\n    \"update\", // Compute\n    \"preRender\", // Compute\n    \"render\", // Write\n    \"postRender\", // Compute\n];\n\nexport { stepsOrder };\n","import { MotionGlobalConfig } from 'motion-utils';\nimport { stepsOrder } from './order.mjs';\nimport { createRenderStep } from './render-step.mjs';\n\nconst maxElapsed = 40;\nfunction createRenderBatcher(scheduleNextBatch, allowKeepAlive) {\n    let runNextFrame = false;\n    let useDefaultElapsed = true;\n    const state = {\n        delta: 0.0,\n        timestamp: 0.0,\n        isProcessing: false,\n    };\n    const flagRunNextFrame = () => (runNextFrame = true);\n    const steps = stepsOrder.reduce((acc, key) => {\n        acc[key] = createRenderStep(flagRunNextFrame, allowKeepAlive ? key : undefined);\n        return acc;\n    }, {});\n    const { setup, read, resolveKeyframes, preUpdate, update, preRender, render, postRender, } = steps;\n    const processBatch = () => {\n        const timestamp = MotionGlobalConfig.useManualTiming\n            ? state.timestamp\n            : performance.now();\n        runNextFrame = false;\n        if (!MotionGlobalConfig.useManualTiming) {\n            state.delta = useDefaultElapsed\n                ? 1000 / 60\n                : Math.max(Math.min(timestamp - state.timestamp, maxElapsed), 1);\n        }\n        state.timestamp = timestamp;\n        state.isProcessing = true;\n        // Unrolled render loop for better per-frame performance\n        setup.process(state);\n        read.process(state);\n        resolveKeyframes.process(state);\n        preUpdate.process(state);\n        update.process(state);\n        preRender.process(state);\n        render.process(state);\n        postRender.process(state);\n        state.isProcessing = false;\n        if (runNextFrame && allowKeepAlive) {\n            useDefaultElapsed = false;\n            scheduleNextBatch(processBatch);\n        }\n    };\n    const wake = () => {\n        runNextFrame = true;\n        useDefaultElapsed = true;\n        if (!state.isProcessing) {\n            scheduleNextBatch(processBatch);\n        }\n    };\n    const schedule = stepsOrder.reduce((acc, key) => {\n        const step = steps[key];\n        acc[key] = (process, keepAlive = false, immediate = false) => {\n            if (!runNextFrame)\n                wake();\n            return step.schedule(process, keepAlive, immediate);\n        };\n        return acc;\n    }, {});\n    const cancel = (process) => {\n        for (let i = 0; i < stepsOrder.length; i++) {\n            steps[stepsOrder[i]].cancel(process);\n        }\n    };\n    return { schedule, cancel, state, steps };\n}\n\nexport { createRenderBatcher };\n","import { statsBuffer } from '../stats/buffer.mjs';\n\nfunction createRenderStep(runNextFrame, stepName) {\n    /**\n     * We create and reuse two queues, one to queue jobs for the current frame\n     * and one for the next. We reuse to avoid triggering GC after x frames.\n     */\n    let thisFrame = new Set();\n    let nextFrame = new Set();\n    /**\n     * Track whether we're currently processing jobs in this step. This way\n     * we can decide whether to schedule new jobs for this frame or next.\n     */\n    let isProcessing = false;\n    let flushNextFrame = false;\n    /**\n     * A set of processes which were marked keepAlive when scheduled.\n     */\n    const toKeepAlive = new WeakSet();\n    let latestFrameData = {\n        delta: 0.0,\n        timestamp: 0.0,\n        isProcessing: false,\n    };\n    let numCalls = 0;\n    function triggerCallback(callback) {\n        if (toKeepAlive.has(callback)) {\n            step.schedule(callback);\n            runNextFrame();\n        }\n        numCalls++;\n        callback(latestFrameData);\n    }\n    const step = {\n        /**\n         * Schedule a process to run on the next frame.\n         */\n        schedule: (callback, keepAlive = false, immediate = false) => {\n            const addToCurrentFrame = immediate && isProcessing;\n            const queue = addToCurrentFrame ? thisFrame : nextFrame;\n            if (keepAlive)\n                toKeepAlive.add(callback);\n            if (!queue.has(callback))\n                queue.add(callback);\n            return callback;\n        },\n        /**\n         * Cancel the provided callback from running on the next frame.\n         */\n        cancel: (callback) => {\n            nextFrame.delete(callback);\n            toKeepAlive.delete(callback);\n        },\n        /**\n         * Execute all schedule callbacks.\n         */\n        process: (frameData) => {\n            latestFrameData = frameData;\n            /**\n             * If we're already processing we've probably been triggered by a flushSync\n             * inside an existing process. Instead of executing, mark flushNextFrame\n             * as true and ensure we flush the following frame at the end of this one.\n             */\n            if (isProcessing) {\n                flushNextFrame = true;\n                return;\n            }\n            isProcessing = true;\n            [thisFrame, nextFrame] = [nextFrame, thisFrame];\n            // Execute this frame\n            thisFrame.forEach(triggerCallback);\n            /**\n             * If we're recording stats then\n             */\n            if (stepName && statsBuffer.value) {\n                statsBuffer.value.frameloop[stepName].push(numCalls);\n            }\n            numCalls = 0;\n            // Clear the frame so no callbacks remain. This is to avoid\n            // memory leaks should this render step not run for a while.\n            thisFrame.clear();\n            isProcessing = false;\n            if (flushNextFrame) {\n                flushNextFrame = false;\n                step.process(frameData);\n            }\n        },\n    };\n    return step;\n}\n\nexport { createRenderStep };\n","const isKeyframesTarget = (v) => {\n    return Array.isArray(v);\n};\n\nexport { isKeyframesTarget };\n","const isMotionValue = (value) => Boolean(value && value.getVelocity);\n\nexport { isMotionValue };\n","/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxGeneratorDuration = 20000;\nfunction calcGeneratorDuration(generator) {\n    let duration = 0;\n    const timeStep = 50;\n    let state = generator.next(duration);\n    while (!state.done && duration < maxGeneratorDuration) {\n        duration += timeStep;\n        state = generator.next(duration);\n    }\n    return duration >= maxGeneratorDuration ? Infinity : duration;\n}\n\nexport { calcGeneratorDuration, maxGeneratorDuration };\n","import { auto } from './auto.mjs';\nimport { number } from './numbers/index.mjs';\nimport { px, percent, degrees, vw, vh } from './numbers/units.mjs';\nimport { testValueType } from './test.mjs';\n\n/**\n * A list of value types commonly used for dimensions\n */\nconst dimensionValueTypes = [number, px, percent, degrees, vw, vh, auto];\n/**\n * Tests a dimensional value against the list of dimension ValueTypes\n */\nconst findDimensionValueType = (v) => dimensionValueTypes.find(testValueType(v));\n\nexport { dimensionValueTypes, findDimensionValueType };\n","/**\n * ValueType for \"auto\"\n */\nconst auto = {\n    test: (v) => v === \"auto\",\n    parse: (v) => v,\n};\n\nexport { auto };\n","// Accepts an easing function and returns a new one that outputs reversed values.\n// Turns easeIn into easeOut.\nconst reverseEasing = (easing) => (p) => 1 - easing(1 - p);\n\nexport { reverseEasing };\n","/*\n  Value in range from progress\n\n  Given a lower limit and an upper limit, we return the value within\n  that range as expressed by progress (usually a number from 0 to 1)\n\n  So progress = 0.5 would change\n\n  from -------- to\n\n  to\n\n  from ---- to\n\n  E.g. from = 10, to = 20, progress = 0.5 => 15\n\n  @param [number]: Lower limit of range\n  @param [number]: Upper limit of range\n  @param [number]: The progress between lower and upper limits expressed 0-1\n  @return [number]: Value as calculated from progress within range (not limited within range)\n*/\nconst mixNumber = (from, to, progress) => {\n    return from + (to - from) * progress;\n};\n\nexport { mixNumber };\n","const checkStringStartsWith = (token) => (key) => typeof key === \"string\" && key.startsWith(token);\nconst isCSSVariableName = \n/*@__PURE__*/ checkStringStartsWith(\"--\");\nconst startsAsVariableToken = \n/*@__PURE__*/ checkStringStartsWith(\"var(--\");\nconst isCSSVariableToken = (value) => {\n    const startsWithToken = startsAsVariableToken(value);\n    if (!startsWithToken)\n        return false;\n    // Ensure any comments are stripped from the value as this can harm performance of the regex.\n    return singleCssVariableRegex.test(value.split(\"/*\")[0].trim());\n};\nconst singleCssVariableRegex = /var\\(--(?:[\\w-]+\\s*|[\\w-]+\\s*,(?:\\s*[^)(\\s]|\\s*\\((?:[^)(]|\\([^)(]*\\))*\\))+\\s*)\\)$/iu;\n\nexport { isCSSVariableName, isCSSVariableToken };\n","/**\n * Convert camelCase to dash-case properties.\n */\nconst camelToDash = (str) => str.replace(/([a-z])([A-Z])/gu, \"$1-$2\").toLowerCase();\n\nexport { camelToDash };\n","\"use client\";\nimport { createContext } from 'react';\n\nconst LayoutGroupContext = createContext({});\n\nexport { LayoutGroupContext };\n","const colorRegex = /(?:#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\))/giu;\n\nexport { colorRegex };\n","import { color } from '../color/index.mjs';\nimport { colorRegex } from '../utils/color-regex.mjs';\nimport { floatRegex } from '../utils/float-regex.mjs';\nimport { sanitize } from '../utils/sanitize.mjs';\n\nfunction test(v) {\n    return (isNaN(v) &&\n        typeof v === \"string\" &&\n        (v.match(floatRegex)?.length || 0) +\n            (v.match(colorRegex)?.length || 0) >\n            0);\n}\nconst NUMBER_TOKEN = \"number\";\nconst COLOR_TOKEN = \"color\";\nconst VAR_TOKEN = \"var\";\nconst VAR_FUNCTION_TOKEN = \"var(\";\nconst SPLIT_TOKEN = \"${}\";\n// this regex consists of the `singleCssVariableRegex|rgbHSLValueRegex|digitRegex`\nconst complexRegex = /var\\s*\\(\\s*--(?:[\\w-]+\\s*|[\\w-]+\\s*,(?:\\s*[^)(\\s]|\\s*\\((?:[^)(]|\\([^)(]*\\))*\\))+\\s*)\\)|#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\)|-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/giu;\nfunction analyseComplexValue(value) {\n    const originalValue = value.toString();\n    const values = [];\n    const indexes = {\n        color: [],\n        number: [],\n        var: [],\n    };\n    const types = [];\n    let i = 0;\n    const tokenised = originalValue.replace(complexRegex, (parsedValue) => {\n        if (color.test(parsedValue)) {\n            indexes.color.push(i);\n            types.push(COLOR_TOKEN);\n            values.push(color.parse(parsedValue));\n        }\n        else if (parsedValue.startsWith(VAR_FUNCTION_TOKEN)) {\n            indexes.var.push(i);\n            types.push(VAR_TOKEN);\n            values.push(parsedValue);\n        }\n        else {\n            indexes.number.push(i);\n            types.push(NUMBER_TOKEN);\n            values.push(parseFloat(parsedValue));\n        }\n        ++i;\n        return SPLIT_TOKEN;\n    });\n    const split = tokenised.split(SPLIT_TOKEN);\n    return { values, split, indexes, types };\n}\nfunction parseComplexValue(v) {\n    return analyseComplexValue(v).values;\n}\nfunction createTransformer(source) {\n    const { split, types } = analyseComplexValue(source);\n    const numSections = split.length;\n    return (v) => {\n        let output = \"\";\n        for (let i = 0; i < numSections; i++) {\n            output += split[i];\n            if (v[i] !== undefined) {\n                const type = types[i];\n                if (type === NUMBER_TOKEN) {\n                    output += sanitize(v[i]);\n                }\n                else if (type === COLOR_TOKEN) {\n                    output += color.transform(v[i]);\n                }\n                else {\n                    output += v[i];\n                }\n            }\n        }\n        return output;\n    };\n}\nconst convertNumbersToZero = (v) => typeof v === \"number\" ? 0 : v;\nfunction getAnimatableNone(v) {\n    const parsed = parseComplexValue(v);\n    const transformer = createTransformer(v);\n    return transformer(parsed.map(convertNumbersToZero));\n}\nconst complex = {\n    test,\n    parse: parseComplexValue,\n    createTransformer,\n    getAnimatableNone,\n};\n\nexport { analyseComplexValue, complex };\n","/*\n  Progress within given range\n\n  Given a lower limit and an upper limit, we return the progress\n  (expressed as a number 0-1) represented by the given value, and\n  limit that progress to within 0-1.\n\n  @param [number]: Lower limit\n  @param [number]: Upper limit\n  @param [number]: Value to find progress within given range\n  @return [number]: Progress of value within range as expressed 0-1\n*/\n/*#__NO_SIDE_EFFECTS__*/\nconst progress = (from, to, value) => {\n    const toFromDifference = to - from;\n    return toFromDifference === 0 ? 1 : (value - from) / toFromDifference;\n};\n\nexport { progress };\n","import { transformProps } from 'motion-dom';\nimport { scaleCorrectors } from '../../projection/styles/scale-correction.mjs';\n\nfunction isForcedMotionValue(key, { layout, layoutId }) {\n    return (transformProps.has(key) ||\n        key.startsWith(\"origin\") ||\n        ((layout || layoutId !== undefined) &&\n            (!!scaleCorrectors[key] || key === \"opacity\")));\n}\n\nexport { isForcedMotionValue };\n","const radToDeg = (rad) => (rad * 180) / Math.PI;\nconst rotate = (v) => {\n    const angle = radToDeg(Math.atan2(v[1], v[0]));\n    return rebaseAngle(angle);\n};\nconst matrix2dParsers = {\n    x: 4,\n    y: 5,\n    translateX: 4,\n    translateY: 5,\n    scaleX: 0,\n    scaleY: 3,\n    scale: (v) => (Math.abs(v[0]) + Math.abs(v[3])) / 2,\n    rotate,\n    rotateZ: rotate,\n    skewX: (v) => radToDeg(Math.atan(v[1])),\n    skewY: (v) => radToDeg(Math.atan(v[2])),\n    skew: (v) => (Math.abs(v[1]) + Math.abs(v[2])) / 2,\n};\nconst rebaseAngle = (angle) => {\n    angle = angle % 360;\n    if (angle < 0)\n        angle += 360;\n    return angle;\n};\nconst rotateZ = rotate;\nconst scaleX = (v) => Math.sqrt(v[0] * v[0] + v[1] * v[1]);\nconst scaleY = (v) => Math.sqrt(v[4] * v[4] + v[5] * v[5]);\nconst matrix3dParsers = {\n    x: 12,\n    y: 13,\n    z: 14,\n    translateX: 12,\n    translateY: 13,\n    translateZ: 14,\n    scaleX,\n    scaleY,\n    scale: (v) => (scaleX(v) + scaleY(v)) / 2,\n    rotateX: (v) => rebaseAngle(radToDeg(Math.atan2(v[6], v[5]))),\n    rotateY: (v) => rebaseAngle(radToDeg(Math.atan2(-v[2], v[0]))),\n    rotateZ,\n    rotate: rotateZ,\n    skewX: (v) => radToDeg(Math.atan(v[4])),\n    skewY: (v) => radToDeg(Math.atan(v[1])),\n    skew: (v) => (Math.abs(v[1]) + Math.abs(v[4])) / 2,\n};\nfunction defaultTransformValue(name) {\n    return name.includes(\"scale\") ? 1 : 0;\n}\nfunction parseValueFromTransform(transform, name) {\n    if (!transform || transform === \"none\") {\n        return defaultTransformValue(name);\n    }\n    const matrix3dMatch = transform.match(/^matrix3d\\(([-\\d.e\\s,]+)\\)$/u);\n    let parsers;\n    let match;\n    if (matrix3dMatch) {\n        parsers = matrix3dParsers;\n        match = matrix3dMatch;\n    }\n    else {\n        const matrix2dMatch = transform.match(/^matrix\\(([-\\d.e\\s,]+)\\)$/u);\n        parsers = matrix2dParsers;\n        match = matrix2dMatch;\n    }\n    if (!match) {\n        return defaultTransformValue(name);\n    }\n    const valueParser = parsers[name];\n    const values = match[1].split(\",\").map(convertTransformToNumber);\n    return typeof valueParser === \"function\"\n        ? valueParser(values)\n        : values[valueParser];\n}\nconst readTransformValue = (instance, name) => {\n    const { transform = \"none\" } = getComputedStyle(instance);\n    return parseValueFromTransform(transform, name);\n};\nfunction convertTransformToNumber(value) {\n    return parseFloat(value.trim());\n}\n\nexport { defaultTransformValue, parseValueFromTransform, readTransformValue };\n","function isGenerator(type) {\n    return typeof type === \"function\" && \"applyToOptions\" in type;\n}\n\nexport { isGenerator };\n","function renderHTML(element, { style, vars }, styleProp, projection) {\n    Object.assign(element.style, style, projection && projection.getProjectionStyles(styleProp));\n    // Loop over any CSS variables and assign those.\n    for (const key in vars) {\n        element.style.setProperty(key, vars[key]);\n    }\n}\n\nexport { renderHTML };\n","import { alpha } from '../numbers/index.mjs';\nimport { percent } from '../numbers/units.mjs';\nimport { sanitize } from '../utils/sanitize.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst hsla = {\n    test: /*@__PURE__*/ isColorString(\"hsl\", \"hue\"),\n    parse: /*@__PURE__*/ splitColor(\"hue\", \"saturation\", \"lightness\"),\n    transform: ({ hue, saturation, lightness, alpha: alpha$1 = 1 }) => {\n        return (\"hsla(\" +\n            Math.round(hue) +\n            \", \" +\n            percent.transform(sanitize(saturation)) +\n            \", \" +\n            percent.transform(sanitize(lightness)) +\n            \", \" +\n            sanitize(alpha.transform(alpha$1)) +\n            \")\");\n    },\n};\n\nexport { hsla };\n","const MotionGlobalConfig = {};\n\nexport { MotionGlobalConfig };\n","/**\n * Converts seconds to milliseconds\n *\n * @param seconds - Time in seconds.\n * @return milliseconds - Converted time in milliseconds.\n */\n/*#__NO_SIDE_EFFECTS__*/\nconst secondsToMilliseconds = (seconds) => seconds * 1000;\n/*#__NO_SIDE_EFFECTS__*/\nconst millisecondsToSeconds = (milliseconds) => milliseconds / 1000;\n\nexport { millisecondsToSeconds, secondsToMilliseconds };\n","const variantPriorityOrder = [\n    \"animate\",\n    \"whileInView\",\n    \"whileFocus\",\n    \"whileHover\",\n    \"whileTap\",\n    \"whileDrag\",\n    \"exit\",\n];\nconst variantProps = [\"initial\", ...variantPriorityOrder];\n\nexport { variantPriorityOrder, variantProps };\n","const generateLinearEasing = (easing, duration, // as milliseconds\nresolution = 10 // as milliseconds\n) => {\n    let points = \"\";\n    const numPoints = Math.max(Math.round(duration / resolution), 2);\n    for (let i = 0; i < numPoints; i++) {\n        points += easing(i / (numPoints - 1)) + \", \";\n    }\n    return `linear(${points.substring(0, points.length - 2)})`;\n};\n\nexport { generateLinearEasing };\n","const isEasingArray = (ease) => {\n    return Array.isArray(ease) && typeof ease[0] !== \"number\";\n};\n\nexport { isEasingArray };\n","import { velocityPerSecond } from 'motion-utils';\n\nconst velocitySampleDuration = 5; // ms\nfunction calcGeneratorVelocity(resolveValue, t, current) {\n    const prevT = Math.max(t - velocitySampleDuration, 0);\n    return velocityPerSecond(current - resolveValue(prevT), t - prevT);\n}\n\nexport { calcGeneratorVelocity };\n","function isIdentityScale(scale) {\n    return scale === undefined || scale === 1;\n}\nfunction hasScale({ scale, scaleX, scaleY }) {\n    return (!isIdentityScale(scale) ||\n        !isIdentityScale(scaleX) ||\n        !isIdentityScale(scaleY));\n}\nfunction hasTransform(values) {\n    return (hasScale(values) ||\n        has2DTranslate(values) ||\n        values.z ||\n        values.rotate ||\n        values.rotateX ||\n        values.rotateY ||\n        values.skewX ||\n        values.skewY);\n}\nfunction has2DTranslate(values) {\n    return is2DTranslate(values.x) || is2DTranslate(values.y);\n}\nfunction is2DTranslate(value) {\n    return value && value !== \"0%\";\n}\n\nexport { has2DTranslate, hasScale, hasTransform };\n","/**\n * Tests a provided value against a ValueType\n */\nconst testValueType = (v) => (type) => type.test(v);\n\nexport { testValueType };\n","const isBrowser = typeof window !== \"undefined\";\n\nexport { isBrowser };\n","/*#__NO_SIDE_EFFECTS__*/\nconst noop = (any) => any;\n\nexport { noop };\n","/*\n  Convert velocity into velocity per second\n\n  @param [number]: Unit per frame\n  @param [number]: Frame duration in ms\n*/\nfunction velocityPerSecond(velocity, frameDuration) {\n    return frameDuration ? velocity * (1000 / frameDuration) : 0;\n}\n\nexport { velocityPerSecond };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst circIn = (p) => 1 - Math.sin(Math.acos(p));\nconst circOut = reverseEasing(circIn);\nconst circInOut = mirrorEasing(circIn);\n\nexport { circIn, circInOut, circOut };\n","import { isCSSVariableName } from 'motion-dom';\n\nconst scaleCorrectors = {};\nfunction addScaleCorrector(correctors) {\n    for (const key in correctors) {\n        scaleCorrectors[key] = correctors[key];\n        if (isCSSVariableName(key)) {\n            scaleCorrectors[key].isCSSVariable = true;\n        }\n    }\n}\n\nexport { addScaleCorrector, scaleCorrectors };\n","import { useRef } from 'react';\n\n/**\n * Creates a constant value over the lifecycle of a component.\n *\n * Even if `useMemo` is provided an empty array as its final argument, it doesn't offer\n * a guarantee that it won't re-run for performance reasons later on. By using `useConstant`\n * you can ensure that initialisers don't execute twice or more.\n */\nfunction useConstant(init) {\n    const ref = useRef(null);\n    if (ref.current === null) {\n        ref.current = init();\n    }\n    return ref.current;\n}\n\nexport { useConstant };\n","import { rgba } from './rgba.mjs';\nimport { isColorString } from './utils.mjs';\n\nfunction parseHex(v) {\n    let r = \"\";\n    let g = \"\";\n    let b = \"\";\n    let a = \"\";\n    // If we have 6 characters, ie #FF0000\n    if (v.length > 5) {\n        r = v.substring(1, 3);\n        g = v.substring(3, 5);\n        b = v.substring(5, 7);\n        a = v.substring(7, 9);\n        // Or we have 3 characters, ie #F00\n    }\n    else {\n        r = v.substring(1, 2);\n        g = v.substring(2, 3);\n        b = v.substring(3, 4);\n        a = v.substring(4, 5);\n        r += r;\n        g += g;\n        b += b;\n        a += a;\n    }\n    return {\n        red: parseInt(r, 16),\n        green: parseInt(g, 16),\n        blue: parseInt(b, 16),\n        alpha: a ? parseInt(a, 16) / 255 : 1,\n    };\n}\nconst hex = {\n    test: /*@__PURE__*/ isColorString(\"#\"),\n    parse: parseHex,\n    transform: rgba.transform,\n};\n\nexport { hex };\n","// If this number is a decimal, make it just five decimal places\n// to avoid exponents\nconst sanitize = (v) => Math.round(v * 100000) / 100000;\n\nexport { sanitize };\n","import { complex } from '../complex/index.mjs';\nimport { filter } from '../complex/filter.mjs';\nimport { getDefaultValueType } from '../maps/defaults.mjs';\n\nfunction getAnimatableNone(key, value) {\n    let defaultValueType = getDefaultValueType(key);\n    if (defaultValueType !== filter)\n        defaultValueType = complex;\n    // If value is not recognised as animatable, ie \"none\", create an animatable version origin based on the target\n    return defaultValueType.getAnimatableNone\n        ? defaultValueType.getAnimatableNone(value)\n        : undefined;\n}\n\nexport { getAnimatableNone };\n","import { fillWildcards } from './utils/fill-wildcards.mjs';\nimport { removeNonTranslationalTransform } from './utils/unit-conversion.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst toResolve = new Set();\nlet isScheduled = false;\nlet anyNeedsMeasurement = false;\nlet isForced = false;\nfunction measureAllKeyframes() {\n    if (anyNeedsMeasurement) {\n        const resolversToMeasure = Array.from(toResolve).filter((resolver) => resolver.needsMeasurement);\n        const elementsToMeasure = new Set(resolversToMeasure.map((resolver) => resolver.element));\n        const transformsToRestore = new Map();\n        /**\n         * Write pass\n         * If we're measuring elements we want to remove bounding box-changing transforms.\n         */\n        elementsToMeasure.forEach((element) => {\n            const removedTransforms = removeNonTranslationalTransform(element);\n            if (!removedTransforms.length)\n                return;\n            transformsToRestore.set(element, removedTransforms);\n            element.render();\n        });\n        // Read\n        resolversToMeasure.forEach((resolver) => resolver.measureInitialState());\n        // Write\n        elementsToMeasure.forEach((element) => {\n            element.render();\n            const restore = transformsToRestore.get(element);\n            if (restore) {\n                restore.forEach(([key, value]) => {\n                    element.getValue(key)?.set(value);\n                });\n            }\n        });\n        // Read\n        resolversToMeasure.forEach((resolver) => resolver.measureEndState());\n        // Write\n        resolversToMeasure.forEach((resolver) => {\n            if (resolver.suspendedScrollY !== undefined) {\n                window.scrollTo(0, resolver.suspendedScrollY);\n            }\n        });\n    }\n    anyNeedsMeasurement = false;\n    isScheduled = false;\n    toResolve.forEach((resolver) => resolver.complete(isForced));\n    toResolve.clear();\n}\nfunction readAllKeyframes() {\n    toResolve.forEach((resolver) => {\n        resolver.readKeyframes();\n        if (resolver.needsMeasurement) {\n            anyNeedsMeasurement = true;\n        }\n    });\n}\nfunction flushKeyframeResolvers() {\n    isForced = true;\n    readAllKeyframes();\n    measureAllKeyframes();\n    isForced = false;\n}\nclass KeyframeResolver {\n    constructor(unresolvedKeyframes, onComplete, name, motionValue, element, isAsync = false) {\n        this.state = \"pending\";\n        /**\n         * Track whether this resolver is async. If it is, it'll be added to the\n         * resolver queue and flushed in the next frame. Resolvers that aren't going\n         * to trigger read/write thrashing don't need to be async.\n         */\n        this.isAsync = false;\n        /**\n         * Track whether this resolver needs to perform a measurement\n         * to resolve its keyframes.\n         */\n        this.needsMeasurement = false;\n        this.unresolvedKeyframes = [...unresolvedKeyframes];\n        this.onComplete = onComplete;\n        this.name = name;\n        this.motionValue = motionValue;\n        this.element = element;\n        this.isAsync = isAsync;\n    }\n    scheduleResolve() {\n        this.state = \"scheduled\";\n        if (this.isAsync) {\n            toResolve.add(this);\n            if (!isScheduled) {\n                isScheduled = true;\n                frame.read(readAllKeyframes);\n                frame.resolveKeyframes(measureAllKeyframes);\n            }\n        }\n        else {\n            this.readKeyframes();\n            this.complete();\n        }\n    }\n    readKeyframes() {\n        const { unresolvedKeyframes, name, element, motionValue } = this;\n        // If initial keyframe is null we need to read it from the DOM\n        if (unresolvedKeyframes[0] === null) {\n            const currentValue = motionValue?.get();\n            // TODO: This doesn't work if the final keyframe is a wildcard\n            const finalKeyframe = unresolvedKeyframes[unresolvedKeyframes.length - 1];\n            if (currentValue !== undefined) {\n                unresolvedKeyframes[0] = currentValue;\n            }\n            else if (element && name) {\n                const valueAsRead = element.readValue(name, finalKeyframe);\n                if (valueAsRead !== undefined && valueAsRead !== null) {\n                    unresolvedKeyframes[0] = valueAsRead;\n                }\n            }\n            if (unresolvedKeyframes[0] === undefined) {\n                unresolvedKeyframes[0] = finalKeyframe;\n            }\n            if (motionValue && currentValue === undefined) {\n                motionValue.set(unresolvedKeyframes[0]);\n            }\n        }\n        fillWildcards(unresolvedKeyframes);\n    }\n    setFinalKeyframe() { }\n    measureInitialState() { }\n    renderEndStyles() { }\n    measureEndState() { }\n    complete(isForcedComplete = false) {\n        this.state = \"complete\";\n        this.onComplete(this.unresolvedKeyframes, this.finalKeyframe, isForcedComplete);\n        toResolve.delete(this);\n    }\n    cancel() {\n        if (this.state === \"scheduled\") {\n            toResolve.delete(this);\n            this.state = \"pending\";\n        }\n    }\n    resume() {\n        if (this.state === \"pending\")\n            this.scheduleResolve();\n    }\n}\n\nexport { KeyframeResolver, flushKeyframeResolvers };\n","function fillWildcards(keyframes) {\n    for (let i = 1; i < keyframes.length; i++) {\n        keyframes[i] ?? (keyframes[i] = keyframes[i - 1]);\n    }\n}\n\nexport { fillWildcards };\n","import { isObject } from 'motion-utils';\n\n/**\n * Checks if an element is an SVG element in a way\n * that works across iframes\n */\nfunction isSVGElement(element) {\n    return isObject(element) && \"ownerSVGElement\" in element;\n}\n\nexport { isSVGElement };\n","import { transformProps, defaultTransformValue, readTransformValue, isCSSVariableName } from 'motion-dom';\nimport { measureViewportBox } from '../../projection/utils/measure.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { renderHTML } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\n\nfunction getComputedStyle(element) {\n    return window.getComputedStyle(element);\n}\nclass HTMLVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.type = \"html\";\n        this.renderInstance = renderHTML;\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            return this.projection?.isProjecting\n                ? defaultTransformValue(key)\n                : readTransformValue(instance, key);\n        }\n        else {\n            const computedStyle = getComputedStyle(instance);\n            const value = (isCSSVariableName(key)\n                ? computedStyle.getPropertyValue(key)\n                : computedStyle[key]) || 0;\n            return typeof value === \"string\" ? value.trim() : value;\n        }\n    }\n    measureInstanceViewportBox(instance, { transformPagePoint }) {\n        return measureViewportBox(instance, transformPagePoint);\n    }\n    build(renderState, latestValues, props) {\n        buildHTMLStyles(renderState, latestValues, props.transformTemplate);\n    }\n    scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n        return scrapeMotionValuesFromProps(props, prevProps, visualElement);\n    }\n}\n\nexport { HTMLVisualElement, getComputedStyle };\n","import { progress } from 'motion-utils';\nimport { mixNumber } from '../../../utils/mix/number.mjs';\n\nfunction fillOffset(offset, remaining) {\n    const min = offset[offset.length - 1];\n    for (let i = 1; i <= remaining; i++) {\n        const offsetProgress = progress(0, remaining, i);\n        offset.push(mixNumber(min, 1, offsetProgress));\n    }\n}\n\nexport { fillOffset };\n","import { hex } from './hex.mjs';\nimport { hsla } from './hsla.mjs';\nimport { rgba } from './rgba.mjs';\n\nconst color = {\n    test: (v) => rgba.test(v) || hex.test(v) || hsla.test(v),\n    parse: (v) => {\n        if (rgba.test(v)) {\n            return rgba.parse(v);\n        }\n        else if (hsla.test(v)) {\n            return hsla.parse(v);\n        }\n        else {\n            return hex.parse(v);\n        }\n    },\n    transform: (v) => {\n        return typeof v === \"string\"\n            ? v\n            : v.hasOwnProperty(\"red\")\n                ? rgba.transform(v)\n                : hsla.transform(v);\n    },\n};\n\nexport { color };\n","import { warnOnce } from 'motion-utils';\n\nfunction createDOMMotionComponentProxy(componentFactory) {\n    if (typeof Proxy === \"undefined\") {\n        return componentFactory;\n    }\n    /**\n     * A cache of generated `motion` components, e.g `motion.div`, `motion.input` etc.\n     * Rather than generating them anew every render.\n     */\n    const componentCache = new Map();\n    const deprecatedFactoryFunction = (...args) => {\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, \"motion() is deprecated. Use motion.create() instead.\");\n        }\n        return componentFactory(...args);\n    };\n    return new Proxy(deprecatedFactoryFunction, {\n        /**\n         * Called when `motion` is referenced with a prop: `motion.div`, `motion.input` etc.\n         * The prop name is passed through as `key` and we can use that to generate a `motion`\n         * DOM component with that name.\n         */\n        get: (_target, key) => {\n            if (key === \"create\")\n                return componentFactory;\n            /**\n             * If this element doesn't exist in the component cache, create it and cache.\n             */\n            if (!componentCache.has(key)) {\n                componentCache.set(key, componentFactory(key));\n            }\n            return componentCache.get(key);\n        },\n    });\n}\n\nexport { createDOMMotionComponentProxy };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\n\nfunction animateVariant(visualElement, variant, options = {}) {\n    const resolved = resolveVariant(visualElement, variant, options.type === \"exit\"\n        ? visualElement.presenceContext?.custom\n        : undefined);\n    let { transition = visualElement.getDefaultTransition() || {} } = resolved || {};\n    if (options.transitionOverride) {\n        transition = options.transitionOverride;\n    }\n    /**\n     * If we have a variant, create a callback that runs it as an animation.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getAnimation = resolved\n        ? () => Promise.all(animateTarget(visualElement, resolved, options))\n        : () => Promise.resolve();\n    /**\n     * If we have children, create a callback that runs all their animations.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getChildAnimations = visualElement.variantChildren && visualElement.variantChildren.size\n        ? (forwardDelay = 0) => {\n            const { delayChildren = 0, staggerChildren, staggerDirection, } = transition;\n            return animateChildren(visualElement, variant, delayChildren + forwardDelay, staggerChildren, staggerDirection, options);\n        }\n        : () => Promise.resolve();\n    /**\n     * If the transition explicitly defines a \"when\" option, we need to resolve either\n     * this animation or all children animations before playing the other.\n     */\n    const { when } = transition;\n    if (when) {\n        const [first, last] = when === \"beforeChildren\"\n            ? [getAnimation, getChildAnimations]\n            : [getChildAnimations, getAnimation];\n        return first().then(() => last());\n    }\n    else {\n        return Promise.all([getAnimation(), getChildAnimations(options.delay)]);\n    }\n}\nfunction animateChildren(visualElement, variant, delayChildren = 0, staggerChildren = 0, staggerDirection = 1, options) {\n    const animations = [];\n    const maxStaggerDuration = (visualElement.variantChildren.size - 1) * staggerChildren;\n    const generateStaggerDuration = staggerDirection === 1\n        ? (i = 0) => i * staggerChildren\n        : (i = 0) => maxStaggerDuration - i * staggerChildren;\n    Array.from(visualElement.variantChildren)\n        .sort(sortByTreeOrder)\n        .forEach((child, i) => {\n        child.notify(\"AnimationStart\", variant);\n        animations.push(animateVariant(child, variant, {\n            ...options,\n            delay: delayChildren + generateStaggerDuration(i),\n        }).then(() => child.notify(\"AnimationComplete\", variant)));\n    });\n    return Promise.all(animations);\n}\nfunction sortByTreeOrder(a, b) {\n    return a.sortNodePosition(b);\n}\n\nexport { animateVariant, sortByTreeOrder };\n","function shallowCompare(next, prev) {\n    if (!Array.isArray(prev))\n        return false;\n    const prevLength = prev.length;\n    if (prevLength !== next.length)\n        return false;\n    for (let i = 0; i < prevLength; i++) {\n        if (prev[i] !== next[i])\n            return false;\n    }\n    return true;\n}\n\nexport { shallowCompare };\n","import { isVariantLabel } from './is-variant-label.mjs';\nimport { variantProps } from './variant-props.mjs';\n\nconst numVariantProps = variantProps.length;\nfunction getVariantContext(visualElement) {\n    if (!visualElement)\n        return undefined;\n    if (!visualElement.isControllingVariants) {\n        const context = visualElement.parent\n            ? getVariantContext(visualElement.parent) || {}\n            : {};\n        if (visualElement.props.initial !== undefined) {\n            context.initial = visualElement.props.initial;\n        }\n        return context;\n    }\n    const context = {};\n    for (let i = 0; i < numVariantProps; i++) {\n        const name = variantProps[i];\n        const prop = visualElement.props[name];\n        if (isVariantLabel(prop) || prop === false) {\n            context[name] = prop;\n        }\n    }\n    return context;\n}\n\nexport { getVariantContext };\n","import { animateVisualElement } from '../../animation/interfaces/visual-element.mjs';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isKeyframesTarget } from '../../animation/utils/is-keyframes-target.mjs';\nimport { shallowCompare } from '../../utils/shallow-compare.mjs';\nimport { getVariantContext } from './get-variant-context.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\nimport { variantPriorityOrder } from './variant-props.mjs';\n\nconst reversePriorityOrder = [...variantPriorityOrder].reverse();\nconst numAnimationTypes = variantPriorityOrder.length;\nfunction animateList(visualElement) {\n    return (animations) => Promise.all(animations.map(({ animation, options }) => animateVisualElement(visualElement, animation, options)));\n}\nfunction createAnimationState(visualElement) {\n    let animate = animateList(visualElement);\n    let state = createState();\n    let isInitialRender = true;\n    /**\n     * This function will be used to reduce the animation definitions for\n     * each active animation type into an object of resolved values for it.\n     */\n    const buildResolvedTypeValues = (type) => (acc, definition) => {\n        const resolved = resolveVariant(visualElement, definition, type === \"exit\"\n            ? visualElement.presenceContext?.custom\n            : undefined);\n        if (resolved) {\n            const { transition, transitionEnd, ...target } = resolved;\n            acc = { ...acc, ...target, ...transitionEnd };\n        }\n        return acc;\n    };\n    /**\n     * This just allows us to inject mocked animation functions\n     * @internal\n     */\n    function setAnimateFunction(makeAnimator) {\n        animate = makeAnimator(visualElement);\n    }\n    /**\n     * When we receive new props, we need to:\n     * 1. Create a list of protected keys for each type. This is a directory of\n     *    value keys that are currently being \"handled\" by types of a higher priority\n     *    so that whenever an animation is played of a given type, these values are\n     *    protected from being animated.\n     * 2. Determine if an animation type needs animating.\n     * 3. Determine if any values have been removed from a type and figure out\n     *    what to animate those to.\n     */\n    function animateChanges(changedActiveType) {\n        const { props } = visualElement;\n        const context = getVariantContext(visualElement.parent) || {};\n        /**\n         * A list of animations that we'll build into as we iterate through the animation\n         * types. This will get executed at the end of the function.\n         */\n        const animations = [];\n        /**\n         * Keep track of which values have been removed. Then, as we hit lower priority\n         * animation types, we can check if they contain removed values and animate to that.\n         */\n        const removedKeys = new Set();\n        /**\n         * A dictionary of all encountered keys. This is an object to let us build into and\n         * copy it without iteration. Each time we hit an animation type we set its protected\n         * keys - the keys its not allowed to animate - to the latest version of this object.\n         */\n        let encounteredKeys = {};\n        /**\n         * If a variant has been removed at a given index, and this component is controlling\n         * variant animations, we want to ensure lower-priority variants are forced to animate.\n         */\n        let removedVariantIndex = Infinity;\n        /**\n         * Iterate through all animation types in reverse priority order. For each, we want to\n         * detect which values it's handling and whether or not they've changed (and therefore\n         * need to be animated). If any values have been removed, we want to detect those in\n         * lower priority props and flag for animation.\n         */\n        for (let i = 0; i < numAnimationTypes; i++) {\n            const type = reversePriorityOrder[i];\n            const typeState = state[type];\n            const prop = props[type] !== undefined\n                ? props[type]\n                : context[type];\n            const propIsVariant = isVariantLabel(prop);\n            /**\n             * If this type has *just* changed isActive status, set activeDelta\n             * to that status. Otherwise set to null.\n             */\n            const activeDelta = type === changedActiveType ? typeState.isActive : null;\n            if (activeDelta === false)\n                removedVariantIndex = i;\n            /**\n             * If this prop is an inherited variant, rather than been set directly on the\n             * component itself, we want to make sure we allow the parent to trigger animations.\n             *\n             * TODO: Can probably change this to a !isControllingVariants check\n             */\n            let isInherited = prop === context[type] &&\n                prop !== props[type] &&\n                propIsVariant;\n            /**\n             *\n             */\n            if (isInherited &&\n                isInitialRender &&\n                visualElement.manuallyAnimateOnMount) {\n                isInherited = false;\n            }\n            /**\n             * Set all encountered keys so far as the protected keys for this type. This will\n             * be any key that has been animated or otherwise handled by active, higher-priortiy types.\n             */\n            typeState.protectedKeys = { ...encounteredKeys };\n            // Check if we can skip analysing this prop early\n            if (\n            // If it isn't active and hasn't *just* been set as inactive\n            (!typeState.isActive && activeDelta === null) ||\n                // If we didn't and don't have any defined prop for this animation type\n                (!prop && !typeState.prevProp) ||\n                // Or if the prop doesn't define an animation\n                isAnimationControls(prop) ||\n                typeof prop === \"boolean\") {\n                continue;\n            }\n            /**\n             * As we go look through the values defined on this type, if we detect\n             * a changed value or a value that was removed in a higher priority, we set\n             * this to true and add this prop to the animation list.\n             */\n            const variantDidChange = checkVariantsDidChange(typeState.prevProp, prop);\n            let shouldAnimateType = variantDidChange ||\n                // If we're making this variant active, we want to always make it active\n                (type === changedActiveType &&\n                    typeState.isActive &&\n                    !isInherited &&\n                    propIsVariant) ||\n                // If we removed a higher-priority variant (i is in reverse order)\n                (i > removedVariantIndex && propIsVariant);\n            let handledRemovedValues = false;\n            /**\n             * As animations can be set as variant lists, variants or target objects, we\n             * coerce everything to an array if it isn't one already\n             */\n            const definitionList = Array.isArray(prop) ? prop : [prop];\n            /**\n             * Build an object of all the resolved values. We'll use this in the subsequent\n             * animateChanges calls to determine whether a value has changed.\n             */\n            let resolvedValues = definitionList.reduce(buildResolvedTypeValues(type), {});\n            if (activeDelta === false)\n                resolvedValues = {};\n            /**\n             * Now we need to loop through all the keys in the prev prop and this prop,\n             * and decide:\n             * 1. If the value has changed, and needs animating\n             * 2. If it has been removed, and needs adding to the removedKeys set\n             * 3. If it has been removed in a higher priority type and needs animating\n             * 4. If it hasn't been removed in a higher priority but hasn't changed, and\n             *    needs adding to the type's protectedKeys list.\n             */\n            const { prevResolvedValues = {} } = typeState;\n            const allKeys = {\n                ...prevResolvedValues,\n                ...resolvedValues,\n            };\n            const markToAnimate = (key) => {\n                shouldAnimateType = true;\n                if (removedKeys.has(key)) {\n                    handledRemovedValues = true;\n                    removedKeys.delete(key);\n                }\n                typeState.needsAnimating[key] = true;\n                const motionValue = visualElement.getValue(key);\n                if (motionValue)\n                    motionValue.liveStyle = false;\n            };\n            for (const key in allKeys) {\n                const next = resolvedValues[key];\n                const prev = prevResolvedValues[key];\n                // If we've already handled this we can just skip ahead\n                if (encounteredKeys.hasOwnProperty(key))\n                    continue;\n                /**\n                 * If the value has changed, we probably want to animate it.\n                 */\n                let valueHasChanged = false;\n                if (isKeyframesTarget(next) && isKeyframesTarget(prev)) {\n                    valueHasChanged = !shallowCompare(next, prev);\n                }\n                else {\n                    valueHasChanged = next !== prev;\n                }\n                if (valueHasChanged) {\n                    if (next !== undefined && next !== null) {\n                        // If next is defined and doesn't equal prev, it needs animating\n                        markToAnimate(key);\n                    }\n                    else {\n                        // If it's undefined, it's been removed.\n                        removedKeys.add(key);\n                    }\n                }\n                else if (next !== undefined && removedKeys.has(key)) {\n                    /**\n                     * If next hasn't changed and it isn't undefined, we want to check if it's\n                     * been removed by a higher priority\n                     */\n                    markToAnimate(key);\n                }\n                else {\n                    /**\n                     * If it hasn't changed, we add it to the list of protected values\n                     * to ensure it doesn't get animated.\n                     */\n                    typeState.protectedKeys[key] = true;\n                }\n            }\n            /**\n             * Update the typeState so next time animateChanges is called we can compare the\n             * latest prop and resolvedValues to these.\n             */\n            typeState.prevProp = prop;\n            typeState.prevResolvedValues = resolvedValues;\n            /**\n             *\n             */\n            if (typeState.isActive) {\n                encounteredKeys = { ...encounteredKeys, ...resolvedValues };\n            }\n            if (isInitialRender && visualElement.blockInitialAnimation) {\n                shouldAnimateType = false;\n            }\n            /**\n             * If this is an inherited prop we want to skip this animation\n             * unless the inherited variants haven't changed on this render.\n             */\n            const willAnimateViaParent = isInherited && variantDidChange;\n            const needsAnimating = !willAnimateViaParent || handledRemovedValues;\n            if (shouldAnimateType && needsAnimating) {\n                animations.push(...definitionList.map((animation) => ({\n                    animation: animation,\n                    options: { type },\n                })));\n            }\n        }\n        /**\n         * If there are some removed value that haven't been dealt with,\n         * we need to create a new animation that falls back either to the value\n         * defined in the style prop, or the last read value.\n         */\n        if (removedKeys.size) {\n            const fallbackAnimation = {};\n            /**\n             * If the initial prop contains a transition we can use that, otherwise\n             * allow the animation function to use the visual element's default.\n             */\n            if (typeof props.initial !== \"boolean\") {\n                const initialTransition = resolveVariant(visualElement, Array.isArray(props.initial)\n                    ? props.initial[0]\n                    : props.initial);\n                if (initialTransition && initialTransition.transition) {\n                    fallbackAnimation.transition = initialTransition.transition;\n                }\n            }\n            removedKeys.forEach((key) => {\n                const fallbackTarget = visualElement.getBaseTarget(key);\n                const motionValue = visualElement.getValue(key);\n                if (motionValue)\n                    motionValue.liveStyle = true;\n                // @ts-expect-error - @mattgperry to figure if we should do something here\n                fallbackAnimation[key] = fallbackTarget ?? null;\n            });\n            animations.push({ animation: fallbackAnimation });\n        }\n        let shouldAnimate = Boolean(animations.length);\n        if (isInitialRender &&\n            (props.initial === false || props.initial === props.animate) &&\n            !visualElement.manuallyAnimateOnMount) {\n            shouldAnimate = false;\n        }\n        isInitialRender = false;\n        return shouldAnimate ? animate(animations) : Promise.resolve();\n    }\n    /**\n     * Change whether a certain animation type is active.\n     */\n    function setActive(type, isActive) {\n        // If the active state hasn't changed, we can safely do nothing here\n        if (state[type].isActive === isActive)\n            return Promise.resolve();\n        // Propagate active change to children\n        visualElement.variantChildren?.forEach((child) => child.animationState?.setActive(type, isActive));\n        state[type].isActive = isActive;\n        const animations = animateChanges(type);\n        for (const key in state) {\n            state[key].protectedKeys = {};\n        }\n        return animations;\n    }\n    return {\n        animateChanges,\n        setActive,\n        setAnimateFunction,\n        getState: () => state,\n        reset: () => {\n            state = createState();\n            isInitialRender = true;\n        },\n    };\n}\nfunction checkVariantsDidChange(prev, next) {\n    if (typeof next === \"string\") {\n        return next !== prev;\n    }\n    else if (Array.isArray(next)) {\n        return !shallowCompare(next, prev);\n    }\n    return false;\n}\nfunction createTypeState(isActive = false) {\n    return {\n        isActive,\n        protectedKeys: {},\n        needsAnimating: {},\n        prevResolvedValues: {},\n    };\n}\nfunction createState() {\n    return {\n        animate: createTypeState(true),\n        whileInView: createTypeState(),\n        whileHover: createTypeState(),\n        whileTap: createTypeState(),\n        whileDrag: createTypeState(),\n        whileFocus: createTypeState(),\n        exit: createTypeState(),\n    };\n}\n\nexport { checkVariantsDidChange, createAnimationState };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\nimport { animateVariant } from './visual-element-variant.mjs';\n\nfunction animateVisualElement(visualElement, definition, options = {}) {\n    visualElement.notify(\"AnimationStart\", definition);\n    let animation;\n    if (Array.isArray(definition)) {\n        const animations = definition.map((variant) => animateVariant(visualElement, variant, options));\n        animation = Promise.all(animations);\n    }\n    else if (typeof definition === \"string\") {\n        animation = animateVariant(visualElement, definition, options);\n    }\n    else {\n        const resolvedDefinition = typeof definition === \"function\"\n            ? resolveVariant(visualElement, definition, options.custom)\n            : definition;\n        animation = Promise.all(animateTarget(visualElement, resolvedDefinition, options));\n    }\n    return animation.then(() => {\n        visualElement.notify(\"AnimationComplete\", definition);\n    });\n}\n\nexport { animateVisualElement };\n","class Feature {\n    constructor(node) {\n        this.isMounted = false;\n        this.node = node;\n    }\n    update() { }\n}\n\nexport { Feature };\n","import { Feature } from '../Feature.mjs';\n\nlet id = 0;\nclass ExitAnimationFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.id = id++;\n    }\n    update() {\n        if (!this.node.presenceContext)\n            return;\n        const { isPresent, onExitComplete } = this.node.presenceContext;\n        const { isPresent: prevIsPresent } = this.node.prevPresenceContext || {};\n        if (!this.node.animationState || isPresent === prevIsPresent) {\n            return;\n        }\n        const exitAnimation = this.node.animationState.setActive(\"exit\", !isPresent);\n        if (onExitComplete && !isPresent) {\n            exitAnimation.then(() => {\n                onExitComplete(this.id);\n            });\n        }\n    }\n    mount() {\n        const { register, onExitComplete } = this.node.presenceContext || {};\n        if (onExitComplete) {\n            onExitComplete(this.id);\n        }\n        if (register) {\n            this.unmount = register(this.id);\n        }\n    }\n    unmount() { }\n}\n\nexport { ExitAnimationFeature };\n","import { AnimationFeature } from './animation/index.mjs';\nimport { ExitAnimationFeature } from './animation/exit.mjs';\n\nconst animations = {\n    animation: {\n        Feature: AnimationFeature,\n    },\n    exit: {\n        Feature: ExitAnimationFeature,\n    },\n};\n\nexport { animations };\n","import { isAnimationControls } from '../../../animation/utils/is-animation-controls.mjs';\nimport { createAnimationState } from '../../../render/utils/animation-state.mjs';\nimport { Feature } from '../Feature.mjs';\n\nclass AnimationFeature extends Feature {\n    /**\n     * We dynamically generate the AnimationState manager as it contains a reference\n     * to the underlying animation library. We only want to load that if we load this,\n     * so people can optionally code split it out using the `m` component.\n     */\n    constructor(node) {\n        super(node);\n        node.animationState || (node.animationState = createAnimationState(node));\n    }\n    updateAnimationControlsSubscription() {\n        const { animate } = this.node.getProps();\n        if (isAnimationControls(animate)) {\n            this.unmountControls = animate.subscribe(this.node);\n        }\n    }\n    /**\n     * Subscribe any provided AnimationControls to the component's VisualElement\n     */\n    mount() {\n        this.updateAnimationControlsSubscription();\n    }\n    update() {\n        const { animate } = this.node.getProps();\n        const { animate: prevAnimate } = this.node.prevProps || {};\n        if (animate !== prevAnimate) {\n            this.updateAnimationControlsSubscription();\n        }\n    }\n    unmount() {\n        this.node.animationState.reset();\n        this.unmountControls?.();\n    }\n}\n\nexport { AnimationFeature };\n","const isDragging = {\n    x: false,\n    y: false,\n};\nfunction isDragActive() {\n    return isDragging.x || isDragging.y;\n}\n\nexport { isDragActive, isDragging };\n","function addDomEvent(target, eventName, handler, options = { passive: true }) {\n    target.addEventListener(eventName, handler, options);\n    return () => target.removeEventListener(eventName, handler);\n}\n\nexport { addDomEvent };\n","const isPrimaryPointer = (event) => {\n    if (event.pointerType === \"mouse\") {\n        return typeof event.button !== \"number\" || event.button <= 0;\n    }\n    else {\n        /**\n         * isPrimary is true for all mice buttons, whereas every touch point\n         * is regarded as its own input. So subsequent concurrent touch points\n         * will be false.\n         *\n         * Specifically match against false here as incomplete versions of\n         * PointerEvents in very old browser might have it set as undefined.\n         */\n        return event.isPrimary !== false;\n    }\n};\n\nexport { isPrimaryPointer };\n","import { isPrimaryPointer } from 'motion-dom';\n\nfunction extractEventInfo(event) {\n    return {\n        point: {\n            x: event.pageX,\n            y: event.pageY,\n        },\n    };\n}\nconst addPointerInfo = (handler) => {\n    return (event) => isPrimaryPointer(event) && handler(event, extractEventInfo(event));\n};\n\nexport { addPointerInfo, extractEventInfo };\n","import { addDomEvent } from './add-dom-event.mjs';\nimport { addPointerInfo } from './event-info.mjs';\n\nfunction addPointerEvent(target, eventName, handler, options) {\n    return addDomEvent(target, eventName, addPointerInfo(handler), options);\n}\n\nexport { addPointerEvent };\n","import { mixNumber } from 'motion-dom';\n\nconst SCALE_PRECISION = 0.0001;\nconst SCALE_MIN = 1 - SCALE_PRECISION;\nconst SCALE_MAX = 1 + SCALE_PRECISION;\nconst TRANSLATE_PRECISION = 0.01;\nconst TRANSLATE_MIN = 0 - TRANSLATE_PRECISION;\nconst TRANSLATE_MAX = 0 + TRANSLATE_PRECISION;\nfunction calcLength(axis) {\n    return axis.max - axis.min;\n}\nfunction isNear(value, target, maxDistance) {\n    return Math.abs(value - target) <= maxDistance;\n}\nfunction calcAxisDelta(delta, source, target, origin = 0.5) {\n    delta.origin = origin;\n    delta.originPoint = mixNumber(source.min, source.max, delta.origin);\n    delta.scale = calcLength(target) / calcLength(source);\n    delta.translate =\n        mixNumber(target.min, target.max, delta.origin) - delta.originPoint;\n    if ((delta.scale >= SCALE_MIN && delta.scale <= SCALE_MAX) ||\n        isNaN(delta.scale)) {\n        delta.scale = 1.0;\n    }\n    if ((delta.translate >= TRANSLATE_MIN &&\n        delta.translate <= TRANSLATE_MAX) ||\n        isNaN(delta.translate)) {\n        delta.translate = 0.0;\n    }\n}\nfunction calcBoxDelta(delta, source, target, origin) {\n    calcAxisDelta(delta.x, source.x, target.x, origin ? origin.originX : undefined);\n    calcAxisDelta(delta.y, source.y, target.y, origin ? origin.originY : undefined);\n}\nfunction calcRelativeAxis(target, relative, parent) {\n    target.min = parent.min + relative.min;\n    target.max = target.min + calcLength(relative);\n}\nfunction calcRelativeBox(target, relative, parent) {\n    calcRelativeAxis(target.x, relative.x, parent.x);\n    calcRelativeAxis(target.y, relative.y, parent.y);\n}\nfunction calcRelativeAxisPosition(target, layout, parent) {\n    target.min = layout.min - parent.min;\n    target.max = target.min + calcLength(layout);\n}\nfunction calcRelativePosition(target, layout, parent) {\n    calcRelativeAxisPosition(target.x, layout.x, parent.x);\n    calcRelativeAxisPosition(target.y, layout.y, parent.y);\n}\n\nexport { calcAxisDelta, calcBoxDelta, calcLength, calcRelativeAxis, calcRelativeAxisPosition, calcRelativeBox, calcRelativePosition, isNear };\n","function eachAxis(callback) {\n    return [callback(\"x\"), callback(\"y\")];\n}\n\nexport { eachAxis };\n","// Fixes https://github.com/motiondivision/motion/issues/2270\nconst getContextWindow = ({ current }) => {\n    return current ? current.ownerDocument.defaultView : null;\n};\n\nexport { getContextWindow };\n","function isRefObject(ref) {\n    return (ref &&\n        typeof ref === \"object\" &&\n        Object.prototype.hasOwnProperty.call(ref, \"current\"));\n}\n\nexport { isRefObject };\n","const distance = (a, b) => Math.abs(a - b);\nfunction distance2D(a, b) {\n    // Multi-dimensional\n    const xDelta = distance(a.x, b.x);\n    const yDelta = distance(a.y, b.y);\n    return Math.sqrt(xDelta ** 2 + yDelta ** 2);\n}\n\nexport { distance, distance2D };\n","import { frame, isPrimaryPointer, cancelFrame, frameData } from 'motion-dom';\nimport { pipe, secondsToMilliseconds, millisecondsToSeconds } from 'motion-utils';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { distance2D } from '../../utils/distance.mjs';\n\n/**\n * @internal\n */\nclass PanSession {\n    constructor(event, handlers, { transformPagePoint, contextWindow, dragSnapToOrigin = false, } = {}) {\n        /**\n         * @internal\n         */\n        this.startEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEventInfo = null;\n        /**\n         * @internal\n         */\n        this.handlers = {};\n        /**\n         * @internal\n         */\n        this.contextWindow = window;\n        this.updatePoint = () => {\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const info = getPanInfo(this.lastMoveEventInfo, this.history);\n            const isPanStarted = this.startEvent !== null;\n            // Only start panning if the offset is larger than 3 pixels. If we make it\n            // any larger than this we'll want to reset the pointer history\n            // on the first update to avoid visual snapping to the cursoe.\n            const isDistancePastThreshold = distance2D(info.offset, { x: 0, y: 0 }) >= 3;\n            if (!isPanStarted && !isDistancePastThreshold)\n                return;\n            const { point } = info;\n            const { timestamp } = frameData;\n            this.history.push({ ...point, timestamp });\n            const { onStart, onMove } = this.handlers;\n            if (!isPanStarted) {\n                onStart && onStart(this.lastMoveEvent, info);\n                this.startEvent = this.lastMoveEvent;\n            }\n            onMove && onMove(this.lastMoveEvent, info);\n        };\n        this.handlePointerMove = (event, info) => {\n            this.lastMoveEvent = event;\n            this.lastMoveEventInfo = transformPoint(info, this.transformPagePoint);\n            // Throttle mouse move event to once per frame\n            frame.update(this.updatePoint, true);\n        };\n        this.handlePointerUp = (event, info) => {\n            this.end();\n            const { onEnd, onSessionEnd, resumeAnimation } = this.handlers;\n            if (this.dragSnapToOrigin)\n                resumeAnimation && resumeAnimation();\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const panInfo = getPanInfo(event.type === \"pointercancel\"\n                ? this.lastMoveEventInfo\n                : transformPoint(info, this.transformPagePoint), this.history);\n            if (this.startEvent && onEnd) {\n                onEnd(event, panInfo);\n            }\n            onSessionEnd && onSessionEnd(event, panInfo);\n        };\n        // If we have more than one touch, don't start detecting this gesture\n        if (!isPrimaryPointer(event))\n            return;\n        this.dragSnapToOrigin = dragSnapToOrigin;\n        this.handlers = handlers;\n        this.transformPagePoint = transformPagePoint;\n        this.contextWindow = contextWindow || window;\n        const info = extractEventInfo(event);\n        const initialInfo = transformPoint(info, this.transformPagePoint);\n        const { point } = initialInfo;\n        const { timestamp } = frameData;\n        this.history = [{ ...point, timestamp }];\n        const { onSessionStart } = handlers;\n        onSessionStart &&\n            onSessionStart(event, getPanInfo(initialInfo, this.history));\n        this.removeListeners = pipe(addPointerEvent(this.contextWindow, \"pointermove\", this.handlePointerMove), addPointerEvent(this.contextWindow, \"pointerup\", this.handlePointerUp), addPointerEvent(this.contextWindow, \"pointercancel\", this.handlePointerUp));\n    }\n    updateHandlers(handlers) {\n        this.handlers = handlers;\n    }\n    end() {\n        this.removeListeners && this.removeListeners();\n        cancelFrame(this.updatePoint);\n    }\n}\nfunction transformPoint(info, transformPagePoint) {\n    return transformPagePoint ? { point: transformPagePoint(info.point) } : info;\n}\nfunction subtractPoint(a, b) {\n    return { x: a.x - b.x, y: a.y - b.y };\n}\nfunction getPanInfo({ point }, history) {\n    return {\n        point,\n        delta: subtractPoint(point, lastDevicePoint(history)),\n        offset: subtractPoint(point, startDevicePoint(history)),\n        velocity: getVelocity(history, 0.1),\n    };\n}\nfunction startDevicePoint(history) {\n    return history[0];\n}\nfunction lastDevicePoint(history) {\n    return history[history.length - 1];\n}\nfunction getVelocity(history, timeDelta) {\n    if (history.length < 2) {\n        return { x: 0, y: 0 };\n    }\n    let i = history.length - 1;\n    let timestampedPoint = null;\n    const lastPoint = lastDevicePoint(history);\n    while (i >= 0) {\n        timestampedPoint = history[i];\n        if (lastPoint.timestamp - timestampedPoint.timestamp >\n            secondsToMilliseconds(timeDelta)) {\n            break;\n        }\n        i--;\n    }\n    if (!timestampedPoint) {\n        return { x: 0, y: 0 };\n    }\n    const time = millisecondsToSeconds(lastPoint.timestamp - timestampedPoint.timestamp);\n    if (time === 0) {\n        return { x: 0, y: 0 };\n    }\n    const currentVelocity = {\n        x: (lastPoint.x - timestampedPoint.x) / time,\n        y: (lastPoint.y - timestampedPoint.y) / time,\n    };\n    if (currentVelocity.x === Infinity) {\n        currentVelocity.x = 0;\n    }\n    if (currentVelocity.y === Infinity) {\n        currentVelocity.y = 0;\n    }\n    return currentVelocity;\n}\n\nexport { PanSession };\n","import { mixNumber } from 'motion-dom';\nimport { progress, clamp } from 'motion-utils';\nimport { calcLength } from '../../../projection/geometry/delta-calc.mjs';\n\n/**\n * Apply constraints to a point. These constraints are both physical along an\n * axis, and an elastic factor that determines how much to constrain the point\n * by if it does lie outside the defined parameters.\n */\nfunction applyConstraints(point, { min, max }, elastic) {\n    if (min !== undefined && point < min) {\n        // If we have a min point defined, and this is outside of that, constrain\n        point = elastic\n            ? mixNumber(min, point, elastic.min)\n            : Math.max(point, min);\n    }\n    else if (max !== undefined && point > max) {\n        // If we have a max point defined, and this is outside of that, constrain\n        point = elastic\n            ? mixNumber(max, point, elastic.max)\n            : Math.min(point, max);\n    }\n    return point;\n}\n/**\n * Calculate constraints in terms of the viewport when defined relatively to the\n * measured axis. This is measured from the nearest edge, so a max constraint of 200\n * on an axis with a max value of 300 would return a constraint of 500 - axis length\n */\nfunction calcRelativeAxisConstraints(axis, min, max) {\n    return {\n        min: min !== undefined ? axis.min + min : undefined,\n        max: max !== undefined\n            ? axis.max + max - (axis.max - axis.min)\n            : undefined,\n    };\n}\n/**\n * Calculate constraints in terms of the viewport when\n * defined relatively to the measured bounding box.\n */\nfunction calcRelativeConstraints(layoutBox, { top, left, bottom, right }) {\n    return {\n        x: calcRelativeAxisConstraints(layoutBox.x, left, right),\n        y: calcRelativeAxisConstraints(layoutBox.y, top, bottom),\n    };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative axis\n */\nfunction calcViewportAxisConstraints(layoutAxis, constraintsAxis) {\n    let min = constraintsAxis.min - layoutAxis.min;\n    let max = constraintsAxis.max - layoutAxis.max;\n    // If the constraints axis is actually smaller than the layout axis then we can\n    // flip the constraints\n    if (constraintsAxis.max - constraintsAxis.min <\n        layoutAxis.max - layoutAxis.min) {\n        [min, max] = [max, min];\n    }\n    return { min, max };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative box\n */\nfunction calcViewportConstraints(layoutBox, constraintsBox) {\n    return {\n        x: calcViewportAxisConstraints(layoutBox.x, constraintsBox.x),\n        y: calcViewportAxisConstraints(layoutBox.y, constraintsBox.y),\n    };\n}\n/**\n * Calculate a transform origin relative to the source axis, between 0-1, that results\n * in an asthetically pleasing scale/transform needed to project from source to target.\n */\nfunction calcOrigin(source, target) {\n    let origin = 0.5;\n    const sourceLength = calcLength(source);\n    const targetLength = calcLength(target);\n    if (targetLength > sourceLength) {\n        origin = progress(target.min, target.max - sourceLength, source.min);\n    }\n    else if (sourceLength > targetLength) {\n        origin = progress(source.min, source.max - targetLength, target.min);\n    }\n    return clamp(0, 1, origin);\n}\n/**\n * Rebase the calculated viewport constraints relative to the layout.min point.\n */\nfunction rebaseAxisConstraints(layout, constraints) {\n    const relativeConstraints = {};\n    if (constraints.min !== undefined) {\n        relativeConstraints.min = constraints.min - layout.min;\n    }\n    if (constraints.max !== undefined) {\n        relativeConstraints.max = constraints.max - layout.min;\n    }\n    return relativeConstraints;\n}\nconst defaultElastic = 0.35;\n/**\n * Accepts a dragElastic prop and returns resolved elastic values for each axis.\n */\nfunction resolveDragElastic(dragElastic = defaultElastic) {\n    if (dragElastic === false) {\n        dragElastic = 0;\n    }\n    else if (dragElastic === true) {\n        dragElastic = defaultElastic;\n    }\n    return {\n        x: resolveAxisElastic(dragElastic, \"left\", \"right\"),\n        y: resolveAxisElastic(dragElastic, \"top\", \"bottom\"),\n    };\n}\nfunction resolveAxisElastic(dragElastic, minLabel, maxLabel) {\n    return {\n        min: resolvePointElastic(dragElastic, minLabel),\n        max: resolvePointElastic(dragElastic, maxLabel),\n    };\n}\nfunction resolvePointElastic(dragElastic, label) {\n    return typeof dragElastic === \"number\"\n        ? dragElastic\n        : dragElastic[label] || 0;\n}\n\nexport { applyConstraints, calcOrigin, calcRelativeAxisConstraints, calcRelativeConstraints, calcViewportAxisConstraints, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, resolveAxisElastic, resolveDragElastic, resolvePointElastic };\n","import { frame, mixNumber, setDragLock, percent } from 'motion-dom';\nimport { invariant } from 'motion-utils';\nimport { animateMotionValue } from '../../animation/interfaces/motion-value.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { convertBoxToBoundingBox, convertBoundingBoxToBox } from '../../projection/geometry/conversion.mjs';\nimport { calcLength } from '../../projection/geometry/delta-calc.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { eachAxis } from '../../projection/utils/each-axis.mjs';\nimport { measurePageBox } from '../../projection/utils/measure.mjs';\nimport { getContextWindow } from '../../utils/get-context-window.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { addValueToWillChange } from '../../value/use-will-change/add-will-change.mjs';\nimport { PanSession } from '../pan/PanSession.mjs';\nimport { applyConstraints, calcRelativeConstraints, resolveDragElastic, rebaseAxisConstraints, calcViewportConstraints, calcOrigin, defaultElastic } from './utils/constraints.mjs';\n\nconst elementDragControls = new WeakMap();\n/**\n *\n */\n// let latestPointerEvent: PointerEvent\nclass VisualElementDragControls {\n    constructor(visualElement) {\n        this.openDragLock = null;\n        this.isDragging = false;\n        this.currentDirection = null;\n        this.originPoint = { x: 0, y: 0 };\n        /**\n         * The permitted boundaries of travel, in pixels.\n         */\n        this.constraints = false;\n        this.hasMutatedConstraints = false;\n        /**\n         * The per-axis resolved elastic values.\n         */\n        this.elastic = createBox();\n        this.visualElement = visualElement;\n    }\n    start(originEvent, { snapToCursor = false } = {}) {\n        /**\n         * Don't start dragging if this component is exiting\n         */\n        const { presenceContext } = this.visualElement;\n        if (presenceContext && presenceContext.isPresent === false)\n            return;\n        const onSessionStart = (event) => {\n            const { dragSnapToOrigin } = this.getProps();\n            // Stop or pause any animations on both axis values immediately. This allows the user to throw and catch\n            // the component.\n            dragSnapToOrigin ? this.pauseAnimation() : this.stopAnimation();\n            if (snapToCursor) {\n                this.snapToCursor(extractEventInfo(event).point);\n            }\n        };\n        const onStart = (event, info) => {\n            // Attempt to grab the global drag gesture lock - maybe make this part of PanSession\n            const { drag, dragPropagation, onDragStart } = this.getProps();\n            if (drag && !dragPropagation) {\n                if (this.openDragLock)\n                    this.openDragLock();\n                this.openDragLock = setDragLock(drag);\n                // If we don 't have the lock, don't start dragging\n                if (!this.openDragLock)\n                    return;\n            }\n            this.isDragging = true;\n            this.currentDirection = null;\n            this.resolveConstraints();\n            if (this.visualElement.projection) {\n                this.visualElement.projection.isAnimationBlocked = true;\n                this.visualElement.projection.target = undefined;\n            }\n            /**\n             * Record gesture origin\n             */\n            eachAxis((axis) => {\n                let current = this.getAxisMotionValue(axis).get() || 0;\n                /**\n                 * If the MotionValue is a percentage value convert to px\n                 */\n                if (percent.test(current)) {\n                    const { projection } = this.visualElement;\n                    if (projection && projection.layout) {\n                        const measuredAxis = projection.layout.layoutBox[axis];\n                        if (measuredAxis) {\n                            const length = calcLength(measuredAxis);\n                            current = length * (parseFloat(current) / 100);\n                        }\n                    }\n                }\n                this.originPoint[axis] = current;\n            });\n            // Fire onDragStart event\n            if (onDragStart) {\n                frame.postRender(() => onDragStart(event, info));\n            }\n            addValueToWillChange(this.visualElement, \"transform\");\n            const { animationState } = this.visualElement;\n            animationState && animationState.setActive(\"whileDrag\", true);\n        };\n        const onMove = (event, info) => {\n            // latestPointerEvent = event\n            const { dragPropagation, dragDirectionLock, onDirectionLock, onDrag, } = this.getProps();\n            // If we didn't successfully receive the gesture lock, early return.\n            if (!dragPropagation && !this.openDragLock)\n                return;\n            const { offset } = info;\n            // Attempt to detect drag direction if directionLock is true\n            if (dragDirectionLock && this.currentDirection === null) {\n                this.currentDirection = getCurrentDirection(offset);\n                // If we've successfully set a direction, notify listener\n                if (this.currentDirection !== null) {\n                    onDirectionLock && onDirectionLock(this.currentDirection);\n                }\n                return;\n            }\n            // Update each point with the latest position\n            this.updateAxis(\"x\", info.point, offset);\n            this.updateAxis(\"y\", info.point, offset);\n            /**\n             * Ideally we would leave the renderer to fire naturally at the end of\n             * this frame but if the element is about to change layout as the result\n             * of a re-render we want to ensure the browser can read the latest\n             * bounding box to ensure the pointer and element don't fall out of sync.\n             */\n            this.visualElement.render();\n            /**\n             * This must fire after the render call as it might trigger a state\n             * change which itself might trigger a layout update.\n             */\n            onDrag && onDrag(event, info);\n        };\n        const onSessionEnd = (event, info) => this.stop(event, info);\n        const resumeAnimation = () => eachAxis((axis) => this.getAnimationState(axis) === \"paused\" &&\n            this.getAxisMotionValue(axis).animation?.play());\n        const { dragSnapToOrigin } = this.getProps();\n        this.panSession = new PanSession(originEvent, {\n            onSessionStart,\n            onStart,\n            onMove,\n            onSessionEnd,\n            resumeAnimation,\n        }, {\n            transformPagePoint: this.visualElement.getTransformPagePoint(),\n            dragSnapToOrigin,\n            contextWindow: getContextWindow(this.visualElement),\n        });\n    }\n    stop(event, info) {\n        const isDragging = this.isDragging;\n        this.cancel();\n        if (!isDragging)\n            return;\n        const { velocity } = info;\n        this.startAnimation(velocity);\n        const { onDragEnd } = this.getProps();\n        if (onDragEnd) {\n            frame.postRender(() => onDragEnd(event, info));\n        }\n    }\n    cancel() {\n        this.isDragging = false;\n        const { projection, animationState } = this.visualElement;\n        if (projection) {\n            projection.isAnimationBlocked = false;\n        }\n        this.panSession && this.panSession.end();\n        this.panSession = undefined;\n        const { dragPropagation } = this.getProps();\n        if (!dragPropagation && this.openDragLock) {\n            this.openDragLock();\n            this.openDragLock = null;\n        }\n        animationState && animationState.setActive(\"whileDrag\", false);\n    }\n    updateAxis(axis, _point, offset) {\n        const { drag } = this.getProps();\n        // If we're not dragging this axis, do an early return.\n        if (!offset || !shouldDrag(axis, drag, this.currentDirection))\n            return;\n        const axisValue = this.getAxisMotionValue(axis);\n        let next = this.originPoint[axis] + offset[axis];\n        // Apply constraints\n        if (this.constraints && this.constraints[axis]) {\n            next = applyConstraints(next, this.constraints[axis], this.elastic[axis]);\n        }\n        axisValue.set(next);\n    }\n    resolveConstraints() {\n        const { dragConstraints, dragElastic } = this.getProps();\n        const layout = this.visualElement.projection &&\n            !this.visualElement.projection.layout\n            ? this.visualElement.projection.measure(false)\n            : this.visualElement.projection?.layout;\n        const prevConstraints = this.constraints;\n        if (dragConstraints && isRefObject(dragConstraints)) {\n            if (!this.constraints) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        }\n        else {\n            if (dragConstraints && layout) {\n                this.constraints = calcRelativeConstraints(layout.layoutBox, dragConstraints);\n            }\n            else {\n                this.constraints = false;\n            }\n        }\n        this.elastic = resolveDragElastic(dragElastic);\n        /**\n         * If we're outputting to external MotionValues, we want to rebase the measured constraints\n         * from viewport-relative to component-relative.\n         */\n        if (prevConstraints !== this.constraints &&\n            layout &&\n            this.constraints &&\n            !this.hasMutatedConstraints) {\n            eachAxis((axis) => {\n                if (this.constraints !== false &&\n                    this.getAxisMotionValue(axis)) {\n                    this.constraints[axis] = rebaseAxisConstraints(layout.layoutBox[axis], this.constraints[axis]);\n                }\n            });\n        }\n    }\n    resolveRefConstraints() {\n        const { dragConstraints: constraints, onMeasureDragConstraints } = this.getProps();\n        if (!constraints || !isRefObject(constraints))\n            return false;\n        const constraintsElement = constraints.current;\n        invariant(constraintsElement !== null, \"If `dragConstraints` is set as a React ref, that ref must be passed to another component's `ref` prop.\");\n        const { projection } = this.visualElement;\n        // TODO\n        if (!projection || !projection.layout)\n            return false;\n        const constraintsBox = measurePageBox(constraintsElement, projection.root, this.visualElement.getTransformPagePoint());\n        let measuredConstraints = calcViewportConstraints(projection.layout.layoutBox, constraintsBox);\n        /**\n         * If there's an onMeasureDragConstraints listener we call it and\n         * if different constraints are returned, set constraints to that\n         */\n        if (onMeasureDragConstraints) {\n            const userConstraints = onMeasureDragConstraints(convertBoxToBoundingBox(measuredConstraints));\n            this.hasMutatedConstraints = !!userConstraints;\n            if (userConstraints) {\n                measuredConstraints = convertBoundingBoxToBox(userConstraints);\n            }\n        }\n        return measuredConstraints;\n    }\n    startAnimation(velocity) {\n        const { drag, dragMomentum, dragElastic, dragTransition, dragSnapToOrigin, onDragTransitionEnd, } = this.getProps();\n        const constraints = this.constraints || {};\n        const momentumAnimations = eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, this.currentDirection)) {\n                return;\n            }\n            let transition = (constraints && constraints[axis]) || {};\n            if (dragSnapToOrigin)\n                transition = { min: 0, max: 0 };\n            /**\n             * Overdamp the boundary spring if `dragElastic` is disabled. There's still a frame\n             * of spring animations so we should look into adding a disable spring option to `inertia`.\n             * We could do something here where we affect the `bounceStiffness` and `bounceDamping`\n             * using the value of `dragElastic`.\n             */\n            const bounceStiffness = dragElastic ? 200 : 1000000;\n            const bounceDamping = dragElastic ? 40 : 10000000;\n            const inertia = {\n                type: \"inertia\",\n                velocity: dragMomentum ? velocity[axis] : 0,\n                bounceStiffness,\n                bounceDamping,\n                timeConstant: 750,\n                restDelta: 1,\n                restSpeed: 10,\n                ...dragTransition,\n                ...transition,\n            };\n            // If we're not animating on an externally-provided `MotionValue` we can use the\n            // component's animation controls which will handle interactions with whileHover (etc),\n            // otherwise we just have to animate the `MotionValue` itself.\n            return this.startAxisValueAnimation(axis, inertia);\n        });\n        // Run all animations and then resolve the new drag constraints.\n        return Promise.all(momentumAnimations).then(onDragTransitionEnd);\n    }\n    startAxisValueAnimation(axis, transition) {\n        const axisValue = this.getAxisMotionValue(axis);\n        addValueToWillChange(this.visualElement, axis);\n        return axisValue.start(animateMotionValue(axis, axisValue, 0, transition, this.visualElement, false));\n    }\n    stopAnimation() {\n        eachAxis((axis) => this.getAxisMotionValue(axis).stop());\n    }\n    pauseAnimation() {\n        eachAxis((axis) => this.getAxisMotionValue(axis).animation?.pause());\n    }\n    getAnimationState(axis) {\n        return this.getAxisMotionValue(axis).animation?.state;\n    }\n    /**\n     * Drag works differently depending on which props are provided.\n     *\n     * - If _dragX and _dragY are provided, we output the gesture delta directly to those motion values.\n     * - Otherwise, we apply the delta to the x/y motion values.\n     */\n    getAxisMotionValue(axis) {\n        const dragKey = `_drag${axis.toUpperCase()}`;\n        const props = this.visualElement.getProps();\n        const externalMotionValue = props[dragKey];\n        return externalMotionValue\n            ? externalMotionValue\n            : this.visualElement.getValue(axis, (props.initial\n                ? props.initial[axis]\n                : undefined) || 0);\n    }\n    snapToCursor(point) {\n        eachAxis((axis) => {\n            const { drag } = this.getProps();\n            // If we're not dragging this axis, do an early return.\n            if (!shouldDrag(axis, drag, this.currentDirection))\n                return;\n            const { projection } = this.visualElement;\n            const axisValue = this.getAxisMotionValue(axis);\n            if (projection && projection.layout) {\n                const { min, max } = projection.layout.layoutBox[axis];\n                axisValue.set(point[axis] - mixNumber(min, max, 0.5));\n            }\n        });\n    }\n    /**\n     * When the viewport resizes we want to check if the measured constraints\n     * have changed and, if so, reposition the element within those new constraints\n     * relative to where it was before the resize.\n     */\n    scalePositionWithinConstraints() {\n        if (!this.visualElement.current)\n            return;\n        const { drag, dragConstraints } = this.getProps();\n        const { projection } = this.visualElement;\n        if (!isRefObject(dragConstraints) || !projection || !this.constraints)\n            return;\n        /**\n         * Stop current animations as there can be visual glitching if we try to do\n         * this mid-animation\n         */\n        this.stopAnimation();\n        /**\n         * Record the relative position of the dragged element relative to the\n         * constraints box and save as a progress value.\n         */\n        const boxProgress = { x: 0, y: 0 };\n        eachAxis((axis) => {\n            const axisValue = this.getAxisMotionValue(axis);\n            if (axisValue && this.constraints !== false) {\n                const latest = axisValue.get();\n                boxProgress[axis] = calcOrigin({ min: latest, max: latest }, this.constraints[axis]);\n            }\n        });\n        /**\n         * Update the layout of this element and resolve the latest drag constraints\n         */\n        const { transformTemplate } = this.visualElement.getProps();\n        this.visualElement.current.style.transform = transformTemplate\n            ? transformTemplate({}, \"\")\n            : \"none\";\n        projection.root && projection.root.updateScroll();\n        projection.updateLayout();\n        this.resolveConstraints();\n        /**\n         * For each axis, calculate the current progress of the layout axis\n         * within the new constraints.\n         */\n        eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, null))\n                return;\n            /**\n             * Calculate a new transform based on the previous box progress\n             */\n            const axisValue = this.getAxisMotionValue(axis);\n            const { min, max } = this.constraints[axis];\n            axisValue.set(mixNumber(min, max, boxProgress[axis]));\n        });\n    }\n    addListeners() {\n        if (!this.visualElement.current)\n            return;\n        elementDragControls.set(this.visualElement, this);\n        const element = this.visualElement.current;\n        /**\n         * Attach a pointerdown event listener on this DOM element to initiate drag tracking.\n         */\n        const stopPointerListener = addPointerEvent(element, \"pointerdown\", (event) => {\n            const { drag, dragListener = true } = this.getProps();\n            drag && dragListener && this.start(event);\n        });\n        const measureDragConstraints = () => {\n            const { dragConstraints } = this.getProps();\n            if (isRefObject(dragConstraints) && dragConstraints.current) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        };\n        const { projection } = this.visualElement;\n        const stopMeasureLayoutListener = projection.addEventListener(\"measure\", measureDragConstraints);\n        if (projection && !projection.layout) {\n            projection.root && projection.root.updateScroll();\n            projection.updateLayout();\n        }\n        frame.read(measureDragConstraints);\n        /**\n         * Attach a window resize listener to scale the draggable target within its defined\n         * constraints as the window resizes.\n         */\n        const stopResizeListener = addDomEvent(window, \"resize\", () => this.scalePositionWithinConstraints());\n        /**\n         * If the element's layout changes, calculate the delta and apply that to\n         * the drag gesture's origin point.\n         */\n        const stopLayoutUpdateListener = projection.addEventListener(\"didUpdate\", (({ delta, hasLayoutChanged }) => {\n            if (this.isDragging && hasLayoutChanged) {\n                eachAxis((axis) => {\n                    const motionValue = this.getAxisMotionValue(axis);\n                    if (!motionValue)\n                        return;\n                    this.originPoint[axis] += delta[axis].translate;\n                    motionValue.set(motionValue.get() + delta[axis].translate);\n                });\n                this.visualElement.render();\n            }\n        }));\n        return () => {\n            stopResizeListener();\n            stopPointerListener();\n            stopMeasureLayoutListener();\n            stopLayoutUpdateListener && stopLayoutUpdateListener();\n        };\n    }\n    getProps() {\n        const props = this.visualElement.getProps();\n        const { drag = false, dragDirectionLock = false, dragPropagation = false, dragConstraints = false, dragElastic = defaultElastic, dragMomentum = true, } = props;\n        return {\n            ...props,\n            drag,\n            dragDirectionLock,\n            dragPropagation,\n            dragConstraints,\n            dragElastic,\n            dragMomentum,\n        };\n    }\n}\nfunction shouldDrag(direction, drag, currentDirection) {\n    return ((drag === true || drag === direction) &&\n        (currentDirection === null || currentDirection === direction));\n}\n/**\n * Based on an x/y offset determine the current drag direction. If both axis' offsets are lower\n * than the provided threshold, return `null`.\n *\n * @param offset - The x/y offset from origin.\n * @param lockThreshold - (Optional) - the minimum absolute offset before we can determine a drag direction.\n */\nfunction getCurrentDirection(offset, lockThreshold = 10) {\n    let direction = null;\n    if (Math.abs(offset.y) > lockThreshold) {\n        direction = \"y\";\n    }\n    else if (Math.abs(offset.x) > lockThreshold) {\n        direction = \"x\";\n    }\n    return direction;\n}\n\nexport { VisualElementDragControls, elementDragControls };\n","import { isDragging } from './is-active.mjs';\n\nfunction setDragLock(axis) {\n    if (axis === \"x\" || axis === \"y\") {\n        if (isDragging[axis]) {\n            return null;\n        }\n        else {\n            isDragging[axis] = true;\n            return () => {\n                isDragging[axis] = false;\n            };\n        }\n    }\n    else {\n        if (isDragging.x || isDragging.y) {\n            return null;\n        }\n        else {\n            isDragging.x = isDragging.y = true;\n            return () => {\n                isDragging.x = isDragging.y = false;\n            };\n        }\n    }\n}\n\nexport { setDragLock };\n","import { frame } from 'motion-dom';\nimport { noop } from 'motion-utils';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { Feature } from '../../motion/features/Feature.mjs';\nimport { getContextWindow } from '../../utils/get-context-window.mjs';\nimport { PanSession } from './PanSession.mjs';\n\nconst asyncHandler = (handler) => (event, info) => {\n    if (handler) {\n        frame.postRender(() => handler(event, info));\n    }\n};\nclass PanGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removePointerDownListener = noop;\n    }\n    onPointerDown(pointerDownEvent) {\n        this.session = new PanSession(pointerDownEvent, this.createPanHandlers(), {\n            transformPagePoint: this.node.getTransformPagePoint(),\n            contextWindow: getContextWindow(this.node),\n        });\n    }\n    createPanHandlers() {\n        const { onPanSessionStart, onPanStart, onPan, onPanEnd } = this.node.getProps();\n        return {\n            onSessionStart: asyncHandler(onPanSessionStart),\n            onStart: asyncHandler(onPanStart),\n            onMove: onPan,\n            onEnd: (event, info) => {\n                delete this.session;\n                if (onPanEnd) {\n                    frame.postRender(() => onPanEnd(event, info));\n                }\n            },\n        };\n    }\n    mount() {\n        this.removePointerDownListener = addPointerEvent(this.node.current, \"pointerdown\", (event) => this.onPointerDown(event));\n    }\n    update() {\n        this.session && this.session.updateHandlers(this.createPanHandlers());\n    }\n    unmount() {\n        this.removePointerDownListener();\n        this.session && this.session.end();\n    }\n}\n\nexport { PanGesture };\n","import { createRenderBatcher } from './batcher.mjs';\n\nconst { schedule: microtask, cancel: cancelMicrotask } = \n/* @__PURE__ */ createRenderBatcher(queueMicrotask, false);\n\nexport { cancelMicrotask, microtask };\n","\"use client\";\nimport { createContext } from 'react';\n\n/**\n * Internal, exported only for usage in Framer\n */\nconst SwitchLayoutGroupContext = createContext({});\n\nexport { SwitchLayoutGroupContext };\n","/**\n * This should only ever be modified on the client otherwise it'll\n * persist through server requests. If we need instanced states we\n * could lazy-init via root.\n */\nconst globalProjectionState = {\n    /**\n     * Global flag as to whether the tree has animated since the last time\n     * we resized the window\n     */\n    hasAnimatedSinceResize: true,\n    /**\n     * We set this to true once, on the first update. Any nodes added to the tree beyond that\n     * update will be given a `data-projection-id` attribute.\n     */\n    hasEverUpdated: false,\n};\n\nexport { globalProjectionState };\n","import { px } from 'motion-dom';\n\nfunction pixelsToPercent(pixels, axis) {\n    if (axis.max === axis.min)\n        return 0;\n    return (pixels / (axis.max - axis.min)) * 100;\n}\n/**\n * We always correct borderRadius as a percentage rather than pixels to reduce paints.\n * For example, if you are projecting a box that is 100px wide with a 10px borderRadius\n * into a box that is 200px wide with a 20px borderRadius, that is actually a 10%\n * borderRadius in both states. If we animate between the two in pixels that will trigger\n * a paint each time. If we animate between the two in percentage we'll avoid a paint.\n */\nconst correctBorderRadius = {\n    correct: (latest, node) => {\n        if (!node.target)\n            return latest;\n        /**\n         * If latest is a string, if it's a percentage we can return immediately as it's\n         * going to be stretched appropriately. Otherwise, if it's a pixel, convert it to a number.\n         */\n        if (typeof latest === \"string\") {\n            if (px.test(latest)) {\n                latest = parseFloat(latest);\n            }\n            else {\n                return latest;\n            }\n        }\n        /**\n         * If latest is a number, it's a pixel value. We use the current viewportBox to calculate that\n         * pixel value as a percentage of each axis\n         */\n        const x = pixelsToPercent(latest, node.target.x);\n        const y = pixelsToPercent(latest, node.target.y);\n        return `${x}% ${y}%`;\n    },\n};\n\nexport { correctBorderRadius, pixelsToPercent };\n","import { complex, mixNumber } from 'motion-dom';\n\nconst correctBoxShadow = {\n    correct: (latest, { treeScale, projectionDelta }) => {\n        const original = latest;\n        const shadow = complex.parse(latest);\n        // TODO: Doesn't support multiple shadows\n        if (shadow.length > 5)\n            return original;\n        const template = complex.createTransformer(latest);\n        const offset = typeof shadow[0] !== \"number\" ? 1 : 0;\n        // Calculate the overall context scale\n        const xScale = projectionDelta.x.scale * treeScale.x;\n        const yScale = projectionDelta.y.scale * treeScale.y;\n        shadow[0 + offset] /= xScale;\n        shadow[1 + offset] /= yScale;\n        /**\n         * Ideally we'd correct x and y scales individually, but because blur and\n         * spread apply to both we have to take a scale average and apply that instead.\n         * We could potentially improve the outcome of this by incorporating the ratio between\n         * the two scales.\n         */\n        const averageScale = mixNumber(xScale, yScale, 0.5);\n        // Blur\n        if (typeof shadow[2 + offset] === \"number\")\n            shadow[2 + offset] /= averageScale;\n        // Spread\n        if (typeof shadow[3 + offset] === \"number\")\n            shadow[3 + offset] /= averageScale;\n        return template(shadow);\n    },\n};\n\nexport { correctBoxShadow };\n","\"use client\";\nimport { jsx } from 'react/jsx-runtime';\nimport { frame, microtask } from 'motion-dom';\nimport { useContext, Component } from 'react';\nimport { usePresence } from '../../../components/AnimatePresence/use-presence.mjs';\nimport { LayoutGroupContext } from '../../../context/LayoutGroupContext.mjs';\nimport { SwitchLayoutGroupContext } from '../../../context/SwitchLayoutGroupContext.mjs';\nimport { globalProjectionState } from '../../../projection/node/state.mjs';\nimport { correctBorderRadius } from '../../../projection/styles/scale-border-radius.mjs';\nimport { correctBoxShadow } from '../../../projection/styles/scale-box-shadow.mjs';\nimport { addScaleCorrector } from '../../../projection/styles/scale-correction.mjs';\n\nclass MeasureLayoutWithContext extends Component {\n    /**\n     * This only mounts projection nodes for components that\n     * need measuring, we might want to do it for all components\n     * in order to incorporate transforms\n     */\n    componentDidMount() {\n        const { visualElement, layoutGroup, switchLayoutGroup, layoutId } = this.props;\n        const { projection } = visualElement;\n        addScaleCorrector(defaultScaleCorrectors);\n        if (projection) {\n            if (layoutGroup.group)\n                layoutGroup.group.add(projection);\n            if (switchLayoutGroup && switchLayoutGroup.register && layoutId) {\n                switchLayoutGroup.register(projection);\n            }\n            projection.root.didUpdate();\n            projection.addEventListener(\"animationComplete\", () => {\n                this.safeToRemove();\n            });\n            projection.setOptions({\n                ...projection.options,\n                onExitComplete: () => this.safeToRemove(),\n            });\n        }\n        globalProjectionState.hasEverUpdated = true;\n    }\n    getSnapshotBeforeUpdate(prevProps) {\n        const { layoutDependency, visualElement, drag, isPresent } = this.props;\n        const { projection } = visualElement;\n        if (!projection)\n            return null;\n        /**\n         * TODO: We use this data in relegate to determine whether to\n         * promote a previous element. There's no guarantee its presence data\n         * will have updated by this point - if a bug like this arises it will\n         * have to be that we markForRelegation and then find a new lead some other way,\n         * perhaps in didUpdate\n         */\n        projection.isPresent = isPresent;\n        if (drag ||\n            prevProps.layoutDependency !== layoutDependency ||\n            layoutDependency === undefined ||\n            prevProps.isPresent !== isPresent) {\n            projection.willUpdate();\n        }\n        else {\n            this.safeToRemove();\n        }\n        if (prevProps.isPresent !== isPresent) {\n            if (isPresent) {\n                projection.promote();\n            }\n            else if (!projection.relegate()) {\n                /**\n                 * If there's another stack member taking over from this one,\n                 * it's in charge of the exit animation and therefore should\n                 * be in charge of the safe to remove. Otherwise we call it here.\n                 */\n                frame.postRender(() => {\n                    const stack = projection.getStack();\n                    if (!stack || !stack.members.length) {\n                        this.safeToRemove();\n                    }\n                });\n            }\n        }\n        return null;\n    }\n    componentDidUpdate() {\n        const { projection } = this.props.visualElement;\n        if (projection) {\n            projection.root.didUpdate();\n            microtask.postRender(() => {\n                if (!projection.currentAnimation && projection.isLead()) {\n                    this.safeToRemove();\n                }\n            });\n        }\n    }\n    componentWillUnmount() {\n        const { visualElement, layoutGroup, switchLayoutGroup: promoteContext, } = this.props;\n        const { projection } = visualElement;\n        if (projection) {\n            projection.scheduleCheckAfterUnmount();\n            if (layoutGroup && layoutGroup.group)\n                layoutGroup.group.remove(projection);\n            if (promoteContext && promoteContext.deregister)\n                promoteContext.deregister(projection);\n        }\n    }\n    safeToRemove() {\n        const { safeToRemove } = this.props;\n        safeToRemove && safeToRemove();\n    }\n    render() {\n        return null;\n    }\n}\nfunction MeasureLayout(props) {\n    const [isPresent, safeToRemove] = usePresence();\n    const layoutGroup = useContext(LayoutGroupContext);\n    return (jsx(MeasureLayoutWithContext, { ...props, layoutGroup: layoutGroup, switchLayoutGroup: useContext(SwitchLayoutGroupContext), isPresent: isPresent, safeToRemove: safeToRemove }));\n}\nconst defaultScaleCorrectors = {\n    borderRadius: {\n        ...correctBorderRadius,\n        applyTo: [\n            \"borderTopLeftRadius\",\n            \"borderTopRightRadius\",\n            \"borderBottomLeftRadius\",\n            \"borderBottomRightRadius\",\n        ],\n    },\n    borderTopLeftRadius: correctBorderRadius,\n    borderTopRightRadius: correctBorderRadius,\n    borderBottomLeftRadius: correctBorderRadius,\n    borderBottomRightRadius: correctBorderRadius,\n    boxShadow: correctBoxShadow,\n};\n\nexport { MeasureLayout };\n","const compareByDepth = (a, b) => a.depth - b.depth;\n\nexport { compareByDepth };\n","import { addUniqueItem, removeItem } from 'motion-utils';\nimport { compareByDepth } from './compare-by-depth.mjs';\n\nclass FlatTree {\n    constructor() {\n        this.children = [];\n        this.isDirty = false;\n    }\n    add(child) {\n        addUniqueItem(this.children, child);\n        this.isDirty = true;\n    }\n    remove(child) {\n        removeItem(this.children, child);\n        this.isDirty = true;\n    }\n    forEach(callback) {\n        this.isDirty && this.children.sort(compareByDepth);\n        this.isDirty = false;\n        this.children.forEach(callback);\n    }\n}\n\nexport { FlatTree };\n","import { time, frame, cancelFrame } from 'motion-dom';\nimport { secondsToMilliseconds } from 'motion-utils';\n\n/**\n * Timeout defined in ms\n */\nfunction delay(callback, timeout) {\n    const start = time.now();\n    const checkElapsed = ({ timestamp }) => {\n        const elapsed = timestamp - start;\n        if (elapsed >= timeout) {\n            cancelFrame(checkElapsed);\n            callback(elapsed - timeout);\n        }\n    };\n    frame.setup(checkElapsed, true);\n    return () => cancelFrame(checkElapsed);\n}\nfunction delayInSeconds(callback, timeout) {\n    return delay(callback, secondsToMilliseconds(timeout));\n}\n\nexport { delay, delayInSeconds };\n","import { isMotionValue } from 'motion-dom';\n\n/**\n * If the provided value is a MotionValue, this returns the actual value, otherwise just the value itself\n *\n * TODO: Remove and move to library\n */\nfunction resolveMotionValue(value) {\n    return isMotionValue(value) ? value.get() : value;\n}\n\nexport { resolveMotionValue };\n","import { mixNumber, percent, px } from 'motion-dom';\nimport { progress, circOut, noop } from 'motion-utils';\n\nconst borders = [\"TopLeft\", \"TopRight\", \"BottomLeft\", \"BottomRight\"];\nconst numBorders = borders.length;\nconst asNumber = (value) => typeof value === \"string\" ? parseFloat(value) : value;\nconst isPx = (value) => typeof value === \"number\" || px.test(value);\nfunction mixValues(target, follow, lead, progress, shouldCrossfadeOpacity, isOnlyMember) {\n    if (shouldCrossfadeOpacity) {\n        target.opacity = mixNumber(0, lead.opacity ?? 1, easeCrossfadeIn(progress));\n        target.opacityExit = mixNumber(follow.opacity ?? 1, 0, easeCrossfadeOut(progress));\n    }\n    else if (isOnlyMember) {\n        target.opacity = mixNumber(follow.opacity ?? 1, lead.opacity ?? 1, progress);\n    }\n    /**\n     * Mix border radius\n     */\n    for (let i = 0; i < numBorders; i++) {\n        const borderLabel = `border${borders[i]}Radius`;\n        let followRadius = getRadius(follow, borderLabel);\n        let leadRadius = getRadius(lead, borderLabel);\n        if (followRadius === undefined && leadRadius === undefined)\n            continue;\n        followRadius || (followRadius = 0);\n        leadRadius || (leadRadius = 0);\n        const canMix = followRadius === 0 ||\n            leadRadius === 0 ||\n            isPx(followRadius) === isPx(leadRadius);\n        if (canMix) {\n            target[borderLabel] = Math.max(mixNumber(asNumber(followRadius), asNumber(leadRadius), progress), 0);\n            if (percent.test(leadRadius) || percent.test(followRadius)) {\n                target[borderLabel] += \"%\";\n            }\n        }\n        else {\n            target[borderLabel] = leadRadius;\n        }\n    }\n    /**\n     * Mix rotation\n     */\n    if (follow.rotate || lead.rotate) {\n        target.rotate = mixNumber(follow.rotate || 0, lead.rotate || 0, progress);\n    }\n}\nfunction getRadius(values, radiusName) {\n    return values[radiusName] !== undefined\n        ? values[radiusName]\n        : values.borderRadius;\n}\n// /**\n//  * We only want to mix the background color if there's a follow element\n//  * that we're not crossfading opacity between. For instance with switch\n//  * AnimateSharedLayout animations, this helps the illusion of a continuous\n//  * element being animated but also cuts down on the number of paints triggered\n//  * for elements where opacity is doing that work for us.\n//  */\n// if (\n//     !hasFollowElement &&\n//     latestLeadValues.backgroundColor &&\n//     latestFollowValues.backgroundColor\n// ) {\n//     /**\n//      * This isn't ideal performance-wise as mixColor is creating a new function every frame.\n//      * We could probably create a mixer that runs at the start of the animation but\n//      * the idea behind the crossfader is that it runs dynamically between two potentially\n//      * changing targets (ie opacity or borderRadius may be animating independently via variants)\n//      */\n//     leadState.backgroundColor = followState.backgroundColor = mixColor(\n//         latestFollowValues.backgroundColor as string,\n//         latestLeadValues.backgroundColor as string\n//     )(p)\n// }\nconst easeCrossfadeIn = /*@__PURE__*/ compress(0, 0.5, circOut);\nconst easeCrossfadeOut = /*@__PURE__*/ compress(0.5, 0.95, noop);\nfunction compress(min, max, easing) {\n    return (p) => {\n        // Could replace ifs with clamp\n        if (p < min)\n            return 0;\n        if (p > max)\n            return 1;\n        return easing(progress(min, max, p));\n    };\n}\n\nexport { mixValues };\n","/**\n * Reset an axis to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisInto(axis, originAxis) {\n    axis.min = originAxis.min;\n    axis.max = originAxis.max;\n}\n/**\n * Reset a box to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyBoxInto(box, originBox) {\n    copyAxisInto(box.x, originBox.x);\n    copyAxisInto(box.y, originBox.y);\n}\n/**\n * Reset a delta to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisDeltaInto(delta, originDelta) {\n    delta.translate = originDelta.translate;\n    delta.scale = originDelta.scale;\n    delta.originPoint = originDelta.originPoint;\n    delta.origin = originDelta.origin;\n}\n\nexport { copyAxisDeltaInto, copyAxisInto, copyBoxInto };\n","import { percent, mixNumber } from 'motion-dom';\nimport { scalePoint } from './delta-apply.mjs';\n\n/**\n * Remove a delta from a point. This is essentially the steps of applyPointDelta in reverse\n */\nfunction removePointDelta(point, translate, scale, originPoint, boxScale) {\n    point -= translate;\n    point = scalePoint(point, 1 / scale, originPoint);\n    if (boxScale !== undefined) {\n        point = scalePoint(point, 1 / boxScale, originPoint);\n    }\n    return point;\n}\n/**\n * Remove a delta from an axis. This is essentially the steps of applyAxisDelta in reverse\n */\nfunction removeAxisDelta(axis, translate = 0, scale = 1, origin = 0.5, boxScale, originAxis = axis, sourceAxis = axis) {\n    if (percent.test(translate)) {\n        translate = parseFloat(translate);\n        const relativeProgress = mixNumber(sourceAxis.min, sourceAxis.max, translate / 100);\n        translate = relativeProgress - sourceAxis.min;\n    }\n    if (typeof translate !== \"number\")\n        return;\n    let originPoint = mixNumber(originAxis.min, originAxis.max, origin);\n    if (axis === originAxis)\n        originPoint -= translate;\n    axis.min = removePointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = removePointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Remove a transforms from an axis. This is essentially the steps of applyAxisTransforms in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeAxisTransforms(axis, transforms, [key, scaleKey, originKey], origin, sourceAxis) {\n    removeAxisDelta(axis, transforms[key], transforms[scaleKey], transforms[originKey], transforms.scale, origin, sourceAxis);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Remove a transforms from an box. This is essentially the steps of applyAxisBox in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeBoxTransforms(box, transforms, originBox, sourceBox) {\n    removeAxisTransforms(box.x, transforms, xKeys, originBox ? originBox.x : undefined, sourceBox ? sourceBox.x : undefined);\n    removeAxisTransforms(box.y, transforms, yKeys, originBox ? originBox.y : undefined, sourceBox ? sourceBox.y : undefined);\n}\n\nexport { removeAxisDelta, removeAxisTransforms, removeBoxTransforms, removePointDelta };\n","import { calcLength } from './delta-calc.mjs';\n\nfunction isAxisDeltaZero(delta) {\n    return delta.translate === 0 && delta.scale === 1;\n}\nfunction isDeltaZero(delta) {\n    return isAxisDeltaZero(delta.x) && isAxisDeltaZero(delta.y);\n}\nfunction axisEquals(a, b) {\n    return a.min === b.min && a.max === b.max;\n}\nfunction boxEquals(a, b) {\n    return axisEquals(a.x, b.x) && axisEquals(a.y, b.y);\n}\nfunction axisEqualsRounded(a, b) {\n    return (Math.round(a.min) === Math.round(b.min) &&\n        Math.round(a.max) === Math.round(b.max));\n}\nfunction boxEqualsRounded(a, b) {\n    return axisEqualsRounded(a.x, b.x) && axisEqualsRounded(a.y, b.y);\n}\nfunction aspectRatio(box) {\n    return calcLength(box.x) / calcLength(box.y);\n}\nfunction axisDeltaEquals(a, b) {\n    return (a.translate === b.translate &&\n        a.scale === b.scale &&\n        a.originPoint === b.originPoint);\n}\n\nexport { aspectRatio, axisDeltaEquals, axisEquals, axisEqualsRounded, boxEquals, boxEqualsRounded, isDeltaZero };\n","import { addUniqueItem, removeItem } from 'motion-utils';\n\nclass NodeStack {\n    constructor() {\n        this.members = [];\n    }\n    add(node) {\n        addUniqueItem(this.members, node);\n        node.scheduleRender();\n    }\n    remove(node) {\n        removeItem(this.members, node);\n        if (node === this.prevLead) {\n            this.prevLead = undefined;\n        }\n        if (node === this.lead) {\n            const prevLead = this.members[this.members.length - 1];\n            if (prevLead) {\n                this.promote(prevLead);\n            }\n        }\n    }\n    relegate(node) {\n        const indexOfNode = this.members.findIndex((member) => node === member);\n        if (indexOfNode === 0)\n            return false;\n        /**\n         * Find the next projection node that is present\n         */\n        let prevLead;\n        for (let i = indexOfNode; i >= 0; i--) {\n            const member = this.members[i];\n            if (member.isPresent !== false) {\n                prevLead = member;\n                break;\n            }\n        }\n        if (prevLead) {\n            this.promote(prevLead);\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    promote(node, preserveFollowOpacity) {\n        const prevLead = this.lead;\n        if (node === prevLead)\n            return;\n        this.prevLead = prevLead;\n        this.lead = node;\n        node.show();\n        if (prevLead) {\n            prevLead.instance && prevLead.scheduleRender();\n            node.scheduleRender();\n            node.resumeFrom = prevLead;\n            if (preserveFollowOpacity) {\n                node.resumeFrom.preserveOpacity = true;\n            }\n            if (prevLead.snapshot) {\n                node.snapshot = prevLead.snapshot;\n                node.snapshot.latestValues =\n                    prevLead.animationValues || prevLead.latestValues;\n            }\n            if (node.root && node.root.isUpdating) {\n                node.isLayoutDirty = true;\n            }\n            const { crossfade } = node.options;\n            if (crossfade === false) {\n                prevLead.hide();\n            }\n            /**\n             * TODO:\n             *   - Test border radius when previous node was deleted\n             *   - boxShadow mixing\n             *   - Shared between element A in scrolled container and element B (scroll stays the same or changes)\n             *   - Shared between element A in transformed container and element B (transform stays the same or changes)\n             *   - Shared between element A in scrolled page and element B (scroll stays the same or changes)\n             * ---\n             *   - Crossfade opacity of root nodes\n             *   - layoutId changes after animation\n             *   - layoutId changes mid animation\n             */\n        }\n    }\n    exitAnimationComplete() {\n        this.members.forEach((node) => {\n            const { options, resumingFrom } = node;\n            options.onExitComplete && options.onExitComplete();\n            if (resumingFrom) {\n                resumingFrom.options.onExitComplete &&\n                    resumingFrom.options.onExitComplete();\n            }\n        });\n    }\n    scheduleRender() {\n        this.members.forEach((node) => {\n            node.instance && node.scheduleRender(false);\n        });\n    }\n    /**\n     * Clear any leads that have been removed this render to prevent them from being\n     * used in future animations and to prevent memory leaks\n     */\n    removeLeadSnapshot() {\n        if (this.lead && this.lead.snapshot) {\n            this.lead.snapshot = undefined;\n        }\n    }\n}\n\nexport { NodeStack };\n","import { statsBuffer, isSVGElement, isSVGSVGElement, getValueTransition, cancelFrame, time, frameData, frameSteps, microtask, frame, activeAnimations, motionValue, mixNumber } from 'motion-dom';\nimport { SubscriptionManager, clamp, noop } from 'motion-utils';\nimport { animateSingleValue } from '../../animation/animate/single-value.mjs';\nimport { getOptimisedAppearId } from '../../animation/optimized-appear/get-appear-id.mjs';\nimport { FlatTree } from '../../render/utils/flat-tree.mjs';\nimport { delay } from '../../utils/delay.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { mixValues } from '../animation/mix-values.mjs';\nimport { copyBoxInto, copyAxisDeltaInto } from '../geometry/copy.mjs';\nimport { translateAxis, transformBox, applyBoxDelta, applyTreeDeltas } from '../geometry/delta-apply.mjs';\nimport { calcLength, calcRelativePosition, calcRelativeBox, calcBoxDelta, isNear } from '../geometry/delta-calc.mjs';\nimport { removeBoxTransforms } from '../geometry/delta-remove.mjs';\nimport { createBox, createDelta } from '../geometry/models.mjs';\nimport { boxEqualsRounded, isDeltaZero, axisDeltaEquals, aspectRatio, boxEquals } from '../geometry/utils.mjs';\nimport { NodeStack } from '../shared/stack.mjs';\nimport { scaleCorrectors } from '../styles/scale-correction.mjs';\nimport { buildProjectionTransform } from '../styles/transform.mjs';\nimport { eachAxis } from '../utils/each-axis.mjs';\nimport { hasTransform, hasScale, has2DTranslate } from '../utils/has-transform.mjs';\nimport { globalProjectionState } from './state.mjs';\n\nconst metrics = {\n    nodes: 0,\n    calculatedTargetDeltas: 0,\n    calculatedProjections: 0,\n};\nconst transformAxes = [\"\", \"X\", \"Y\", \"Z\"];\nconst hiddenVisibility = { visibility: \"hidden\" };\n/**\n * We use 1000 as the animation target as 0-1000 maps better to pixels than 0-1\n * which has a noticeable difference in spring animations\n */\nconst animationTarget = 1000;\nlet id = 0;\nfunction resetDistortingTransform(key, visualElement, values, sharedAnimationValues) {\n    const { latestValues } = visualElement;\n    // Record the distorting transform and then temporarily set it to 0\n    if (latestValues[key]) {\n        values[key] = latestValues[key];\n        visualElement.setStaticValue(key, 0);\n        if (sharedAnimationValues) {\n            sharedAnimationValues[key] = 0;\n        }\n    }\n}\nfunction cancelTreeOptimisedTransformAnimations(projectionNode) {\n    projectionNode.hasCheckedOptimisedAppear = true;\n    if (projectionNode.root === projectionNode)\n        return;\n    const { visualElement } = projectionNode.options;\n    if (!visualElement)\n        return;\n    const appearId = getOptimisedAppearId(visualElement);\n    if (window.MotionHasOptimisedAnimation(appearId, \"transform\")) {\n        const { layout, layoutId } = projectionNode.options;\n        window.MotionCancelOptimisedAnimation(appearId, \"transform\", frame, !(layout || layoutId));\n    }\n    const { parent } = projectionNode;\n    if (parent && !parent.hasCheckedOptimisedAppear) {\n        cancelTreeOptimisedTransformAnimations(parent);\n    }\n}\nfunction createProjectionNode({ attachResizeListener, defaultParent, measureScroll, checkIsScrollRoot, resetTransform, }) {\n    return class ProjectionNode {\n        constructor(latestValues = {}, parent = defaultParent?.()) {\n            /**\n             * A unique ID generated for every projection node.\n             */\n            this.id = id++;\n            /**\n             * An id that represents a unique session instigated by startUpdate.\n             */\n            this.animationId = 0;\n            /**\n             * A Set containing all this component's children. This is used to iterate\n             * through the children.\n             *\n             * TODO: This could be faster to iterate as a flat array stored on the root node.\n             */\n            this.children = new Set();\n            /**\n             * Options for the node. We use this to configure what kind of layout animations\n             * we should perform (if any).\n             */\n            this.options = {};\n            /**\n             * We use this to detect when its safe to shut down part of a projection tree.\n             * We have to keep projecting children for scale correction and relative projection\n             * until all their parents stop performing layout animations.\n             */\n            this.isTreeAnimating = false;\n            this.isAnimationBlocked = false;\n            /**\n             * Flag to true if we think this layout has been changed. We can't always know this,\n             * currently we set it to true every time a component renders, or if it has a layoutDependency\n             * if that has changed between renders. Additionally, components can be grouped by LayoutGroup\n             * and if one node is dirtied, they all are.\n             */\n            this.isLayoutDirty = false;\n            /**\n             * Flag to true if we think the projection calculations for this node needs\n             * recalculating as a result of an updated transform or layout animation.\n             */\n            this.isProjectionDirty = false;\n            /**\n             * Flag to true if the layout *or* transform has changed. This then gets propagated\n             * throughout the projection tree, forcing any element below to recalculate on the next frame.\n             */\n            this.isSharedProjectionDirty = false;\n            /**\n             * Flag transform dirty. This gets propagated throughout the whole tree but is only\n             * respected by shared nodes.\n             */\n            this.isTransformDirty = false;\n            /**\n             * Block layout updates for instant layout transitions throughout the tree.\n             */\n            this.updateManuallyBlocked = false;\n            this.updateBlockedByResize = false;\n            /**\n             * Set to true between the start of the first `willUpdate` call and the end of the `didUpdate`\n             * call.\n             */\n            this.isUpdating = false;\n            /**\n             * If this is an SVG element we currently disable projection transforms\n             */\n            this.isSVG = false;\n            /**\n             * Flag to true (during promotion) if a node doing an instant layout transition needs to reset\n             * its projection styles.\n             */\n            this.needsReset = false;\n            /**\n             * Flags whether this node should have its transform reset prior to measuring.\n             */\n            this.shouldResetTransform = false;\n            /**\n             * Store whether this node has been checked for optimised appear animations. As\n             * effects fire bottom-up, and we want to look up the tree for appear animations,\n             * this makes sure we only check each path once, stopping at nodes that\n             * have already been checked.\n             */\n            this.hasCheckedOptimisedAppear = false;\n            /**\n             * An object representing the calculated contextual/accumulated/tree scale.\n             * This will be used to scale calculcated projection transforms, as these are\n             * calculated in screen-space but need to be scaled for elements to layoutly\n             * make it to their calculated destinations.\n             *\n             * TODO: Lazy-init\n             */\n            this.treeScale = { x: 1, y: 1 };\n            /**\n             *\n             */\n            this.eventHandlers = new Map();\n            this.hasTreeAnimated = false;\n            // Note: Currently only running on root node\n            this.updateScheduled = false;\n            this.scheduleUpdate = () => this.update();\n            this.projectionUpdateScheduled = false;\n            this.checkUpdateFailed = () => {\n                if (this.isUpdating) {\n                    this.isUpdating = false;\n                    this.clearAllSnapshots();\n                }\n            };\n            /**\n             * This is a multi-step process as shared nodes might be of different depths. Nodes\n             * are sorted by depth order, so we need to resolve the entire tree before moving to\n             * the next step.\n             */\n            this.updateProjection = () => {\n                this.projectionUpdateScheduled = false;\n                /**\n                 * Reset debug counts. Manually resetting rather than creating a new\n                 * object each frame.\n                 */\n                if (statsBuffer.value) {\n                    metrics.nodes =\n                        metrics.calculatedTargetDeltas =\n                            metrics.calculatedProjections =\n                                0;\n                }\n                this.nodes.forEach(propagateDirtyNodes);\n                this.nodes.forEach(resolveTargetDelta);\n                this.nodes.forEach(calcProjection);\n                this.nodes.forEach(cleanDirtyNodes);\n                if (statsBuffer.addProjectionMetrics) {\n                    statsBuffer.addProjectionMetrics(metrics);\n                }\n            };\n            /**\n             * Frame calculations\n             */\n            this.resolvedRelativeTargetAt = 0.0;\n            this.hasProjected = false;\n            this.isVisible = true;\n            this.animationProgress = 0;\n            /**\n             * Shared layout\n             */\n            // TODO Only running on root node\n            this.sharedNodes = new Map();\n            this.latestValues = latestValues;\n            this.root = parent ? parent.root || parent : this;\n            this.path = parent ? [...parent.path, parent] : [];\n            this.parent = parent;\n            this.depth = parent ? parent.depth + 1 : 0;\n            for (let i = 0; i < this.path.length; i++) {\n                this.path[i].shouldResetTransform = true;\n            }\n            if (this.root === this)\n                this.nodes = new FlatTree();\n        }\n        addEventListener(name, handler) {\n            if (!this.eventHandlers.has(name)) {\n                this.eventHandlers.set(name, new SubscriptionManager());\n            }\n            return this.eventHandlers.get(name).add(handler);\n        }\n        notifyListeners(name, ...args) {\n            const subscriptionManager = this.eventHandlers.get(name);\n            subscriptionManager && subscriptionManager.notify(...args);\n        }\n        hasListeners(name) {\n            return this.eventHandlers.has(name);\n        }\n        /**\n         * Lifecycles\n         */\n        mount(instance) {\n            if (this.instance)\n                return;\n            this.isSVG = isSVGElement(instance) && !isSVGSVGElement(instance);\n            this.instance = instance;\n            const { layoutId, layout, visualElement } = this.options;\n            if (visualElement && !visualElement.current) {\n                visualElement.mount(instance);\n            }\n            this.root.nodes.add(this);\n            this.parent && this.parent.children.add(this);\n            if (this.root.hasTreeAnimated && (layout || layoutId)) {\n                this.isLayoutDirty = true;\n            }\n            if (attachResizeListener) {\n                let cancelDelay;\n                const resizeUnblockUpdate = () => (this.root.updateBlockedByResize = false);\n                attachResizeListener(instance, () => {\n                    this.root.updateBlockedByResize = true;\n                    cancelDelay && cancelDelay();\n                    cancelDelay = delay(resizeUnblockUpdate, 250);\n                    if (globalProjectionState.hasAnimatedSinceResize) {\n                        globalProjectionState.hasAnimatedSinceResize = false;\n                        this.nodes.forEach(finishAnimation);\n                    }\n                });\n            }\n            if (layoutId) {\n                this.root.registerSharedNode(layoutId, this);\n            }\n            // Only register the handler if it requires layout animation\n            if (this.options.animate !== false &&\n                visualElement &&\n                (layoutId || layout)) {\n                this.addEventListener(\"didUpdate\", ({ delta, hasLayoutChanged, hasRelativeLayoutChanged, layout: newLayout, }) => {\n                    if (this.isTreeAnimationBlocked()) {\n                        this.target = undefined;\n                        this.relativeTarget = undefined;\n                        return;\n                    }\n                    // TODO: Check here if an animation exists\n                    const layoutTransition = this.options.transition ||\n                        visualElement.getDefaultTransition() ||\n                        defaultLayoutTransition;\n                    const { onLayoutAnimationStart, onLayoutAnimationComplete, } = visualElement.getProps();\n                    /**\n                     * The target layout of the element might stay the same,\n                     * but its position relative to its parent has changed.\n                     */\n                    const hasTargetChanged = !this.targetLayout ||\n                        !boxEqualsRounded(this.targetLayout, newLayout);\n                    /*\n                     * Note: Disabled to fix relative animations always triggering new\n                     * layout animations. If this causes further issues, we can try\n                     * a different approach to detecting relative target changes.\n                     */\n                    // || hasRelativeLayoutChanged\n                    /**\n                     * If the layout hasn't seemed to have changed, it might be that the\n                     * element is visually in the same place in the document but its position\n                     * relative to its parent has indeed changed. So here we check for that.\n                     */\n                    const hasOnlyRelativeTargetChanged = !hasLayoutChanged && hasRelativeLayoutChanged;\n                    if (this.options.layoutRoot ||\n                        this.resumeFrom ||\n                        hasOnlyRelativeTargetChanged ||\n                        (hasLayoutChanged &&\n                            (hasTargetChanged || !this.currentAnimation))) {\n                        if (this.resumeFrom) {\n                            this.resumingFrom = this.resumeFrom;\n                            this.resumingFrom.resumingFrom = undefined;\n                        }\n                        const animationOptions = {\n                            ...getValueTransition(layoutTransition, \"layout\"),\n                            onPlay: onLayoutAnimationStart,\n                            onComplete: onLayoutAnimationComplete,\n                        };\n                        if (visualElement.shouldReduceMotion ||\n                            this.options.layoutRoot) {\n                            animationOptions.delay = 0;\n                            animationOptions.type = false;\n                        }\n                        this.startAnimation(animationOptions);\n                        /**\n                         * Set animation origin after starting animation to avoid layout jump\n                         * caused by stopping previous layout animation\n                         */\n                        this.setAnimationOrigin(delta, hasOnlyRelativeTargetChanged);\n                    }\n                    else {\n                        /**\n                         * If the layout hasn't changed and we have an animation that hasn't started yet,\n                         * finish it immediately. Otherwise it will be animating from a location\n                         * that was probably never commited to screen and look like a jumpy box.\n                         */\n                        if (!hasLayoutChanged) {\n                            finishAnimation(this);\n                        }\n                        if (this.isLead() && this.options.onExitComplete) {\n                            this.options.onExitComplete();\n                        }\n                    }\n                    this.targetLayout = newLayout;\n                });\n            }\n        }\n        unmount() {\n            this.options.layoutId && this.willUpdate();\n            this.root.nodes.remove(this);\n            const stack = this.getStack();\n            stack && stack.remove(this);\n            this.parent && this.parent.children.delete(this);\n            this.instance = undefined;\n            this.eventHandlers.clear();\n            cancelFrame(this.updateProjection);\n        }\n        // only on the root\n        blockUpdate() {\n            this.updateManuallyBlocked = true;\n        }\n        unblockUpdate() {\n            this.updateManuallyBlocked = false;\n        }\n        isUpdateBlocked() {\n            return this.updateManuallyBlocked || this.updateBlockedByResize;\n        }\n        isTreeAnimationBlocked() {\n            return (this.isAnimationBlocked ||\n                (this.parent && this.parent.isTreeAnimationBlocked()) ||\n                false);\n        }\n        // Note: currently only running on root node\n        startUpdate() {\n            if (this.isUpdateBlocked())\n                return;\n            this.isUpdating = true;\n            this.nodes && this.nodes.forEach(resetSkewAndRotation);\n            this.animationId++;\n        }\n        getTransformTemplate() {\n            const { visualElement } = this.options;\n            return visualElement && visualElement.getProps().transformTemplate;\n        }\n        willUpdate(shouldNotifyListeners = true) {\n            this.root.hasTreeAnimated = true;\n            if (this.root.isUpdateBlocked()) {\n                this.options.onExitComplete && this.options.onExitComplete();\n                return;\n            }\n            /**\n             * If we're running optimised appear animations then these must be\n             * cancelled before measuring the DOM. This is so we can measure\n             * the true layout of the element rather than the WAAPI animation\n             * which will be unaffected by the resetSkewAndRotate step.\n             *\n             * Note: This is a DOM write. Worst case scenario is this is sandwiched\n             * between other snapshot reads which will cause unnecessary style recalculations.\n             * This has to happen here though, as we don't yet know which nodes will need\n             * snapshots in startUpdate(), but we only want to cancel optimised animations\n             * if a layout animation measurement is actually going to be affected by them.\n             */\n            if (window.MotionCancelOptimisedAnimation &&\n                !this.hasCheckedOptimisedAppear) {\n                cancelTreeOptimisedTransformAnimations(this);\n            }\n            !this.root.isUpdating && this.root.startUpdate();\n            if (this.isLayoutDirty)\n                return;\n            this.isLayoutDirty = true;\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                node.shouldResetTransform = true;\n                node.updateScroll(\"snapshot\");\n                if (node.options.layoutRoot) {\n                    node.willUpdate(false);\n                }\n            }\n            const { layoutId, layout } = this.options;\n            if (layoutId === undefined && !layout)\n                return;\n            const transformTemplate = this.getTransformTemplate();\n            this.prevTransformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            this.updateSnapshot();\n            shouldNotifyListeners && this.notifyListeners(\"willUpdate\");\n        }\n        update() {\n            this.updateScheduled = false;\n            const updateWasBlocked = this.isUpdateBlocked();\n            // When doing an instant transition, we skip the layout update,\n            // but should still clean up the measurements so that the next\n            // snapshot could be taken correctly.\n            if (updateWasBlocked) {\n                this.unblockUpdate();\n                this.clearAllSnapshots();\n                this.nodes.forEach(clearMeasurements);\n                return;\n            }\n            if (!this.isUpdating) {\n                this.nodes.forEach(clearIsLayoutDirty);\n            }\n            this.isUpdating = false;\n            /**\n             * Write\n             */\n            this.nodes.forEach(resetTransformStyle);\n            /**\n             * Read ==================\n             */\n            // Update layout measurements of updated children\n            this.nodes.forEach(updateLayout);\n            /**\n             * Write\n             */\n            // Notify listeners that the layout is updated\n            this.nodes.forEach(notifyLayoutUpdate);\n            this.clearAllSnapshots();\n            /**\n             * Manually flush any pending updates. Ideally\n             * we could leave this to the following requestAnimationFrame but this seems\n             * to leave a flash of incorrectly styled content.\n             */\n            const now = time.now();\n            frameData.delta = clamp(0, 1000 / 60, now - frameData.timestamp);\n            frameData.timestamp = now;\n            frameData.isProcessing = true;\n            frameSteps.update.process(frameData);\n            frameSteps.preRender.process(frameData);\n            frameSteps.render.process(frameData);\n            frameData.isProcessing = false;\n        }\n        didUpdate() {\n            if (!this.updateScheduled) {\n                this.updateScheduled = true;\n                microtask.read(this.scheduleUpdate);\n            }\n        }\n        clearAllSnapshots() {\n            this.nodes.forEach(clearSnapshot);\n            this.sharedNodes.forEach(removeLeadSnapshots);\n        }\n        scheduleUpdateProjection() {\n            if (!this.projectionUpdateScheduled) {\n                this.projectionUpdateScheduled = true;\n                frame.preRender(this.updateProjection, false, true);\n            }\n        }\n        scheduleCheckAfterUnmount() {\n            /**\n             * If the unmounting node is in a layoutGroup and did trigger a willUpdate,\n             * we manually call didUpdate to give a chance to the siblings to animate.\n             * Otherwise, cleanup all snapshots to prevents future nodes from reusing them.\n             */\n            frame.postRender(() => {\n                if (this.isLayoutDirty) {\n                    this.root.didUpdate();\n                }\n                else {\n                    this.root.checkUpdateFailed();\n                }\n            });\n        }\n        /**\n         * Update measurements\n         */\n        updateSnapshot() {\n            if (this.snapshot || !this.instance)\n                return;\n            this.snapshot = this.measure();\n            if (this.snapshot &&\n                !calcLength(this.snapshot.measuredBox.x) &&\n                !calcLength(this.snapshot.measuredBox.y)) {\n                this.snapshot = undefined;\n            }\n        }\n        updateLayout() {\n            if (!this.instance)\n                return;\n            // TODO: Incorporate into a forwarded scroll offset\n            this.updateScroll();\n            if (!(this.options.alwaysMeasureLayout && this.isLead()) &&\n                !this.isLayoutDirty) {\n                return;\n            }\n            /**\n             * When a node is mounted, it simply resumes from the prevLead's\n             * snapshot instead of taking a new one, but the ancestors scroll\n             * might have updated while the prevLead is unmounted. We need to\n             * update the scroll again to make sure the layout we measure is\n             * up to date.\n             */\n            if (this.resumeFrom && !this.resumeFrom.instance) {\n                for (let i = 0; i < this.path.length; i++) {\n                    const node = this.path[i];\n                    node.updateScroll();\n                }\n            }\n            const prevLayout = this.layout;\n            this.layout = this.measure(false);\n            this.layoutCorrected = createBox();\n            this.isLayoutDirty = false;\n            this.projectionDelta = undefined;\n            this.notifyListeners(\"measure\", this.layout.layoutBox);\n            const { visualElement } = this.options;\n            visualElement &&\n                visualElement.notify(\"LayoutMeasure\", this.layout.layoutBox, prevLayout ? prevLayout.layoutBox : undefined);\n        }\n        updateScroll(phase = \"measure\") {\n            let needsMeasurement = Boolean(this.options.layoutScroll && this.instance);\n            if (this.scroll &&\n                this.scroll.animationId === this.root.animationId &&\n                this.scroll.phase === phase) {\n                needsMeasurement = false;\n            }\n            if (needsMeasurement && this.instance) {\n                const isRoot = checkIsScrollRoot(this.instance);\n                this.scroll = {\n                    animationId: this.root.animationId,\n                    phase,\n                    isRoot,\n                    offset: measureScroll(this.instance),\n                    wasRoot: this.scroll ? this.scroll.isRoot : isRoot,\n                };\n            }\n        }\n        resetTransform() {\n            if (!resetTransform)\n                return;\n            const isResetRequested = this.isLayoutDirty ||\n                this.shouldResetTransform ||\n                this.options.alwaysMeasureLayout;\n            const hasProjection = this.projectionDelta && !isDeltaZero(this.projectionDelta);\n            const transformTemplate = this.getTransformTemplate();\n            const transformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            const transformTemplateHasChanged = transformTemplateValue !== this.prevTransformTemplateValue;\n            if (isResetRequested &&\n                this.instance &&\n                (hasProjection ||\n                    hasTransform(this.latestValues) ||\n                    transformTemplateHasChanged)) {\n                resetTransform(this.instance, transformTemplateValue);\n                this.shouldResetTransform = false;\n                this.scheduleRender();\n            }\n        }\n        measure(removeTransform = true) {\n            const pageBox = this.measurePageBox();\n            let layoutBox = this.removeElementScroll(pageBox);\n            /**\n             * Measurements taken during the pre-render stage\n             * still have transforms applied so we remove them\n             * via calculation.\n             */\n            if (removeTransform) {\n                layoutBox = this.removeTransform(layoutBox);\n            }\n            roundBox(layoutBox);\n            return {\n                animationId: this.root.animationId,\n                measuredBox: pageBox,\n                layoutBox,\n                latestValues: {},\n                source: this.id,\n            };\n        }\n        measurePageBox() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return createBox();\n            const box = visualElement.measureViewportBox();\n            const wasInScrollRoot = this.scroll?.wasRoot || this.path.some(checkNodeWasScrollRoot);\n            if (!wasInScrollRoot) {\n                // Remove viewport scroll to give page-relative coordinates\n                const { scroll } = this.root;\n                if (scroll) {\n                    translateAxis(box.x, scroll.offset.x);\n                    translateAxis(box.y, scroll.offset.y);\n                }\n            }\n            return box;\n        }\n        removeElementScroll(box) {\n            const boxWithoutScroll = createBox();\n            copyBoxInto(boxWithoutScroll, box);\n            if (this.scroll?.wasRoot) {\n                return boxWithoutScroll;\n            }\n            /**\n             * Performance TODO: Keep a cumulative scroll offset down the tree\n             * rather than loop back up the path.\n             */\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                const { scroll, options } = node;\n                if (node !== this.root && scroll && options.layoutScroll) {\n                    /**\n                     * If this is a new scroll root, we want to remove all previous scrolls\n                     * from the viewport box.\n                     */\n                    if (scroll.wasRoot) {\n                        copyBoxInto(boxWithoutScroll, box);\n                    }\n                    translateAxis(boxWithoutScroll.x, scroll.offset.x);\n                    translateAxis(boxWithoutScroll.y, scroll.offset.y);\n                }\n            }\n            return boxWithoutScroll;\n        }\n        applyTransform(box, transformOnly = false) {\n            const withTransforms = createBox();\n            copyBoxInto(withTransforms, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!transformOnly &&\n                    node.options.layoutScroll &&\n                    node.scroll &&\n                    node !== node.root) {\n                    transformBox(withTransforms, {\n                        x: -node.scroll.offset.x,\n                        y: -node.scroll.offset.y,\n                    });\n                }\n                if (!hasTransform(node.latestValues))\n                    continue;\n                transformBox(withTransforms, node.latestValues);\n            }\n            if (hasTransform(this.latestValues)) {\n                transformBox(withTransforms, this.latestValues);\n            }\n            return withTransforms;\n        }\n        removeTransform(box) {\n            const boxWithoutTransform = createBox();\n            copyBoxInto(boxWithoutTransform, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!node.instance)\n                    continue;\n                if (!hasTransform(node.latestValues))\n                    continue;\n                hasScale(node.latestValues) && node.updateSnapshot();\n                const sourceBox = createBox();\n                const nodeBox = node.measurePageBox();\n                copyBoxInto(sourceBox, nodeBox);\n                removeBoxTransforms(boxWithoutTransform, node.latestValues, node.snapshot ? node.snapshot.layoutBox : undefined, sourceBox);\n            }\n            if (hasTransform(this.latestValues)) {\n                removeBoxTransforms(boxWithoutTransform, this.latestValues);\n            }\n            return boxWithoutTransform;\n        }\n        setTargetDelta(delta) {\n            this.targetDelta = delta;\n            this.root.scheduleUpdateProjection();\n            this.isProjectionDirty = true;\n        }\n        setOptions(options) {\n            this.options = {\n                ...this.options,\n                ...options,\n                crossfade: options.crossfade !== undefined ? options.crossfade : true,\n            };\n        }\n        clearMeasurements() {\n            this.scroll = undefined;\n            this.layout = undefined;\n            this.snapshot = undefined;\n            this.prevTransformTemplateValue = undefined;\n            this.targetDelta = undefined;\n            this.target = undefined;\n            this.isLayoutDirty = false;\n        }\n        forceRelativeParentToResolveTarget() {\n            if (!this.relativeParent)\n                return;\n            /**\n             * If the parent target isn't up-to-date, force it to update.\n             * This is an unfortunate de-optimisation as it means any updating relative\n             * projection will cause all the relative parents to recalculate back\n             * up the tree.\n             */\n            if (this.relativeParent.resolvedRelativeTargetAt !==\n                frameData.timestamp) {\n                this.relativeParent.resolveTargetDelta(true);\n            }\n        }\n        resolveTargetDelta(forceRecalculation = false) {\n            /**\n             * Once the dirty status of nodes has been spread through the tree, we also\n             * need to check if we have a shared node of a different depth that has itself\n             * been dirtied.\n             */\n            const lead = this.getLead();\n            this.isProjectionDirty || (this.isProjectionDirty = lead.isProjectionDirty);\n            this.isTransformDirty || (this.isTransformDirty = lead.isTransformDirty);\n            this.isSharedProjectionDirty || (this.isSharedProjectionDirty = lead.isSharedProjectionDirty);\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            /**\n             * We don't use transform for this step of processing so we don't\n             * need to check whether any nodes have changed transform.\n             */\n            const canSkip = !(forceRecalculation ||\n                (isShared && this.isSharedProjectionDirty) ||\n                this.isProjectionDirty ||\n                this.parent?.isProjectionDirty ||\n                this.attemptToResolveRelativeTarget ||\n                this.root.updateBlockedByResize);\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If we have no layout, we can't perform projection, so early return\n             */\n            if (!this.layout || !(layout || layoutId))\n                return;\n            this.resolvedRelativeTargetAt = frameData.timestamp;\n            /**\n             * If we don't have a targetDelta but do have a layout, we can attempt to resolve\n             * a relativeParent. This will allow a component to perform scale correction\n             * even if no animation has started.\n             */\n            if (!this.targetDelta && !this.relativeTarget) {\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    relativeParent.layout &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.layout.layoutBox, relativeParent.layout.layoutBox);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * If we have no relative target or no target delta our target isn't valid\n             * for this frame.\n             */\n            if (!this.relativeTarget && !this.targetDelta)\n                return;\n            /**\n             * Lazy-init target data structure\n             */\n            if (!this.target) {\n                this.target = createBox();\n                this.targetWithTransforms = createBox();\n            }\n            /**\n             * If we've got a relative box for this component, resolve it into a target relative to the parent.\n             */\n            if (this.relativeTarget &&\n                this.relativeTargetOrigin &&\n                this.relativeParent &&\n                this.relativeParent.target) {\n                this.forceRelativeParentToResolveTarget();\n                calcRelativeBox(this.target, this.relativeTarget, this.relativeParent.target);\n                /**\n                 * If we've only got a targetDelta, resolve it into a target\n                 */\n            }\n            else if (this.targetDelta) {\n                if (Boolean(this.resumingFrom)) {\n                    // TODO: This is creating a new object every frame\n                    this.target = this.applyTransform(this.layout.layoutBox);\n                }\n                else {\n                    copyBoxInto(this.target, this.layout.layoutBox);\n                }\n                applyBoxDelta(this.target, this.targetDelta);\n            }\n            else {\n                /**\n                 * If no target, use own layout as target\n                 */\n                copyBoxInto(this.target, this.layout.layoutBox);\n            }\n            /**\n             * If we've been told to attempt to resolve a relative target, do so.\n             */\n            if (this.attemptToResolveRelativeTarget) {\n                this.attemptToResolveRelativeTarget = false;\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    Boolean(relativeParent.resumingFrom) ===\n                        Boolean(this.resumingFrom) &&\n                    !relativeParent.options.layoutScroll &&\n                    relativeParent.target &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.target, relativeParent.target);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * Increase debug counter for resolved target deltas\n             */\n            if (statsBuffer.value) {\n                metrics.calculatedTargetDeltas++;\n            }\n        }\n        getClosestProjectingParent() {\n            if (!this.parent ||\n                hasScale(this.parent.latestValues) ||\n                has2DTranslate(this.parent.latestValues)) {\n                return undefined;\n            }\n            if (this.parent.isProjecting()) {\n                return this.parent;\n            }\n            else {\n                return this.parent.getClosestProjectingParent();\n            }\n        }\n        isProjecting() {\n            return Boolean((this.relativeTarget ||\n                this.targetDelta ||\n                this.options.layoutRoot) &&\n                this.layout);\n        }\n        calcProjection() {\n            const lead = this.getLead();\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            let canSkip = true;\n            /**\n             * If this is a normal layout animation and neither this node nor its nearest projecting\n             * is dirty then we can't skip.\n             */\n            if (this.isProjectionDirty || this.parent?.isProjectionDirty) {\n                canSkip = false;\n            }\n            /**\n             * If this is a shared layout animation and this node's shared projection is dirty then\n             * we can't skip.\n             */\n            if (isShared &&\n                (this.isSharedProjectionDirty || this.isTransformDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If we have resolved the target this frame we must recalculate the\n             * projection to ensure it visually represents the internal calculations.\n             */\n            if (this.resolvedRelativeTargetAt === frameData.timestamp) {\n                canSkip = false;\n            }\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If this section of the tree isn't animating we can\n             * delete our target sources for the following frame.\n             */\n            this.isTreeAnimating = Boolean((this.parent && this.parent.isTreeAnimating) ||\n                this.currentAnimation ||\n                this.pendingAnimation);\n            if (!this.isTreeAnimating) {\n                this.targetDelta = this.relativeTarget = undefined;\n            }\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * Reset the corrected box with the latest values from box, as we're then going\n             * to perform mutative operations on it.\n             */\n            copyBoxInto(this.layoutCorrected, this.layout.layoutBox);\n            /**\n             * Record previous tree scales before updating.\n             */\n            const prevTreeScaleX = this.treeScale.x;\n            const prevTreeScaleY = this.treeScale.y;\n            /**\n             * Apply all the parent deltas to this box to produce the corrected box. This\n             * is the layout box, as it will appear on screen as a result of the transforms of its parents.\n             */\n            applyTreeDeltas(this.layoutCorrected, this.treeScale, this.path, isShared);\n            /**\n             * If this layer needs to perform scale correction but doesn't have a target,\n             * use the layout as the target.\n             */\n            if (lead.layout &&\n                !lead.target &&\n                (this.treeScale.x !== 1 || this.treeScale.y !== 1)) {\n                lead.target = lead.layout.layoutBox;\n                lead.targetWithTransforms = createBox();\n            }\n            const { target } = lead;\n            if (!target) {\n                /**\n                 * If we don't have a target to project into, but we were previously\n                 * projecting, we want to remove the stored transform and schedule\n                 * a render to ensure the elements reflect the removed transform.\n                 */\n                if (this.prevProjectionDelta) {\n                    this.createProjectionDeltas();\n                    this.scheduleRender();\n                }\n                return;\n            }\n            if (!this.projectionDelta || !this.prevProjectionDelta) {\n                this.createProjectionDeltas();\n            }\n            else {\n                copyAxisDeltaInto(this.prevProjectionDelta.x, this.projectionDelta.x);\n                copyAxisDeltaInto(this.prevProjectionDelta.y, this.projectionDelta.y);\n            }\n            /**\n             * Update the delta between the corrected box and the target box before user-set transforms were applied.\n             * This will allow us to calculate the corrected borderRadius and boxShadow to compensate\n             * for our layout reprojection, but still allow them to be scaled correctly by the user.\n             * It might be that to simplify this we may want to accept that user-set scale is also corrected\n             * and we wouldn't have to keep and calc both deltas, OR we could support a user setting\n             * to allow people to choose whether these styles are corrected based on just the\n             * layout reprojection or the final bounding box.\n             */\n            calcBoxDelta(this.projectionDelta, this.layoutCorrected, target, this.latestValues);\n            if (this.treeScale.x !== prevTreeScaleX ||\n                this.treeScale.y !== prevTreeScaleY ||\n                !axisDeltaEquals(this.projectionDelta.x, this.prevProjectionDelta.x) ||\n                !axisDeltaEquals(this.projectionDelta.y, this.prevProjectionDelta.y)) {\n                this.hasProjected = true;\n                this.scheduleRender();\n                this.notifyListeners(\"projectionUpdate\", target);\n            }\n            /**\n             * Increase debug counter for recalculated projections\n             */\n            if (statsBuffer.value) {\n                metrics.calculatedProjections++;\n            }\n        }\n        hide() {\n            this.isVisible = false;\n            // TODO: Schedule render\n        }\n        show() {\n            this.isVisible = true;\n            // TODO: Schedule render\n        }\n        scheduleRender(notifyAll = true) {\n            this.options.visualElement?.scheduleRender();\n            if (notifyAll) {\n                const stack = this.getStack();\n                stack && stack.scheduleRender();\n            }\n            if (this.resumingFrom && !this.resumingFrom.instance) {\n                this.resumingFrom = undefined;\n            }\n        }\n        createProjectionDeltas() {\n            this.prevProjectionDelta = createDelta();\n            this.projectionDelta = createDelta();\n            this.projectionDeltaWithTransform = createDelta();\n        }\n        setAnimationOrigin(delta, hasOnlyRelativeTargetChanged = false) {\n            const snapshot = this.snapshot;\n            const snapshotLatestValues = snapshot ? snapshot.latestValues : {};\n            const mixedValues = { ...this.latestValues };\n            const targetDelta = createDelta();\n            if (!this.relativeParent ||\n                !this.relativeParent.options.layoutRoot) {\n                this.relativeTarget = this.relativeTargetOrigin = undefined;\n            }\n            this.attemptToResolveRelativeTarget = !hasOnlyRelativeTargetChanged;\n            const relativeLayout = createBox();\n            const snapshotSource = snapshot ? snapshot.source : undefined;\n            const layoutSource = this.layout ? this.layout.source : undefined;\n            const isSharedLayoutAnimation = snapshotSource !== layoutSource;\n            const stack = this.getStack();\n            const isOnlyMember = !stack || stack.members.length <= 1;\n            const shouldCrossfadeOpacity = Boolean(isSharedLayoutAnimation &&\n                !isOnlyMember &&\n                this.options.crossfade === true &&\n                !this.path.some(hasOpacityCrossfade));\n            this.animationProgress = 0;\n            let prevRelativeTarget;\n            this.mixTargetDelta = (latest) => {\n                const progress = latest / 1000;\n                mixAxisDelta(targetDelta.x, delta.x, progress);\n                mixAxisDelta(targetDelta.y, delta.y, progress);\n                this.setTargetDelta(targetDelta);\n                if (this.relativeTarget &&\n                    this.relativeTargetOrigin &&\n                    this.layout &&\n                    this.relativeParent &&\n                    this.relativeParent.layout) {\n                    calcRelativePosition(relativeLayout, this.layout.layoutBox, this.relativeParent.layout.layoutBox);\n                    mixBox(this.relativeTarget, this.relativeTargetOrigin, relativeLayout, progress);\n                    /**\n                     * If this is an unchanged relative target we can consider the\n                     * projection not dirty.\n                     */\n                    if (prevRelativeTarget &&\n                        boxEquals(this.relativeTarget, prevRelativeTarget)) {\n                        this.isProjectionDirty = false;\n                    }\n                    if (!prevRelativeTarget)\n                        prevRelativeTarget = createBox();\n                    copyBoxInto(prevRelativeTarget, this.relativeTarget);\n                }\n                if (isSharedLayoutAnimation) {\n                    this.animationValues = mixedValues;\n                    mixValues(mixedValues, snapshotLatestValues, this.latestValues, progress, shouldCrossfadeOpacity, isOnlyMember);\n                }\n                this.root.scheduleUpdateProjection();\n                this.scheduleRender();\n                this.animationProgress = progress;\n            };\n            this.mixTargetDelta(this.options.layoutRoot ? 1000 : 0);\n        }\n        startAnimation(options) {\n            this.notifyListeners(\"animationStart\");\n            this.currentAnimation?.stop();\n            this.resumingFrom?.currentAnimation?.stop();\n            if (this.pendingAnimation) {\n                cancelFrame(this.pendingAnimation);\n                this.pendingAnimation = undefined;\n            }\n            /**\n             * Start the animation in the next frame to have a frame with progress 0,\n             * where the target is the same as when the animation started, so we can\n             * calculate the relative positions correctly for instant transitions.\n             */\n            this.pendingAnimation = frame.update(() => {\n                globalProjectionState.hasAnimatedSinceResize = true;\n                activeAnimations.layout++;\n                this.motionValue || (this.motionValue = motionValue(0));\n                this.currentAnimation = animateSingleValue(this.motionValue, [0, 1000], {\n                    ...options,\n                    isSync: true,\n                    onUpdate: (latest) => {\n                        this.mixTargetDelta(latest);\n                        options.onUpdate && options.onUpdate(latest);\n                    },\n                    onStop: () => {\n                        activeAnimations.layout--;\n                    },\n                    onComplete: () => {\n                        activeAnimations.layout--;\n                        options.onComplete && options.onComplete();\n                        this.completeAnimation();\n                    },\n                });\n                if (this.resumingFrom) {\n                    this.resumingFrom.currentAnimation = this.currentAnimation;\n                }\n                this.pendingAnimation = undefined;\n            });\n        }\n        completeAnimation() {\n            if (this.resumingFrom) {\n                this.resumingFrom.currentAnimation = undefined;\n                this.resumingFrom.preserveOpacity = undefined;\n            }\n            const stack = this.getStack();\n            stack && stack.exitAnimationComplete();\n            this.resumingFrom =\n                this.currentAnimation =\n                    this.animationValues =\n                        undefined;\n            this.notifyListeners(\"animationComplete\");\n        }\n        finishAnimation() {\n            if (this.currentAnimation) {\n                this.mixTargetDelta && this.mixTargetDelta(animationTarget);\n                this.currentAnimation.stop();\n            }\n            this.completeAnimation();\n        }\n        applyTransformsToTarget() {\n            const lead = this.getLead();\n            let { targetWithTransforms, target, layout, latestValues } = lead;\n            if (!targetWithTransforms || !target || !layout)\n                return;\n            /**\n             * If we're only animating position, and this element isn't the lead element,\n             * then instead of projecting into the lead box we instead want to calculate\n             * a new target that aligns the two boxes but maintains the layout shape.\n             */\n            if (this !== lead &&\n                this.layout &&\n                layout &&\n                shouldAnimatePositionOnly(this.options.animationType, this.layout.layoutBox, layout.layoutBox)) {\n                target = this.target || createBox();\n                const xLength = calcLength(this.layout.layoutBox.x);\n                target.x.min = lead.target.x.min;\n                target.x.max = target.x.min + xLength;\n                const yLength = calcLength(this.layout.layoutBox.y);\n                target.y.min = lead.target.y.min;\n                target.y.max = target.y.min + yLength;\n            }\n            copyBoxInto(targetWithTransforms, target);\n            /**\n             * Apply the latest user-set transforms to the targetBox to produce the targetBoxFinal.\n             * This is the final box that we will then project into by calculating a transform delta and\n             * applying it to the corrected box.\n             */\n            transformBox(targetWithTransforms, latestValues);\n            /**\n             * Update the delta between the corrected box and the final target box, after\n             * user-set transforms are applied to it. This will be used by the renderer to\n             * create a transform style that will reproject the element from its layout layout\n             * into the desired bounding box.\n             */\n            calcBoxDelta(this.projectionDeltaWithTransform, this.layoutCorrected, targetWithTransforms, latestValues);\n        }\n        registerSharedNode(layoutId, node) {\n            if (!this.sharedNodes.has(layoutId)) {\n                this.sharedNodes.set(layoutId, new NodeStack());\n            }\n            const stack = this.sharedNodes.get(layoutId);\n            stack.add(node);\n            const config = node.options.initialPromotionConfig;\n            node.promote({\n                transition: config ? config.transition : undefined,\n                preserveFollowOpacity: config && config.shouldPreserveFollowOpacity\n                    ? config.shouldPreserveFollowOpacity(node)\n                    : undefined,\n            });\n        }\n        isLead() {\n            const stack = this.getStack();\n            return stack ? stack.lead === this : true;\n        }\n        getLead() {\n            const { layoutId } = this.options;\n            return layoutId ? this.getStack()?.lead || this : this;\n        }\n        getPrevLead() {\n            const { layoutId } = this.options;\n            return layoutId ? this.getStack()?.prevLead : undefined;\n        }\n        getStack() {\n            const { layoutId } = this.options;\n            if (layoutId)\n                return this.root.sharedNodes.get(layoutId);\n        }\n        promote({ needsReset, transition, preserveFollowOpacity, } = {}) {\n            const stack = this.getStack();\n            if (stack)\n                stack.promote(this, preserveFollowOpacity);\n            if (needsReset) {\n                this.projectionDelta = undefined;\n                this.needsReset = true;\n            }\n            if (transition)\n                this.setOptions({ transition });\n        }\n        relegate() {\n            const stack = this.getStack();\n            if (stack) {\n                return stack.relegate(this);\n            }\n            else {\n                return false;\n            }\n        }\n        resetSkewAndRotation() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return;\n            // If there's no detected skew or rotation values, we can early return without a forced render.\n            let hasDistortingTransform = false;\n            /**\n             * An unrolled check for rotation values. Most elements don't have any rotation and\n             * skipping the nested loop and new object creation is 50% faster.\n             */\n            const { latestValues } = visualElement;\n            if (latestValues.z ||\n                latestValues.rotate ||\n                latestValues.rotateX ||\n                latestValues.rotateY ||\n                latestValues.rotateZ ||\n                latestValues.skewX ||\n                latestValues.skewY) {\n                hasDistortingTransform = true;\n            }\n            // If there's no distorting values, we don't need to do any more.\n            if (!hasDistortingTransform)\n                return;\n            const resetValues = {};\n            if (latestValues.z) {\n                resetDistortingTransform(\"z\", visualElement, resetValues, this.animationValues);\n            }\n            // Check the skew and rotate value of all axes and reset to 0\n            for (let i = 0; i < transformAxes.length; i++) {\n                resetDistortingTransform(`rotate${transformAxes[i]}`, visualElement, resetValues, this.animationValues);\n                resetDistortingTransform(`skew${transformAxes[i]}`, visualElement, resetValues, this.animationValues);\n            }\n            // Force a render of this element to apply the transform with all skews and rotations\n            // set to 0.\n            visualElement.render();\n            // Put back all the values we reset\n            for (const key in resetValues) {\n                visualElement.setStaticValue(key, resetValues[key]);\n                if (this.animationValues) {\n                    this.animationValues[key] = resetValues[key];\n                }\n            }\n            // Schedule a render for the next frame. This ensures we won't visually\n            // see the element with the reset rotate value applied.\n            visualElement.scheduleRender();\n        }\n        getProjectionStyles(styleProp) {\n            if (!this.instance || this.isSVG)\n                return undefined;\n            if (!this.isVisible) {\n                return hiddenVisibility;\n            }\n            const styles = {\n                visibility: \"\",\n            };\n            const transformTemplate = this.getTransformTemplate();\n            if (this.needsReset) {\n                this.needsReset = false;\n                styles.opacity = \"\";\n                styles.pointerEvents =\n                    resolveMotionValue(styleProp?.pointerEvents) || \"\";\n                styles.transform = transformTemplate\n                    ? transformTemplate(this.latestValues, \"\")\n                    : \"none\";\n                return styles;\n            }\n            const lead = this.getLead();\n            if (!this.projectionDelta || !this.layout || !lead.target) {\n                const emptyStyles = {};\n                if (this.options.layoutId) {\n                    emptyStyles.opacity =\n                        this.latestValues.opacity !== undefined\n                            ? this.latestValues.opacity\n                            : 1;\n                    emptyStyles.pointerEvents =\n                        resolveMotionValue(styleProp?.pointerEvents) || \"\";\n                }\n                if (this.hasProjected && !hasTransform(this.latestValues)) {\n                    emptyStyles.transform = transformTemplate\n                        ? transformTemplate({}, \"\")\n                        : \"none\";\n                    this.hasProjected = false;\n                }\n                return emptyStyles;\n            }\n            const valuesToRender = lead.animationValues || lead.latestValues;\n            this.applyTransformsToTarget();\n            styles.transform = buildProjectionTransform(this.projectionDeltaWithTransform, this.treeScale, valuesToRender);\n            if (transformTemplate) {\n                styles.transform = transformTemplate(valuesToRender, styles.transform);\n            }\n            const { x, y } = this.projectionDelta;\n            styles.transformOrigin = `${x.origin * 100}% ${y.origin * 100}% 0`;\n            if (lead.animationValues) {\n                /**\n                 * If the lead component is animating, assign this either the entering/leaving\n                 * opacity\n                 */\n                styles.opacity =\n                    lead === this\n                        ? valuesToRender.opacity ??\n                            this.latestValues.opacity ??\n                            1\n                        : this.preserveOpacity\n                            ? this.latestValues.opacity\n                            : valuesToRender.opacityExit;\n            }\n            else {\n                /**\n                 * Or we're not animating at all, set the lead component to its layout\n                 * opacity and other components to hidden.\n                 */\n                styles.opacity =\n                    lead === this\n                        ? valuesToRender.opacity !== undefined\n                            ? valuesToRender.opacity\n                            : \"\"\n                        : valuesToRender.opacityExit !== undefined\n                            ? valuesToRender.opacityExit\n                            : 0;\n            }\n            /**\n             * Apply scale correction\n             */\n            for (const key in scaleCorrectors) {\n                if (valuesToRender[key] === undefined)\n                    continue;\n                const { correct, applyTo, isCSSVariable } = scaleCorrectors[key];\n                /**\n                 * Only apply scale correction to the value if we have an\n                 * active projection transform. Otherwise these values become\n                 * vulnerable to distortion if the element changes size without\n                 * a corresponding layout animation.\n                 */\n                const corrected = styles.transform === \"none\"\n                    ? valuesToRender[key]\n                    : correct(valuesToRender[key], lead);\n                if (applyTo) {\n                    const num = applyTo.length;\n                    for (let i = 0; i < num; i++) {\n                        styles[applyTo[i]] = corrected;\n                    }\n                }\n                else {\n                    // If this is a CSS variable, set it directly on the instance.\n                    // Replacing this function from creating styles to setting them\n                    // would be a good place to remove per frame object creation\n                    if (isCSSVariable) {\n                        this.options.visualElement.renderState.vars[key] = corrected;\n                    }\n                    else {\n                        styles[key] = corrected;\n                    }\n                }\n            }\n            /**\n             * Disable pointer events on follow components. This is to ensure\n             * that if a follow component covers a lead component it doesn't block\n             * pointer events on the lead.\n             */\n            if (this.options.layoutId) {\n                styles.pointerEvents =\n                    lead === this\n                        ? resolveMotionValue(styleProp?.pointerEvents) || \"\"\n                        : \"none\";\n            }\n            return styles;\n        }\n        clearSnapshot() {\n            this.resumeFrom = this.snapshot = undefined;\n        }\n        // Only run on root\n        resetTree() {\n            this.root.nodes.forEach((node) => node.currentAnimation?.stop());\n            this.root.nodes.forEach(clearMeasurements);\n            this.root.sharedNodes.clear();\n        }\n    };\n}\nfunction updateLayout(node) {\n    node.updateLayout();\n}\nfunction notifyLayoutUpdate(node) {\n    const snapshot = node.resumeFrom?.snapshot || node.snapshot;\n    if (node.isLead() &&\n        node.layout &&\n        snapshot &&\n        node.hasListeners(\"didUpdate\")) {\n        const { layoutBox: layout, measuredBox: measuredLayout } = node.layout;\n        const { animationType } = node.options;\n        const isShared = snapshot.source !== node.layout.source;\n        // TODO Maybe we want to also resize the layout snapshot so we don't trigger\n        // animations for instance if layout=\"size\" and an element has only changed position\n        if (animationType === \"size\") {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(axisSnapshot);\n                axisSnapshot.min = layout[axis].min;\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        else if (shouldAnimatePositionOnly(animationType, snapshot.layoutBox, layout)) {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(layout[axis]);\n                axisSnapshot.max = axisSnapshot.min + length;\n                /**\n                 * Ensure relative target gets resized and rerendererd\n                 */\n                if (node.relativeTarget && !node.currentAnimation) {\n                    node.isProjectionDirty = true;\n                    node.relativeTarget[axis].max =\n                        node.relativeTarget[axis].min + length;\n                }\n            });\n        }\n        const layoutDelta = createDelta();\n        calcBoxDelta(layoutDelta, layout, snapshot.layoutBox);\n        const visualDelta = createDelta();\n        if (isShared) {\n            calcBoxDelta(visualDelta, node.applyTransform(measuredLayout, true), snapshot.measuredBox);\n        }\n        else {\n            calcBoxDelta(visualDelta, layout, snapshot.layoutBox);\n        }\n        const hasLayoutChanged = !isDeltaZero(layoutDelta);\n        let hasRelativeLayoutChanged = false;\n        if (!node.resumeFrom) {\n            const relativeParent = node.getClosestProjectingParent();\n            /**\n             * If the relativeParent is itself resuming from a different element then\n             * the relative snapshot is not relavent\n             */\n            if (relativeParent && !relativeParent.resumeFrom) {\n                const { snapshot: parentSnapshot, layout: parentLayout } = relativeParent;\n                if (parentSnapshot && parentLayout) {\n                    const relativeSnapshot = createBox();\n                    calcRelativePosition(relativeSnapshot, snapshot.layoutBox, parentSnapshot.layoutBox);\n                    const relativeLayout = createBox();\n                    calcRelativePosition(relativeLayout, layout, parentLayout.layoutBox);\n                    if (!boxEqualsRounded(relativeSnapshot, relativeLayout)) {\n                        hasRelativeLayoutChanged = true;\n                    }\n                    if (relativeParent.options.layoutRoot) {\n                        node.relativeTarget = relativeLayout;\n                        node.relativeTargetOrigin = relativeSnapshot;\n                        node.relativeParent = relativeParent;\n                    }\n                }\n            }\n        }\n        node.notifyListeners(\"didUpdate\", {\n            layout,\n            snapshot,\n            delta: visualDelta,\n            layoutDelta,\n            hasLayoutChanged,\n            hasRelativeLayoutChanged,\n        });\n    }\n    else if (node.isLead()) {\n        const { onExitComplete } = node.options;\n        onExitComplete && onExitComplete();\n    }\n    /**\n     * Clearing transition\n     * TODO: Investigate why this transition is being passed in as {type: false } from Framer\n     * and why we need it at all\n     */\n    node.options.transition = undefined;\n}\nfunction propagateDirtyNodes(node) {\n    /**\n     * Increase debug counter for nodes encountered this frame\n     */\n    if (statsBuffer.value) {\n        metrics.nodes++;\n    }\n    if (!node.parent)\n        return;\n    /**\n     * If this node isn't projecting, propagate isProjectionDirty. It will have\n     * no performance impact but it will allow the next child that *is* projecting\n     * but *isn't* dirty to just check its parent to see if *any* ancestor needs\n     * correcting.\n     */\n    if (!node.isProjecting()) {\n        node.isProjectionDirty = node.parent.isProjectionDirty;\n    }\n    /**\n     * Propagate isSharedProjectionDirty and isTransformDirty\n     * throughout the whole tree. A future revision can take another look at\n     * this but for safety we still recalcualte shared nodes.\n     */\n    node.isSharedProjectionDirty || (node.isSharedProjectionDirty = Boolean(node.isProjectionDirty ||\n        node.parent.isProjectionDirty ||\n        node.parent.isSharedProjectionDirty));\n    node.isTransformDirty || (node.isTransformDirty = node.parent.isTransformDirty);\n}\nfunction cleanDirtyNodes(node) {\n    node.isProjectionDirty =\n        node.isSharedProjectionDirty =\n            node.isTransformDirty =\n                false;\n}\nfunction clearSnapshot(node) {\n    node.clearSnapshot();\n}\nfunction clearMeasurements(node) {\n    node.clearMeasurements();\n}\nfunction clearIsLayoutDirty(node) {\n    node.isLayoutDirty = false;\n}\nfunction resetTransformStyle(node) {\n    const { visualElement } = node.options;\n    if (visualElement && visualElement.getProps().onBeforeLayoutMeasure) {\n        visualElement.notify(\"BeforeLayoutMeasure\");\n    }\n    node.resetTransform();\n}\nfunction finishAnimation(node) {\n    node.finishAnimation();\n    node.targetDelta = node.relativeTarget = node.target = undefined;\n    node.isProjectionDirty = true;\n}\nfunction resolveTargetDelta(node) {\n    node.resolveTargetDelta();\n}\nfunction calcProjection(node) {\n    node.calcProjection();\n}\nfunction resetSkewAndRotation(node) {\n    node.resetSkewAndRotation();\n}\nfunction removeLeadSnapshots(stack) {\n    stack.removeLeadSnapshot();\n}\nfunction mixAxisDelta(output, delta, p) {\n    output.translate = mixNumber(delta.translate, 0, p);\n    output.scale = mixNumber(delta.scale, 1, p);\n    output.origin = delta.origin;\n    output.originPoint = delta.originPoint;\n}\nfunction mixAxis(output, from, to, p) {\n    output.min = mixNumber(from.min, to.min, p);\n    output.max = mixNumber(from.max, to.max, p);\n}\nfunction mixBox(output, from, to, p) {\n    mixAxis(output.x, from.x, to.x, p);\n    mixAxis(output.y, from.y, to.y, p);\n}\nfunction hasOpacityCrossfade(node) {\n    return (node.animationValues && node.animationValues.opacityExit !== undefined);\n}\nconst defaultLayoutTransition = {\n    duration: 0.45,\n    ease: [0.4, 0, 0.1, 1],\n};\nconst userAgentContains = (string) => typeof navigator !== \"undefined\" &&\n    navigator.userAgent &&\n    navigator.userAgent.toLowerCase().includes(string);\n/**\n * Measured bounding boxes must be rounded in Safari and\n * left untouched in Chrome, otherwise non-integer layouts within scaled-up elements\n * can appear to jump.\n */\nconst roundPoint = userAgentContains(\"applewebkit/\") && !userAgentContains(\"chrome/\")\n    ? Math.round\n    : noop;\nfunction roundAxis(axis) {\n    // Round to the nearest .5 pixels to support subpixel layouts\n    axis.min = roundPoint(axis.min);\n    axis.max = roundPoint(axis.max);\n}\nfunction roundBox(box) {\n    roundAxis(box.x);\n    roundAxis(box.y);\n}\nfunction shouldAnimatePositionOnly(animationType, snapshot, layout) {\n    return (animationType === \"position\" ||\n        (animationType === \"preserve-aspect\" &&\n            !isNear(aspectRatio(snapshot), aspectRatio(layout), 0.2)));\n}\nfunction checkNodeWasScrollRoot(node) {\n    return node !== node.root && node.scroll?.wasRoot;\n}\n\nexport { cleanDirtyNodes, createProjectionNode, mixAxis, mixAxisDelta, mixBox, propagateDirtyNodes };\n","function buildProjectionTransform(delta, treeScale, latestTransform) {\n    let transform = \"\";\n    /**\n     * The translations we use to calculate are always relative to the viewport coordinate space.\n     * But when we apply scales, we also scale the coordinate space of an element and its children.\n     * For instance if we have a treeScale (the culmination of all parent scales) of 0.5 and we need\n     * to move an element 100 pixels, we actually need to move it 200 in within that scaled space.\n     */\n    const xTranslate = delta.x.translate / treeScale.x;\n    const yTranslate = delta.y.translate / treeScale.y;\n    const zTranslate = latestTransform?.z || 0;\n    if (xTranslate || yTranslate || zTranslate) {\n        transform = `translate3d(${xTranslate}px, ${yTranslate}px, ${zTranslate}px) `;\n    }\n    /**\n     * Apply scale correction for the tree transform.\n     * This will apply scale to the screen-orientated axes.\n     */\n    if (treeScale.x !== 1 || treeScale.y !== 1) {\n        transform += `scale(${1 / treeScale.x}, ${1 / treeScale.y}) `;\n    }\n    if (latestTransform) {\n        const { transformPerspective, rotate, rotateX, rotateY, skewX, skewY } = latestTransform;\n        if (transformPerspective)\n            transform = `perspective(${transformPerspective}px) ${transform}`;\n        if (rotate)\n            transform += `rotate(${rotate}deg) `;\n        if (rotateX)\n            transform += `rotateX(${rotateX}deg) `;\n        if (rotateY)\n            transform += `rotateY(${rotateY}deg) `;\n        if (skewX)\n            transform += `skewX(${skewX}deg) `;\n        if (skewY)\n            transform += `skewY(${skewY}deg) `;\n    }\n    /**\n     * Apply scale to match the size of the element to the size we want it.\n     * This will apply scale to the element-orientated axes.\n     */\n    const elementScaleX = delta.x.scale * treeScale.x;\n    const elementScaleY = delta.y.scale * treeScale.y;\n    if (elementScaleX !== 1 || elementScaleY !== 1) {\n        transform += `scale(${elementScaleX}, ${elementScaleY})`;\n    }\n    return transform || \"none\";\n}\n\nexport { buildProjectionTransform };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\n\nconst DocumentProjectionNode = createProjectionNode({\n    attachResizeListener: (ref, notify) => addDomEvent(ref, \"resize\", notify),\n    measureScroll: () => ({\n        x: document.documentElement.scrollLeft || document.body.scrollLeft,\n        y: document.documentElement.scrollTop || document.body.scrollTop,\n    }),\n    checkIsScrollRoot: () => true,\n});\n\nexport { DocumentProjectionNode };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { DocumentProjectionNode } from './DocumentProjectionNode.mjs';\n\nconst rootProjectionNode = {\n    current: undefined,\n};\nconst HTMLProjectionNode = createProjectionNode({\n    measureScroll: (instance) => ({\n        x: instance.scrollLeft,\n        y: instance.scrollTop,\n    }),\n    defaultParent: () => {\n        if (!rootProjectionNode.current) {\n            const documentNode = new DocumentProjectionNode({});\n            documentNode.mount(window);\n            documentNode.setOptions({ layoutScroll: true });\n            rootProjectionNode.current = documentNode;\n        }\n        return rootProjectionNode.current;\n    },\n    resetTransform: (instance, value) => {\n        instance.style.transform = value !== undefined ? value : \"none\";\n    },\n    checkIsScrollRoot: (instance) => Boolean(window.getComputedStyle(instance).position === \"fixed\"),\n});\n\nexport { HTMLProjectionNode, rootProjectionNode };\n","import { DragGesture } from '../../gestures/drag/index.mjs';\nimport { PanGesture } from '../../gestures/pan/index.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\nimport { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\n\nconst drag = {\n    pan: {\n        Feature: PanGesture,\n    },\n    drag: {\n        Feature: DragGesture,\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { drag };\n","import { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from 'motion-utils';\nimport { VisualElementDragControls } from './VisualElementDragControls.mjs';\n\nclass DragGesture extends Feature {\n    constructor(node) {\n        super(node);\n        this.removeGroupControls = noop;\n        this.removeListeners = noop;\n        this.controls = new VisualElementDragControls(node);\n    }\n    mount() {\n        // If we've been provided a DragControls for manual control over the drag gesture,\n        // subscribe this component to it on mount.\n        const { dragControls } = this.node.getProps();\n        if (dragControls) {\n            this.removeGroupControls = dragControls.subscribe(this.controls);\n        }\n        this.removeListeners = this.controls.addListeners() || noop;\n    }\n    unmount() {\n        this.removeGroupControls();\n        this.removeListeners();\n    }\n}\n\nexport { DragGesture };\n","import { resolveElements } from '../../utils/resolve-elements.mjs';\n\nfunction setupGesture(elementOrSelector, options) {\n    const elements = resolveElements(elementOrSelector);\n    const gestureAbortController = new AbortController();\n    const eventOptions = {\n        passive: true,\n        ...options,\n        signal: gestureAbortController.signal,\n    };\n    const cancel = () => gestureAbortController.abort();\n    return [elements, eventOptions, cancel];\n}\n\nexport { setupGesture };\n","import { isDragActive } from './drag/state/is-active.mjs';\nimport { setupGesture } from './utils/setup.mjs';\n\nfunction isValidHover(event) {\n    return !(event.pointerType === \"touch\" || isDragActive());\n}\n/**\n * Create a hover gesture. hover() is different to .addEventListener(\"pointerenter\")\n * in that it has an easier syntax, filters out polyfilled touch events, interoperates\n * with drag gestures, and automatically removes the \"pointerennd\" event listener when the hover ends.\n *\n * @public\n */\nfunction hover(elementOrSelector, onHoverStart, options = {}) {\n    const [elements, eventOptions, cancel] = setupGesture(elementOrSelector, options);\n    const onPointerEnter = (enterEvent) => {\n        if (!isValidHover(enterEvent))\n            return;\n        const { target } = enterEvent;\n        const onHoverEnd = onHoverStart(target, enterEvent);\n        if (typeof onHoverEnd !== \"function\" || !target)\n            return;\n        const onPointerLeave = (leaveEvent) => {\n            if (!isValidHover(leaveEvent))\n                return;\n            onHoverEnd(leaveEvent);\n            target.removeEventListener(\"pointerleave\", onPointerLeave);\n        };\n        target.addEventListener(\"pointerleave\", onPointerLeave, eventOptions);\n    };\n    elements.forEach((element) => {\n        element.addEventListener(\"pointerenter\", onPointerEnter, eventOptions);\n    });\n    return cancel;\n}\n\nexport { hover };\n","import { hover, frame } from 'motion-dom';\nimport { extractEventInfo } from '../events/event-info.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\n\nfunction handleHoverEvent(node, event, lifecycle) {\n    const { props } = node;\n    if (node.animationState && props.whileHover) {\n        node.animationState.setActive(\"whileHover\", lifecycle === \"Start\");\n    }\n    const eventName = (\"onHover\" + lifecycle);\n    const callback = props[eventName];\n    if (callback) {\n        frame.postRender(() => callback(event, extractEventInfo(event)));\n    }\n}\nclass HoverGesture extends Feature {\n    mount() {\n        const { current } = this.node;\n        if (!current)\n            return;\n        this.unmount = hover(current, (_element, startEvent) => {\n            handleHoverEvent(this.node, startEvent, \"Start\");\n            return (endEvent) => handleHoverEvent(this.node, endEvent, \"End\");\n        });\n    }\n    unmount() { }\n}\n\nexport { HoverGesture };\n","/**\n * Recursively traverse up the tree to check whether the provided child node\n * is the parent or a descendant of it.\n *\n * @param parent - Element to find\n * @param child - Element to test against parent\n */\nconst isNodeOrChild = (parent, child) => {\n    if (!child) {\n        return false;\n    }\n    else if (parent === child) {\n        return true;\n    }\n    else {\n        return isNodeOrChild(parent, child.parentElement);\n    }\n};\n\nexport { isNodeOrChild };\n","const focusableElements = new Set([\n    \"BUTTON\",\n    \"INPUT\",\n    \"SELECT\",\n    \"TEXTAREA\",\n    \"A\",\n]);\nfunction isElementKeyboardAccessible(element) {\n    return (focusableElements.has(element.tagName) ||\n        element.tabIndex !== -1);\n}\n\nexport { isElementKeyboardAccessible };\n","const isPressing = new WeakSet();\n\nexport { isPressing };\n","import { isPressing } from './state.mjs';\n\n/**\n * Filter out events that are not \"Enter\" keys.\n */\nfunction filterEvents(callback) {\n    return (event) => {\n        if (event.key !== \"Enter\")\n            return;\n        callback(event);\n    };\n}\nfunction firePointerEvent(target, type) {\n    target.dispatchEvent(new PointerEvent(\"pointer\" + type, { isPrimary: true, bubbles: true }));\n}\nconst enableKeyboardPress = (focusEvent, eventOptions) => {\n    const element = focusEvent.currentTarget;\n    if (!element)\n        return;\n    const handleKeydown = filterEvents(() => {\n        if (isPressing.has(element))\n            return;\n        firePointerEvent(element, \"down\");\n        const handleKeyup = filterEvents(() => {\n            firePointerEvent(element, \"up\");\n        });\n        const handleBlur = () => firePointerEvent(element, \"cancel\");\n        element.addEventListener(\"keyup\", handleKeyup, eventOptions);\n        element.addEventListener(\"blur\", handleBlur, eventOptions);\n    });\n    element.addEventListener(\"keydown\", handleKeydown, eventOptions);\n    /**\n     * Add an event listener that fires on blur to remove the keydown events.\n     */\n    element.addEventListener(\"blur\", () => element.removeEventListener(\"keydown\", handleKeydown), eventOptions);\n};\n\nexport { enableKeyboardPress };\n","import { isHTMLElement } from '../../utils/is-html-element.mjs';\nimport { isDragActive } from '../drag/state/is-active.mjs';\nimport { isNodeOrChild } from '../utils/is-node-or-child.mjs';\nimport { isPrimaryPointer } from '../utils/is-primary-pointer.mjs';\nimport { setupGesture } from '../utils/setup.mjs';\nimport { isElementKeyboardAccessible } from './utils/is-keyboard-accessible.mjs';\nimport { enableKeyboardPress } from './utils/keyboard.mjs';\nimport { isPressing } from './utils/state.mjs';\n\n/**\n * Filter out events that are not primary pointer events, or are triggering\n * while a Motion gesture is active.\n */\nfunction isValidPressEvent(event) {\n    return isPrimaryPointer(event) && !isDragActive();\n}\n/**\n * Create a press gesture.\n *\n * Press is different to `\"pointerdown\"`, `\"pointerup\"` in that it\n * automatically filters out secondary pointer events like right\n * click and multitouch.\n *\n * It also adds accessibility support for keyboards, where\n * an element with a press gesture will receive focus and\n *  trigger on Enter `\"keydown\"` and `\"keyup\"` events.\n *\n * This is different to a browser's `\"click\"` event, which does\n * respond to keyboards but only for the `\"click\"` itself, rather\n * than the press start and end/cancel. The element also needs\n * to be focusable for this to work, whereas a press gesture will\n * make an element focusable by default.\n *\n * @public\n */\nfunction press(targetOrSelector, onPressStart, options = {}) {\n    const [targets, eventOptions, cancelEvents] = setupGesture(targetOrSelector, options);\n    const startPress = (startEvent) => {\n        const target = startEvent.currentTarget;\n        if (!isValidPressEvent(startEvent))\n            return;\n        isPressing.add(target);\n        const onPressEnd = onPressStart(target, startEvent);\n        const onPointerEnd = (endEvent, success) => {\n            window.removeEventListener(\"pointerup\", onPointerUp);\n            window.removeEventListener(\"pointercancel\", onPointerCancel);\n            if (isPressing.has(target)) {\n                isPressing.delete(target);\n            }\n            if (!isValidPressEvent(endEvent)) {\n                return;\n            }\n            if (typeof onPressEnd === \"function\") {\n                onPressEnd(endEvent, { success });\n            }\n        };\n        const onPointerUp = (upEvent) => {\n            onPointerEnd(upEvent, target === window ||\n                target === document ||\n                options.useGlobalTarget ||\n                isNodeOrChild(target, upEvent.target));\n        };\n        const onPointerCancel = (cancelEvent) => {\n            onPointerEnd(cancelEvent, false);\n        };\n        window.addEventListener(\"pointerup\", onPointerUp, eventOptions);\n        window.addEventListener(\"pointercancel\", onPointerCancel, eventOptions);\n    };\n    targets.forEach((target) => {\n        const pointerDownTarget = options.useGlobalTarget ? window : target;\n        pointerDownTarget.addEventListener(\"pointerdown\", startPress, eventOptions);\n        if (isHTMLElement(target)) {\n            target.addEventListener(\"focus\", (event) => enableKeyboardPress(event, eventOptions));\n            if (!isElementKeyboardAccessible(target) &&\n                !target.hasAttribute(\"tabindex\")) {\n                target.tabIndex = 0;\n            }\n        }\n    });\n    return cancelEvents;\n}\n\nexport { press };\n","import { press, frame } from 'motion-dom';\nimport { extractEventInfo } from '../events/event-info.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\n\nfunction handlePressEvent(node, event, lifecycle) {\n    const { props } = node;\n    if (node.current instanceof HTMLButtonElement && node.current.disabled) {\n        return;\n    }\n    if (node.animationState && props.whileTap) {\n        node.animationState.setActive(\"whileTap\", lifecycle === \"Start\");\n    }\n    const eventName = (\"onTap\" + (lifecycle === \"End\" ? \"\" : lifecycle));\n    const callback = props[eventName];\n    if (callback) {\n        frame.postRender(() => callback(event, extractEventInfo(event)));\n    }\n}\nclass PressGesture extends Feature {\n    mount() {\n        const { current } = this.node;\n        if (!current)\n            return;\n        this.unmount = press(current, (_element, startEvent) => {\n            handlePressEvent(this.node, startEvent, \"Start\");\n            return (endEvent, { success }) => handlePressEvent(this.node, endEvent, success ? \"End\" : \"Cancel\");\n        }, { useGlobalTarget: this.node.props.globalTapTarget });\n    }\n    unmount() { }\n}\n\nexport { PressGesture };\n","/**\n * Map an IntersectionHandler callback to an element. We only ever make one handler for one\n * element, so even though these handlers might all be triggered by different\n * observers, we can keep them in the same map.\n */\nconst observerCallbacks = new WeakMap();\n/**\n * Multiple observers can be created for multiple element/document roots. Each with\n * different settings. So here we store dictionaries of observers to each root,\n * using serialised settings (threshold/margin) as lookup keys.\n */\nconst observers = new WeakMap();\nconst fireObserverCallback = (entry) => {\n    const callback = observerCallbacks.get(entry.target);\n    callback && callback(entry);\n};\nconst fireAllObserverCallbacks = (entries) => {\n    entries.forEach(fireObserverCallback);\n};\nfunction initIntersectionObserver({ root, ...options }) {\n    const lookupRoot = root || document;\n    /**\n     * If we don't have an observer lookup map for this root, create one.\n     */\n    if (!observers.has(lookupRoot)) {\n        observers.set(lookupRoot, {});\n    }\n    const rootObservers = observers.get(lookupRoot);\n    const key = JSON.stringify(options);\n    /**\n     * If we don't have an observer for this combination of root and settings,\n     * create one.\n     */\n    if (!rootObservers[key]) {\n        rootObservers[key] = new IntersectionObserver(fireAllObserverCallbacks, { root, ...options });\n    }\n    return rootObservers[key];\n}\nfunction observeIntersection(element, options, callback) {\n    const rootInteresectionObserver = initIntersectionObserver(options);\n    observerCallbacks.set(element, callback);\n    rootInteresectionObserver.observe(element);\n    return () => {\n        observerCallbacks.delete(element);\n        rootInteresectionObserver.unobserve(element);\n    };\n}\n\nexport { observeIntersection };\n","import { Feature } from '../Feature.mjs';\nimport { observeIntersection } from './observers.mjs';\n\nconst thresholdNames = {\n    some: 0,\n    all: 1,\n};\nclass InViewFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.hasEnteredView = false;\n        this.isInView = false;\n    }\n    startObserver() {\n        this.unmount();\n        const { viewport = {} } = this.node.getProps();\n        const { root, margin: rootMargin, amount = \"some\", once } = viewport;\n        const options = {\n            root: root ? root.current : undefined,\n            rootMargin,\n            threshold: typeof amount === \"number\" ? amount : thresholdNames[amount],\n        };\n        const onIntersectionUpdate = (entry) => {\n            const { isIntersecting } = entry;\n            /**\n             * If there's been no change in the viewport state, early return.\n             */\n            if (this.isInView === isIntersecting)\n                return;\n            this.isInView = isIntersecting;\n            /**\n             * Handle hasEnteredView. If this is only meant to run once, and\n             * element isn't visible, early return. Otherwise set hasEnteredView to true.\n             */\n            if (once && !isIntersecting && this.hasEnteredView) {\n                return;\n            }\n            else if (isIntersecting) {\n                this.hasEnteredView = true;\n            }\n            if (this.node.animationState) {\n                this.node.animationState.setActive(\"whileInView\", isIntersecting);\n            }\n            /**\n             * Use the latest committed props rather than the ones in scope\n             * when this observer is created\n             */\n            const { onViewportEnter, onViewportLeave } = this.node.getProps();\n            const callback = isIntersecting ? onViewportEnter : onViewportLeave;\n            callback && callback(entry);\n        };\n        return observeIntersection(this.node.current, options, onIntersectionUpdate);\n    }\n    mount() {\n        this.startObserver();\n    }\n    update() {\n        if (typeof IntersectionObserver === \"undefined\")\n            return;\n        const { props, prevProps } = this.node;\n        const hasOptionsChanged = [\"amount\", \"margin\", \"root\"].some(hasViewportOptionChanged(props, prevProps));\n        if (hasOptionsChanged) {\n            this.startObserver();\n        }\n    }\n    unmount() { }\n}\nfunction hasViewportOptionChanged({ viewport = {} }, { viewport: prevViewport = {} } = {}) {\n    return (name) => viewport[name] !== prevViewport[name];\n}\n\nexport { InViewFeature };\n","import { HoverGesture } from '../../gestures/hover.mjs';\nimport { FocusGesture } from '../../gestures/focus.mjs';\nimport { PressGesture } from '../../gestures/press.mjs';\nimport { InViewFeature } from './viewport/index.mjs';\n\nconst gestureAnimations = {\n    inView: {\n        Feature: InViewFeature,\n    },\n    tap: {\n        Feature: PressGesture,\n    },\n    focus: {\n        Feature: FocusGesture,\n    },\n    hover: {\n        Feature: HoverGesture,\n    },\n};\n\nexport { gestureAnimations };\n","import { pipe } from 'motion-utils';\nimport { addDomEvent } from '../events/add-dom-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\n\nclass FocusGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.isActive = false;\n    }\n    onFocus() {\n        let isFocusVisible = false;\n        /**\n         * If this element doesn't match focus-visible then don't\n         * apply whileHover. But, if matches throws that focus-visible\n         * is not a valid selector then in that browser outline styles will be applied\n         * to the element by default and we want to match that behaviour with whileFocus.\n         */\n        try {\n            isFocusVisible = this.node.current.matches(\":focus-visible\");\n        }\n        catch (e) {\n            isFocusVisible = true;\n        }\n        if (!isFocusVisible || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", true);\n        this.isActive = true;\n    }\n    onBlur() {\n        if (!this.isActive || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", false);\n        this.isActive = false;\n    }\n    mount() {\n        this.unmount = pipe(addDomEvent(this.node.current, \"focus\", () => this.onFocus()), addDomEvent(this.node.current, \"blur\", () => this.onBlur()));\n    }\n    unmount() { }\n}\n\nexport { FocusGesture };\n","import { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\n\nconst layout = {\n    layout: {\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { layout };\n","\"use client\";\nimport { createContext } from 'react';\n\nconst LazyContext = createContext({ strict: false });\n\nexport { LazyContext };\n","\"use client\";\nimport { createContext } from 'react';\n\nconst MotionContext = /* @__PURE__ */ createContext({});\n\nexport { MotionContext };\n","import { useContext, useMemo } from 'react';\nimport { MotionContext } from './index.mjs';\nimport { getCurrentTreeVariants } from './utils.mjs';\n\nfunction useCreateMotionContext(props) {\n    const { initial, animate } = getCurrentTreeVariants(props, useContext(MotionContext));\n    return useMemo(() => ({ initial, animate }), [variantLabelsAsDependency(initial), variantLabelsAsDependency(animate)]);\n}\nfunction variantLabelsAsDependency(prop) {\n    return Array.isArray(prop) ? prop.join(\" \") : prop;\n}\n\nexport { useCreateMotionContext };\n","import { isControllingVariants } from '../../render/utils/is-controlling-variants.mjs';\nimport { isVariantLabel } from '../../render/utils/is-variant-label.mjs';\n\nfunction getCurrentTreeVariants(props, context) {\n    if (isControllingVariants(props)) {\n        const { initial, animate } = props;\n        return {\n            initial: initial === false || isVariantLabel(initial)\n                ? initial\n                : undefined,\n            animate: isVariantLabel(animate) ? animate : undefined,\n        };\n    }\n    return props.inherit !== false ? context : {};\n}\n\nexport { getCurrentTreeVariants };\n","const motionComponentSymbol = Symbol.for(\"motionComponentSymbol\");\n\nexport { motionComponentSymbol };\n","import { useCallback } from 'react';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\n\n/**\n * Creates a ref function that, when called, hydrates the provided\n * external ref and VisualElement.\n */\nfunction useMotionRef(visualState, visualElement, externalRef) {\n    return useCallback((instance) => {\n        if (instance) {\n            visualState.onMount && visualState.onMount(instance);\n        }\n        if (visualElement) {\n            if (instance) {\n                visualElement.mount(instance);\n            }\n            else {\n                visualElement.unmount();\n            }\n        }\n        if (externalRef) {\n            if (typeof externalRef === \"function\") {\n                externalRef(instance);\n            }\n            else if (isRefObject(externalRef)) {\n                externalRef.current = instance;\n            }\n        }\n    }, \n    /**\n     * Only pass a new ref callback to React if we've received a visual element\n     * factory. Otherwise we'll be mounting/remounting every time externalRef\n     * or other dependencies change.\n     */\n    [visualElement]);\n}\n\nexport { useMotionRef };\n","import { microtask } from 'motion-dom';\nimport { useContext, useRef, useInsertionEffect, useEffect } from 'react';\nimport { optimizedAppearDataAttribute } from '../../animation/optimized-appear/data-id.mjs';\nimport { LazyContext } from '../../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { SwitchLayoutGroupContext } from '../../context/SwitchLayoutGroupContext.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\n\nfunction useVisualElement(Component, visualState, props, createVisualElement, ProjectionNodeConstructor) {\n    const { visualElement: parent } = useContext(MotionContext);\n    const lazyContext = useContext(LazyContext);\n    const presenceContext = useContext(PresenceContext);\n    const reducedMotionConfig = useContext(MotionConfigContext).reducedMotion;\n    const visualElementRef = useRef(null);\n    /**\n     * If we haven't preloaded a renderer, check to see if we have one lazy-loaded\n     */\n    createVisualElement = createVisualElement || lazyContext.renderer;\n    if (!visualElementRef.current && createVisualElement) {\n        visualElementRef.current = createVisualElement(Component, {\n            visualState,\n            parent,\n            props,\n            presenceContext,\n            blockInitialAnimation: presenceContext\n                ? presenceContext.initial === false\n                : false,\n            reducedMotionConfig,\n        });\n    }\n    const visualElement = visualElementRef.current;\n    /**\n     * Load Motion gesture and animation features. These are rendered as renderless\n     * components so each feature can optionally make use of React lifecycle methods.\n     */\n    const initialLayoutGroupConfig = useContext(SwitchLayoutGroupContext);\n    if (visualElement &&\n        !visualElement.projection &&\n        ProjectionNodeConstructor &&\n        (visualElement.type === \"html\" || visualElement.type === \"svg\")) {\n        createProjectionNode(visualElementRef.current, props, ProjectionNodeConstructor, initialLayoutGroupConfig);\n    }\n    const isMounted = useRef(false);\n    useInsertionEffect(() => {\n        /**\n         * Check the component has already mounted before calling\n         * `update` unnecessarily. This ensures we skip the initial update.\n         */\n        if (visualElement && isMounted.current) {\n            visualElement.update(props, presenceContext);\n        }\n    });\n    /**\n     * Cache this value as we want to know whether HandoffAppearAnimations\n     * was present on initial render - it will be deleted after this.\n     */\n    const optimisedAppearId = props[optimizedAppearDataAttribute];\n    const wantsHandoff = useRef(Boolean(optimisedAppearId) &&\n        !window.MotionHandoffIsComplete?.(optimisedAppearId) &&\n        window.MotionHasOptimisedAnimation?.(optimisedAppearId));\n    useIsomorphicLayoutEffect(() => {\n        if (!visualElement)\n            return;\n        isMounted.current = true;\n        window.MotionIsMounted = true;\n        visualElement.updateFeatures();\n        microtask.render(visualElement.render);\n        /**\n         * Ideally this function would always run in a useEffect.\n         *\n         * However, if we have optimised appear animations to handoff from,\n         * it needs to happen synchronously to ensure there's no flash of\n         * incorrect styles in the event of a hydration error.\n         *\n         * So if we detect a situtation where optimised appear animations\n         * are running, we use useLayoutEffect to trigger animations.\n         */\n        if (wantsHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n    });\n    useEffect(() => {\n        if (!visualElement)\n            return;\n        if (!wantsHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n        if (wantsHandoff.current) {\n            // This ensures all future calls to animateChanges() in this component will run in useEffect\n            queueMicrotask(() => {\n                window.MotionHandoffMarkAsComplete?.(optimisedAppearId);\n            });\n            wantsHandoff.current = false;\n        }\n    });\n    return visualElement;\n}\nfunction createProjectionNode(visualElement, props, ProjectionNodeConstructor, initialPromotionConfig) {\n    const { layoutId, layout, drag, dragConstraints, layoutScroll, layoutRoot, layoutCrossfade, } = props;\n    visualElement.projection = new ProjectionNodeConstructor(visualElement.latestValues, props[\"data-framer-portal-id\"]\n        ? undefined\n        : getClosestProjectingNode(visualElement.parent));\n    visualElement.projection.setOptions({\n        layoutId,\n        layout,\n        alwaysMeasureLayout: Boolean(drag) || (dragConstraints && isRefObject(dragConstraints)),\n        visualElement,\n        /**\n         * TODO: Update options in an effect. This could be tricky as it'll be too late\n         * to update by the time layout animations run.\n         * We also need to fix this safeToRemove by linking it up to the one returned by usePresence,\n         * ensuring it gets called if there's no potential layout animations.\n         *\n         */\n        animationType: typeof layout === \"string\" ? layout : \"both\",\n        initialPromotionConfig,\n        crossfade: layoutCrossfade,\n        layoutScroll,\n        layoutRoot,\n    });\n}\nfunction getClosestProjectingNode(visualElement) {\n    if (!visualElement)\n        return undefined;\n    return visualElement.options.allowProjection !== false\n        ? visualElement.projection\n        : getClosestProjectingNode(visualElement.parent);\n}\n\nexport { useVisualElement };\n","\"use client\";\nimport { jsxs, jsx } from 'react/jsx-runtime';\nimport { warning, invariant } from 'motion-utils';\nimport { forwardRef, useContext } from 'react';\nimport { LayoutGroupContext } from '../context/LayoutGroupContext.mjs';\nimport { LazyContext } from '../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { MotionContext } from '../context/MotionContext/index.mjs';\nimport { useCreateMotionContext } from '../context/MotionContext/create.mjs';\nimport { isBrowser } from '../utils/is-browser.mjs';\nimport { featureDefinitions } from './features/definitions.mjs';\nimport { loadFeatures } from './features/load-features.mjs';\nimport { motionComponentSymbol } from './utils/symbol.mjs';\nimport { useMotionRef } from './utils/use-motion-ref.mjs';\nimport { useVisualElement } from './utils/use-visual-element.mjs';\n\n/**\n * Create a `motion` component.\n *\n * This function accepts a Component argument, which can be either a string (ie \"div\"\n * for `motion.div`), or an actual React component.\n *\n * Alongside this is a config option which provides a way of rendering the provided\n * component \"offline\", or outside the React render cycle.\n */\nfunction createRendererMotionComponent({ preloadedFeatures, createVisualElement, useRender, useVisualState, Component, }) {\n    preloadedFeatures && loadFeatures(preloadedFeatures);\n    function MotionComponent(props, externalRef) {\n        /**\n         * If we need to measure the element we load this functionality in a\n         * separate class component in order to gain access to getSnapshotBeforeUpdate.\n         */\n        let MeasureLayout;\n        const configAndProps = {\n            ...useContext(MotionConfigContext),\n            ...props,\n            layoutId: useLayoutId(props),\n        };\n        const { isStatic } = configAndProps;\n        const context = useCreateMotionContext(props);\n        const visualState = useVisualState(props, isStatic);\n        if (!isStatic && isBrowser) {\n            useStrictMode(configAndProps, preloadedFeatures);\n            const layoutProjection = getProjectionFunctionality(configAndProps);\n            MeasureLayout = layoutProjection.MeasureLayout;\n            /**\n             * Create a VisualElement for this component. A VisualElement provides a common\n             * interface to renderer-specific APIs (ie DOM/Three.js etc) as well as\n             * providing a way of rendering to these APIs outside of the React render loop\n             * for more performant animations and interactions\n             */\n            context.visualElement = useVisualElement(Component, visualState, configAndProps, createVisualElement, layoutProjection.ProjectionNode);\n        }\n        /**\n         * The mount order and hierarchy is specific to ensure our element ref\n         * is hydrated by the time features fire their effects.\n         */\n        return (jsxs(MotionContext.Provider, { value: context, children: [MeasureLayout && context.visualElement ? (jsx(MeasureLayout, { visualElement: context.visualElement, ...configAndProps })) : null, useRender(Component, props, useMotionRef(visualState, context.visualElement, externalRef), visualState, isStatic, context.visualElement)] }));\n    }\n    MotionComponent.displayName = `motion.${typeof Component === \"string\"\n        ? Component\n        : `create(${Component.displayName ?? Component.name ?? \"\"})`}`;\n    const ForwardRefMotionComponent = forwardRef(MotionComponent);\n    ForwardRefMotionComponent[motionComponentSymbol] = Component;\n    return ForwardRefMotionComponent;\n}\nfunction useLayoutId({ layoutId }) {\n    const layoutGroupId = useContext(LayoutGroupContext).id;\n    return layoutGroupId && layoutId !== undefined\n        ? layoutGroupId + \"-\" + layoutId\n        : layoutId;\n}\nfunction useStrictMode(configAndProps, preloadedFeatures) {\n    const isStrict = useContext(LazyContext).strict;\n    /**\n     * If we're in development mode, check to make sure we're not rendering a motion component\n     * as a child of LazyMotion, as this will break the file-size benefits of using it.\n     */\n    if (process.env.NODE_ENV !== \"production\" &&\n        preloadedFeatures &&\n        isStrict) {\n        const strictMessage = \"You have rendered a `motion` component within a `LazyMotion` component. This will break tree shaking. Import and render a `m` component instead.\";\n        configAndProps.ignoreStrict\n            ? warning(false, strictMessage)\n            : invariant(false, strictMessage);\n    }\n}\nfunction getProjectionFunctionality(props) {\n    const { drag, layout } = featureDefinitions;\n    if (!drag && !layout)\n        return {};\n    const combined = { ...drag, ...layout };\n    return {\n        MeasureLayout: drag?.isEnabled(props) || layout?.isEnabled(props)\n            ? combined.MeasureLayout\n            : undefined,\n        ProjectionNode: combined.ProjectionNode,\n    };\n}\n\nexport { createRendererMotionComponent };\n","import { featureDefinitions } from './definitions.mjs';\n\nfunction loadFeatures(features) {\n    for (const key in features) {\n        featureDefinitions[key] = {\n            ...featureDefinitions[key],\n            ...features[key],\n        };\n    }\n}\n\nexport { loadFeatures };\n","const createHtmlRenderState = () => ({\n    style: {},\n    transform: {},\n    transformOrigin: {},\n    vars: {},\n});\n\nexport { createHtmlRenderState };\n","import { isMotionValue } from 'motion-dom';\nimport { useMemo } from 'react';\nimport { isForcedMotionValue } from '../../motion/utils/is-forced-motion-value.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nfunction copyRawValuesOnly(target, source, props) {\n    for (const key in source) {\n        if (!isMotionValue(source[key]) && !isForcedMotionValue(key, props)) {\n            target[key] = source[key];\n        }\n    }\n}\nfunction useInitialMotionValues({ transformTemplate }, visualState) {\n    return useMemo(() => {\n        const state = createHtmlRenderState();\n        buildHTMLStyles(state, visualState, transformTemplate);\n        return Object.assign({}, state.vars, state.style);\n    }, [visualState]);\n}\nfunction useStyle(props, visualState) {\n    const styleProp = props.style || {};\n    const style = {};\n    /**\n     * Copy non-Motion Values straight into style\n     */\n    copyRawValuesOnly(style, styleProp, props);\n    Object.assign(style, useInitialMotionValues(props, visualState));\n    return style;\n}\nfunction useHTMLProps(props, visualState) {\n    // The `any` isn't ideal but it is the type of createElement props argument\n    const htmlProps = {};\n    const style = useStyle(props, visualState);\n    if (props.drag && props.dragListener !== false) {\n        // Disable the ghost element when a user drags\n        htmlProps.draggable = false;\n        // Disable text selection\n        style.userSelect =\n            style.WebkitUserSelect =\n                style.WebkitTouchCallout =\n                    \"none\";\n        // Disable scrolling on the draggable direction\n        style.touchAction =\n            props.drag === true\n                ? \"none\"\n                : `pan-${props.drag === \"x\" ? \"y\" : \"x\"}`;\n    }\n    if (props.tabIndex === undefined &&\n        (props.onTap || props.onTapStart || props.whileTap)) {\n        htmlProps.tabIndex = 0;\n    }\n    htmlProps.style = style;\n    return htmlProps;\n}\n\nexport { copyRawValuesOnly, useHTMLProps };\n","import { createHtmlRenderState } from '../../html/utils/create-render-state.mjs';\n\nconst createSvgRenderState = () => ({\n    ...createHtmlRenderState(),\n    attrs: {},\n});\n\nexport { createSvgRenderState };\n","import { useMemo } from 'react';\nimport { copyRawValuesOnly } from '../html/use-props.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nfunction useSVGProps(props, visualState, _isStatic, Component) {\n    const visualProps = useMemo(() => {\n        const state = createSvgRenderState();\n        buildSVGAttrs(state, visualState, isSVGTag(Component), props.transformTemplate, props.style);\n        return {\n            ...state.attrs,\n            style: { ...state.style },\n        };\n    }, [visualState]);\n    if (props.style) {\n        const rawStyles = {};\n        copyRawValuesOnly(rawStyles, props.style, props);\n        visualProps.style = { ...rawStyles, ...visualProps.style };\n    }\n    return visualProps;\n}\n\nexport { useSVGProps };\n","/**\n * A list of all valid MotionProps.\n *\n * @privateRemarks\n * This doesn't throw if a `MotionProp` name is missing - it should.\n */\nconst validMotionProps = new Set([\n    \"animate\",\n    \"exit\",\n    \"variants\",\n    \"initial\",\n    \"style\",\n    \"values\",\n    \"variants\",\n    \"transition\",\n    \"transformTemplate\",\n    \"custom\",\n    \"inherit\",\n    \"onBeforeLayoutMeasure\",\n    \"onAnimationStart\",\n    \"onAnimationComplete\",\n    \"onUpdate\",\n    \"onDragStart\",\n    \"onDrag\",\n    \"onDragEnd\",\n    \"onMeasureDragConstraints\",\n    \"onDirectionLock\",\n    \"onDragTransitionEnd\",\n    \"_dragX\",\n    \"_dragY\",\n    \"onHoverStart\",\n    \"onHoverEnd\",\n    \"onViewportEnter\",\n    \"onViewportLeave\",\n    \"globalTapTarget\",\n    \"ignoreStrict\",\n    \"viewport\",\n]);\n/**\n * Check whether a prop name is a valid `MotionProp` key.\n *\n * @param key - Name of the property to check\n * @returns `true` is key is a valid `MotionProp`.\n *\n * @public\n */\nfunction isValidMotionProp(key) {\n    return (key.startsWith(\"while\") ||\n        (key.startsWith(\"drag\") && key !== \"draggable\") ||\n        key.startsWith(\"layout\") ||\n        key.startsWith(\"onTap\") ||\n        key.startsWith(\"onPan\") ||\n        key.startsWith(\"onLayout\") ||\n        validMotionProps.has(key));\n}\n\nexport { isValidMotionProp };\n","import { isValidMotionProp } from '../../../motion/utils/valid-prop.mjs';\n\nlet shouldForward = (key) => !isValidMotionProp(key);\nfunction loadExternalIsValidProp(isValidProp) {\n    if (!isValidProp)\n        return;\n    // Explicitly filter our events\n    shouldForward = (key) => key.startsWith(\"on\") ? !isValidMotionProp(key) : isValidProp(key);\n}\n/**\n * Emotion and Styled Components both allow users to pass through arbitrary props to their components\n * to dynamically generate CSS. They both use the `@emotion/is-prop-valid` package to determine which\n * of these should be passed to the underlying DOM node.\n *\n * However, when styling a Motion component `styled(motion.div)`, both packages pass through *all* props\n * as it's seen as an arbitrary component rather than a DOM node. Motion only allows arbitrary props\n * passed through the `custom` prop so it doesn't *need* the payload or computational overhead of\n * `@emotion/is-prop-valid`, however to fix this problem we need to use it.\n *\n * By making it an optionalDependency we can offer this functionality only in the situations where it's\n * actually required.\n */\ntry {\n    /**\n     * We attempt to import this package but require won't be defined in esm environments, in that case\n     * isPropValid will have to be provided via `MotionContext`. In a 6.0.0 this should probably be removed\n     * in favour of explicit injection.\n     */\n    loadExternalIsValidProp(require(\"@emotion/is-prop-valid\").default);\n}\ncatch {\n    // We don't need to actually do anything here - the fallback is the existing `isPropValid`.\n}\nfunction filterProps(props, isDom, forwardMotionProps) {\n    const filteredProps = {};\n    for (const key in props) {\n        /**\n         * values is considered a valid prop by Emotion, so if it's present\n         * this will be rendered out to the DOM unless explicitly filtered.\n         *\n         * We check the type as it could be used with the `feColorMatrix`\n         * element, which we support.\n         */\n        if (key === \"values\" && typeof props.values === \"object\")\n            continue;\n        if (shouldForward(key) ||\n            (forwardMotionProps === true && isValidMotionProp(key)) ||\n            (!isDom && !isValidMotionProp(key)) ||\n            // If trying to use native HTML drag events, forward drag listeners\n            (props[\"draggable\"] &&\n                key.startsWith(\"onDrag\"))) {\n            filteredProps[key] =\n                props[key];\n        }\n    }\n    return filteredProps;\n}\n\nexport { filterProps, loadExternalIsValidProp };\n","/**\n * We keep these listed separately as we use the lowercase tag names as part\n * of the runtime bundle to detect SVG components\n */\nconst lowercaseSVGElements = [\n    \"animate\",\n    \"circle\",\n    \"defs\",\n    \"desc\",\n    \"ellipse\",\n    \"g\",\n    \"image\",\n    \"line\",\n    \"filter\",\n    \"marker\",\n    \"mask\",\n    \"metadata\",\n    \"path\",\n    \"pattern\",\n    \"polygon\",\n    \"polyline\",\n    \"rect\",\n    \"stop\",\n    \"switch\",\n    \"symbol\",\n    \"svg\",\n    \"text\",\n    \"tspan\",\n    \"use\",\n    \"view\",\n];\n\nexport { lowercaseSVGElements };\n","import { lowercaseSVGElements } from '../../svg/lowercase-elements.mjs';\n\nfunction isSVGComponent(Component) {\n    if (\n    /**\n     * If it's not a string, it's a custom React component. Currently we only support\n     * HTML custom React components.\n     */\n    typeof Component !== \"string\" ||\n        /**\n         * If it contains a dash, the element is a custom HTML webcomponent.\n         */\n        Component.includes(\"-\")) {\n        return false;\n    }\n    else if (\n    /**\n     * If it's in our list of lowercase SVG tags, it's an SVG component\n     */\n    lowercaseSVGElements.indexOf(Component) > -1 ||\n        /**\n         * If it contains a capital letter, it's an SVG component\n         */\n        /[A-Z]/u.test(Component)) {\n        return true;\n    }\n    return false;\n}\n\nexport { isSVGComponent };\n","import { isMotionValue } from 'motion-dom';\nimport { Fragment, useMemo, createElement } from 'react';\nimport { useHTMLProps } from '../html/use-props.mjs';\nimport { useSVGProps } from '../svg/use-props.mjs';\nimport { filterProps } from './utils/filter-props.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\n\nfunction createUseRender(forwardMotionProps = false) {\n    const useRender = (Component, props, ref, { latestValues }, isStatic) => {\n        const useVisualProps = isSVGComponent(Component)\n            ? useSVGProps\n            : useHTMLProps;\n        const visualProps = useVisualProps(props, latestValues, isStatic, Component);\n        const filteredProps = filterProps(props, typeof Component === \"string\", forwardMotionProps);\n        const elementProps = Component !== Fragment\n            ? { ...filteredProps, ...visualProps, ref }\n            : {};\n        /**\n         * If component has been handed a motion value as its child,\n         * memoise its initial value and render that. Subsequent updates\n         * will be handled by the onChange handler\n         */\n        const { children } = props;\n        const renderedChildren = useMemo(() => (isMotionValue(children) ? children.get() : children), [children]);\n        return createElement(Component, {\n            ...elementProps,\n            children: renderedChildren,\n        });\n    };\n    return useRender;\n}\n\nexport { createUseRender };\n","import { useContext } from 'react';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { isControllingVariants, isVariantNode } from '../../render/utils/is-controlling-variants.mjs';\nimport { resolveVariantFromProps } from '../../render/utils/resolve-variants.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\n\nfunction makeState({ scrapeMotionValuesFromProps, createRenderState, }, props, context, presenceContext) {\n    const state = {\n        latestValues: makeLatestValues(props, context, presenceContext, scrapeMotionValuesFromProps),\n        renderState: createRenderState(),\n    };\n    return state;\n}\nconst makeUseVisualState = (config) => (props, isStatic) => {\n    const context = useContext(MotionContext);\n    const presenceContext = useContext(PresenceContext);\n    const make = () => makeState(config, props, context, presenceContext);\n    return isStatic ? make() : useConstant(make);\n};\nfunction makeLatestValues(props, context, presenceContext, scrapeMotionValues) {\n    const values = {};\n    const motionValues = scrapeMotionValues(props, {});\n    for (const key in motionValues) {\n        values[key] = resolveMotionValue(motionValues[key]);\n    }\n    let { initial, animate } = props;\n    const isControllingVariants$1 = isControllingVariants(props);\n    const isVariantNode$1 = isVariantNode(props);\n    if (context &&\n        isVariantNode$1 &&\n        !isControllingVariants$1 &&\n        props.inherit !== false) {\n        if (initial === undefined)\n            initial = context.initial;\n        if (animate === undefined)\n            animate = context.animate;\n    }\n    let isInitialAnimationBlocked = presenceContext\n        ? presenceContext.initial === false\n        : false;\n    isInitialAnimationBlocked = isInitialAnimationBlocked || initial === false;\n    const variantToSet = isInitialAnimationBlocked ? animate : initial;\n    if (variantToSet &&\n        typeof variantToSet !== \"boolean\" &&\n        !isAnimationControls(variantToSet)) {\n        const list = Array.isArray(variantToSet) ? variantToSet : [variantToSet];\n        for (let i = 0; i < list.length; i++) {\n            const resolved = resolveVariantFromProps(props, list[i]);\n            if (resolved) {\n                const { transitionEnd, transition, ...target } = resolved;\n                for (const key in target) {\n                    let valueTarget = target[key];\n                    if (Array.isArray(valueTarget)) {\n                        /**\n                         * Take final keyframe if the initial animation is blocked because\n                         * we want to initialise at the end of that blocked animation.\n                         */\n                        const index = isInitialAnimationBlocked\n                            ? valueTarget.length - 1\n                            : 0;\n                        valueTarget = valueTarget[index];\n                    }\n                    if (valueTarget !== null) {\n                        values[key] = valueTarget;\n                    }\n                }\n                for (const key in transitionEnd) {\n                    values[key] = transitionEnd[key];\n                }\n            }\n        }\n    }\n    return values;\n}\n\nexport { makeUseVisualState };\n","import { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nconst htmlMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps,\n        createRenderState: createHtmlRenderState,\n    }),\n};\n\nexport { htmlMotionConfig };\n","import { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\n\nconst svgMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps: scrapeMotionValuesFromProps,\n        createRenderState: createSvgRenderState,\n    }),\n};\n\nexport { svgMotionConfig };\n","import { createRendererMotionComponent } from '../../motion/index.mjs';\nimport { createUseRender } from '../dom/use-render.mjs';\nimport { isSVGComponent } from '../dom/utils/is-svg-component.mjs';\nimport { htmlMotionConfig } from '../html/config-motion.mjs';\nimport { svgMotionConfig } from '../svg/config-motion.mjs';\n\nfunction createMotionComponentFactory(preloadedFeatures, createVisualElement) {\n    return function createMotionComponent(Component, { forwardMotionProps } = { forwardMotionProps: false }) {\n        const baseConfig = isSVGComponent(Component)\n            ? svgMotionConfig\n            : htmlMotionConfig;\n        const config = {\n            ...baseConfig,\n            preloadedFeatures,\n            useRender: createUseRender(forwardMotionProps),\n            createVisualElement,\n            Component,\n        };\n        return createRendererMotionComponent(config);\n    };\n}\n\nexport { createMotionComponentFactory };\n","import { Fragment } from 'react';\nimport { HTMLVisualElement } from '../html/HTMLVisualElement.mjs';\nimport { SVGVisualElement } from '../svg/SVGVisualElement.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\n\nconst createDomVisualElement = (Component, options) => {\n    return isSVGComponent(Component)\n        ? new SVGVisualElement(options)\n        : new HTMLVisualElement(options, {\n            allowProjection: Component !== Fragment,\n        });\n};\n\nexport { createDomVisualElement };\n","import { createDOMMotionComponentProxy } from '../create-proxy.mjs';\nimport { createMotionComponent } from './create.mjs';\n\nconst motion = /*@__PURE__*/ createDOMMotionComponentProxy(createMotionComponent);\n\nexport { motion };\n","import { animations } from '../../../motion/features/animations.mjs';\nimport { drag } from '../../../motion/features/drag.mjs';\nimport { gestureAnimations } from '../../../motion/features/gestures.mjs';\nimport { layout } from '../../../motion/features/layout.mjs';\nimport { createMotionComponentFactory } from '../create-factory.mjs';\nimport { createDomVisualElement } from '../../dom/create-visual-element.mjs';\n\nconst createMotionComponent = /*@__PURE__*/ createMotionComponentFactory({\n    ...animations,\n    ...gestureAnimations,\n    ...drag,\n    ...layout,\n}, createDomVisualElement);\n\nexport { createMotionComponent };\n","/**\n * Provided a value and a ValueType, returns the value as that value type.\n */\nconst getValueAsType = (value, type) => {\n    return type && typeof value === \"number\"\n        ? type.transform(value)\n        : value;\n};\n\nexport { getValueAsType };\n","import { transformPropOrder, getValueAsType, numberValueTypes } from 'motion-dom';\n\nconst translateAlias = {\n    x: \"translateX\",\n    y: \"translateY\",\n    z: \"translateZ\",\n    transformPerspective: \"perspective\",\n};\nconst numTransforms = transformPropOrder.length;\n/**\n * Build a CSS transform style from individual x/y/scale etc properties.\n *\n * This outputs with a default order of transforms/scales/rotations, this can be customised by\n * providing a transformTemplate function.\n */\nfunction buildTransform(latestValues, transform, transformTemplate) {\n    // The transform string we're going to build into.\n    let transformString = \"\";\n    let transformIsDefault = true;\n    /**\n     * Loop over all possible transforms in order, adding the ones that\n     * are present to the transform string.\n     */\n    for (let i = 0; i < numTransforms; i++) {\n        const key = transformPropOrder[i];\n        const value = latestValues[key];\n        if (value === undefined)\n            continue;\n        let valueIsDefault = true;\n        if (typeof value === \"number\") {\n            valueIsDefault = value === (key.startsWith(\"scale\") ? 1 : 0);\n        }\n        else {\n            valueIsDefault = parseFloat(value) === 0;\n        }\n        if (!valueIsDefault || transformTemplate) {\n            const valueAsType = getValueAsType(value, numberValueTypes[key]);\n            if (!valueIsDefault) {\n                transformIsDefault = false;\n                const transformName = translateAlias[key] || key;\n                transformString += `${transformName}(${valueAsType}) `;\n            }\n            if (transformTemplate) {\n                transform[key] = valueAsType;\n            }\n        }\n    }\n    transformString = transformString.trim();\n    // If we have a custom `transform` template, pass our transform values and\n    // generated transformString to that before returning\n    if (transformTemplate) {\n        transformString = transformTemplate(transform, transformIsDefault ? \"\" : transformString);\n    }\n    else if (transformIsDefault) {\n        transformString = \"none\";\n    }\n    return transformString;\n}\n\nexport { buildTransform };\n","import { transformProps, isCSSVariableName, getValueAsType, numberValueTypes } from 'motion-dom';\nimport { buildTransform } from './build-transform.mjs';\n\nfunction buildHTMLStyles(state, latestValues, transformTemplate) {\n    const { style, vars, transformOrigin } = state;\n    // Track whether we encounter any transform or transformOrigin values.\n    let hasTransform = false;\n    let hasTransformOrigin = false;\n    /**\n     * Loop over all our latest animated values and decide whether to handle them\n     * as a style or CSS variable.\n     *\n     * Transforms and transform origins are kept separately for further processing.\n     */\n    for (const key in latestValues) {\n        const value = latestValues[key];\n        if (transformProps.has(key)) {\n            // If this is a transform, flag to enable further transform processing\n            hasTransform = true;\n            continue;\n        }\n        else if (isCSSVariableName(key)) {\n            vars[key] = value;\n            continue;\n        }\n        else {\n            // Convert the value to its default value type, ie 0 -> \"0px\"\n            const valueAsType = getValueAsType(value, numberValueTypes[key]);\n            if (key.startsWith(\"origin\")) {\n                // If this is a transform origin, flag and enable further transform-origin processing\n                hasTransformOrigin = true;\n                transformOrigin[key] =\n                    valueAsType;\n            }\n            else {\n                style[key] = valueAsType;\n            }\n        }\n    }\n    if (!latestValues.transform) {\n        if (hasTransform || transformTemplate) {\n            style.transform = buildTransform(latestValues, state.transform, transformTemplate);\n        }\n        else if (style.transform) {\n            /**\n             * If we have previously created a transform but currently don't have any,\n             * reset transform style to none.\n             */\n            style.transform = \"none\";\n        }\n    }\n    /**\n     * Build a transformOrigin style. Uses the same defaults as the browser for\n     * undefined origins.\n     */\n    if (hasTransformOrigin) {\n        const { originX = \"50%\", originY = \"50%\", originZ = 0, } = transformOrigin;\n        style.transformOrigin = `${originX} ${originY} ${originZ}`;\n    }\n}\n\nexport { buildHTMLStyles };\n","import { MotionGlobalConfig } from 'motion-utils';\nimport { isWillChangeMotionValue } from './is.mjs';\n\nfunction addValueToWillChange(visualElement, key) {\n    const willChange = visualElement.getValue(\"willChange\");\n    /**\n     * It could be that a user has set willChange to a regular MotionValue,\n     * in which case we can't add the value to it.\n     */\n    if (isWillChangeMotionValue(willChange)) {\n        return willChange.add(key);\n    }\n    else if (!willChange && MotionGlobalConfig.WillChange) {\n        const newWillChange = new MotionGlobalConfig.WillChange(\"auto\");\n        visualElement.addValue(\"willChange\", newWillChange);\n        newWillChange.add(key);\n    }\n}\n\nexport { addValueToWillChange };\n","import { isMotionValue } from 'motion-dom';\n\nfunction isWillChangeMotionValue(value) {\n    return Boolean(isMotionValue(value) && value.add);\n}\n\nexport { isWillChangeMotionValue };\n","import { addUniqueItem, removeItem } from './array.mjs';\n\nclass SubscriptionManager {\n    constructor() {\n        this.subscriptions = [];\n    }\n    add(handler) {\n        addUniqueItem(this.subscriptions, handler);\n        return () => removeItem(this.subscriptions, handler);\n    }\n    notify(a, b, c) {\n        const numSubscriptions = this.subscriptions.length;\n        if (!numSubscriptions)\n            return;\n        if (numSubscriptions === 1) {\n            /**\n             * If there's only a single handler we can just call it without invoking a loop.\n             */\n            this.subscriptions[0](a, b, c);\n        }\n        else {\n            for (let i = 0; i < numSubscriptions; i++) {\n                /**\n                 * Check whether the handler exists before firing as it's possible\n                 * the subscriptions were modified during this loop running.\n                 */\n                const handler = this.subscriptions[i];\n                handler && handler(a, b, c);\n            }\n        }\n    }\n    getSize() {\n        return this.subscriptions.length;\n    }\n    clear() {\n        this.subscriptions.length = 0;\n    }\n}\n\nexport { SubscriptionManager };\n","import { convertBoundingBoxToBox, transformBoxPoints } from '../geometry/conversion.mjs';\nimport { translateAxis } from '../geometry/delta-apply.mjs';\n\nfunction measureViewportBox(instance, transformPoint) {\n    return convertBoundingBoxToBox(transformBoxPoints(instance.getBoundingClientRect(), transformPoint));\n}\nfunction measurePageBox(element, rootProjectionNode, transformPagePoint) {\n    const viewportBox = measureViewportBox(element, transformPagePoint);\n    const { scroll } = rootProjectionNode;\n    if (scroll) {\n        translateAxis(viewportBox.x, scroll.offset.x);\n        translateAxis(viewportBox.y, scroll.offset.y);\n    }\n    return viewportBox;\n}\n\nexport { measurePageBox, measureViewportBox };\n","import { optimizedAppearDataAttribute } from './data-id.mjs';\n\nfunction getOptimisedAppearId(visualElement) {\n    return visualElement.props[optimizedAppearDataAttribute];\n}\n\nexport { getOptimisedAppearId };\n","/**\n * Bounding boxes tend to be defined as top, left, right, bottom. For various operations\n * it's easier to consider each axis individually. This function returns a bounding box\n * as a map of single-axis min/max values.\n */\nfunction convertBoundingBoxToBox({ top, left, right, bottom, }) {\n    return {\n        x: { min: left, max: right },\n        y: { min: top, max: bottom },\n    };\n}\nfunction convertBoxToBoundingBox({ x, y }) {\n    return { top: y.min, right: x.max, bottom: y.max, left: x.min };\n}\n/**\n * Applies a TransformPoint function to a bounding box. TransformPoint is usually a function\n * provided by Framer to allow measured points to be corrected for device scaling. This is used\n * when measuring DOM elements and DOM event points.\n */\nfunction transformBoxPoints(point, transformPoint) {\n    if (!transformPoint)\n        return point;\n    const topLeft = transformPoint({ x: point.left, y: point.top });\n    const bottomRight = transformPoint({ x: point.right, y: point.bottom });\n    return {\n        top: topLeft.y,\n        left: topLeft.x,\n        bottom: bottomRight.y,\n        right: bottomRight.x,\n    };\n}\n\nexport { convertBoundingBoxToBox, convertBoxToBoundingBox, transformBoxPoints };\n","const statsBuffer = {\n    value: null,\n    addProjectionMetrics: null,\n};\n\nexport { statsBuffer };\n","import { MotionGlobalConfig } from 'motion-utils';\nimport { frameData } from './frame.mjs';\n\nlet now;\nfunction clearTime() {\n    now = undefined;\n}\n/**\n * An eventloop-synchronous alternative to performance.now().\n *\n * Ensures that time measurements remain consistent within a synchronous context.\n * Usually calling performance.now() twice within the same synchronous context\n * will return different values which isn't useful for animations when we're usually\n * trying to sync animations to the same frame.\n */\nconst time = {\n    now: () => {\n        if (now === undefined) {\n            time.set(frameData.isProcessing || MotionGlobalConfig.useManualTiming\n                ? frameData.timestamp\n                : performance.now());\n        }\n        return now;\n    },\n    set: (newTime) => {\n        now = newTime;\n        queueMicrotask(clearTime);\n    },\n};\n\nexport { time };\n","import { warnOnce, SubscriptionManager, velocityPerSecond } from 'motion-utils';\nimport { time } from '../frameloop/sync-time.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\n/**\n * Maximum time between the value of two frames, beyond which we\n * assume the velocity has since been 0.\n */\nconst MAX_VELOCITY_DELTA = 30;\nconst isFloat = (value) => {\n    return !isNaN(parseFloat(value));\n};\nconst collectMotionValues = {\n    current: undefined,\n};\n/**\n * `MotionValue` is used to track the state and velocity of motion values.\n *\n * @public\n */\nclass MotionValue {\n    /**\n     * @param init - The initiating value\n     * @param config - Optional configuration options\n     *\n     * -  `transformer`: A function to transform incoming values with.\n     */\n    constructor(init, options = {}) {\n        /**\n         * Tracks whether this value can output a velocity. Currently this is only true\n         * if the value is numerical, but we might be able to widen the scope here and support\n         * other value types.\n         *\n         * @internal\n         */\n        this.canTrackVelocity = null;\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        this.updateAndNotify = (v, render = true) => {\n            const currentTime = time.now();\n            /**\n             * If we're updating the value during another frame or eventloop\n             * than the previous frame, then the we set the previous frame value\n             * to current.\n             */\n            if (this.updatedAt !== currentTime) {\n                this.setPrevFrameValue();\n            }\n            this.prev = this.current;\n            this.setCurrent(v);\n            // Update update subscribers\n            if (this.current !== this.prev) {\n                this.events.change?.notify(this.current);\n                if (this.dependents) {\n                    for (const dependent of this.dependents) {\n                        dependent.dirty();\n                    }\n                }\n            }\n            // Update render subscribers\n            if (render) {\n                this.events.renderRequest?.notify(this.current);\n            }\n        };\n        this.hasAnimated = false;\n        this.setCurrent(init);\n        this.owner = options.owner;\n    }\n    setCurrent(current) {\n        this.current = current;\n        this.updatedAt = time.now();\n        if (this.canTrackVelocity === null && current !== undefined) {\n            this.canTrackVelocity = isFloat(this.current);\n        }\n    }\n    setPrevFrameValue(prevFrameValue = this.current) {\n        this.prevFrameValue = prevFrameValue;\n        this.prevUpdatedAt = this.updatedAt;\n    }\n    /**\n     * Adds a function that will be notified when the `MotionValue` is updated.\n     *\n     * It returns a function that, when called, will cancel the subscription.\n     *\n     * When calling `onChange` inside a React component, it should be wrapped with the\n     * `useEffect` hook. As it returns an unsubscribe function, this should be returned\n     * from the `useEffect` function to ensure you don't add duplicate subscribers..\n     *\n     * ```jsx\n     * export const MyComponent = () => {\n     *   const x = useMotionValue(0)\n     *   const y = useMotionValue(0)\n     *   const opacity = useMotionValue(1)\n     *\n     *   useEffect(() => {\n     *     function updateOpacity() {\n     *       const maxXY = Math.max(x.get(), y.get())\n     *       const newOpacity = transform(maxXY, [0, 100], [1, 0])\n     *       opacity.set(newOpacity)\n     *     }\n     *\n     *     const unsubscribeX = x.on(\"change\", updateOpacity)\n     *     const unsubscribeY = y.on(\"change\", updateOpacity)\n     *\n     *     return () => {\n     *       unsubscribeX()\n     *       unsubscribeY()\n     *     }\n     *   }, [])\n     *\n     *   return <motion.div style={{ x }} />\n     * }\n     * ```\n     *\n     * @param subscriber - A function that receives the latest value.\n     * @returns A function that, when called, will cancel this subscription.\n     *\n     * @deprecated\n     */\n    onChange(subscription) {\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, `value.onChange(callback) is deprecated. Switch to value.on(\"change\", callback).`);\n        }\n        return this.on(\"change\", subscription);\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        const unsubscribe = this.events[eventName].add(callback);\n        if (eventName === \"change\") {\n            return () => {\n                unsubscribe();\n                /**\n                 * If we have no more change listeners by the start\n                 * of the next frame, stop active animations.\n                 */\n                frame.read(() => {\n                    if (!this.events.change.getSize()) {\n                        this.stop();\n                    }\n                });\n            };\n        }\n        return unsubscribe;\n    }\n    clearListeners() {\n        for (const eventManagers in this.events) {\n            this.events[eventManagers].clear();\n        }\n    }\n    /**\n     * Attaches a passive effect to the `MotionValue`.\n     */\n    attach(passiveEffect, stopPassiveEffect) {\n        this.passiveEffect = passiveEffect;\n        this.stopPassiveEffect = stopPassiveEffect;\n    }\n    /**\n     * Sets the state of the `MotionValue`.\n     *\n     * @remarks\n     *\n     * ```jsx\n     * const x = useMotionValue(0)\n     * x.set(10)\n     * ```\n     *\n     * @param latest - Latest value to set.\n     * @param render - Whether to notify render subscribers. Defaults to `true`\n     *\n     * @public\n     */\n    set(v, render = true) {\n        if (!render || !this.passiveEffect) {\n            this.updateAndNotify(v, render);\n        }\n        else {\n            this.passiveEffect(v, this.updateAndNotify);\n        }\n    }\n    setWithVelocity(prev, current, delta) {\n        this.set(current);\n        this.prev = undefined;\n        this.prevFrameValue = prev;\n        this.prevUpdatedAt = this.updatedAt - delta;\n    }\n    /**\n     * Set the state of the `MotionValue`, stopping any active animations,\n     * effects, and resets velocity to `0`.\n     */\n    jump(v, endAnimation = true) {\n        this.updateAndNotify(v);\n        this.prev = v;\n        this.prevUpdatedAt = this.prevFrameValue = undefined;\n        endAnimation && this.stop();\n        if (this.stopPassiveEffect)\n            this.stopPassiveEffect();\n    }\n    dirty() {\n        this.events.change?.notify(this.current);\n    }\n    addDependent(dependent) {\n        if (!this.dependents) {\n            this.dependents = new Set();\n        }\n        this.dependents.add(dependent);\n    }\n    removeDependent(dependent) {\n        if (this.dependents) {\n            this.dependents.delete(dependent);\n        }\n    }\n    /**\n     * Returns the latest state of `MotionValue`\n     *\n     * @returns - The latest state of `MotionValue`\n     *\n     * @public\n     */\n    get() {\n        if (collectMotionValues.current) {\n            collectMotionValues.current.push(this);\n        }\n        return this.current;\n    }\n    /**\n     * @public\n     */\n    getPrevious() {\n        return this.prev;\n    }\n    /**\n     * Returns the latest velocity of `MotionValue`\n     *\n     * @returns - The latest velocity of `MotionValue`. Returns `0` if the state is non-numerical.\n     *\n     * @public\n     */\n    getVelocity() {\n        const currentTime = time.now();\n        if (!this.canTrackVelocity ||\n            this.prevFrameValue === undefined ||\n            currentTime - this.updatedAt > MAX_VELOCITY_DELTA) {\n            return 0;\n        }\n        const delta = Math.min(this.updatedAt - this.prevUpdatedAt, MAX_VELOCITY_DELTA);\n        // Casts because of parseFloat's poor typing\n        return velocityPerSecond(parseFloat(this.current) -\n            parseFloat(this.prevFrameValue), delta);\n    }\n    /**\n     * Registers a new animation to control this `MotionValue`. Only one\n     * animation can drive a `MotionValue` at one time.\n     *\n     * ```jsx\n     * value.start()\n     * ```\n     *\n     * @param animation - A function that starts the provided animation\n     */\n    start(startAnimation) {\n        this.stop();\n        return new Promise((resolve) => {\n            this.hasAnimated = true;\n            this.animation = startAnimation(resolve);\n            if (this.events.animationStart) {\n                this.events.animationStart.notify();\n            }\n        }).then(() => {\n            if (this.events.animationComplete) {\n                this.events.animationComplete.notify();\n            }\n            this.clearAnimation();\n        });\n    }\n    /**\n     * Stop the currently active animation.\n     *\n     * @public\n     */\n    stop() {\n        if (this.animation) {\n            this.animation.stop();\n            if (this.events.animationCancel) {\n                this.events.animationCancel.notify();\n            }\n        }\n        this.clearAnimation();\n    }\n    /**\n     * Returns `true` if this value is currently animating.\n     *\n     * @public\n     */\n    isAnimating() {\n        return !!this.animation;\n    }\n    clearAnimation() {\n        delete this.animation;\n    }\n    /**\n     * Destroy and clean up subscribers to this `MotionValue`.\n     *\n     * The `MotionValue` hooks like `useMotionValue` and `useTransform` automatically\n     * handle the lifecycle of the returned `MotionValue`, so this method is only necessary if you've manually\n     * created a `MotionValue` via the `motionValue` function.\n     *\n     * @public\n     */\n    destroy() {\n        this.dependents?.clear();\n        this.events.destroy?.notify();\n        this.clearListeners();\n        this.stop();\n        if (this.stopPassiveEffect) {\n            this.stopPassiveEffect();\n        }\n    }\n}\nfunction motionValue(init, options) {\n    return new MotionValue(init, options);\n}\n\nexport { MotionValue, collectMotionValues, motionValue };\n","import { complex } from './index.mjs';\nimport { floatRegex } from '../utils/float-regex.mjs';\n\n/**\n * Properties that should default to 1 or 100%\n */\nconst maxDefaults = new Set([\"brightness\", \"contrast\", \"saturate\", \"opacity\"]);\nfunction applyDefaultFilter(v) {\n    const [name, value] = v.slice(0, -1).split(\"(\");\n    if (name === \"drop-shadow\")\n        return v;\n    const [number] = value.match(floatRegex) || [];\n    if (!number)\n        return v;\n    const unit = value.replace(number, \"\");\n    let defaultValue = maxDefaults.has(name) ? 1 : 0;\n    if (number !== value)\n        defaultValue *= 100;\n    return name + \"(\" + defaultValue + unit + \")\";\n}\nconst functionRegex = /\\b([a-z-]*)\\(.*?\\)/gu;\nconst filter = {\n    ...complex,\n    getAnimatableNone: (v) => {\n        const functions = v.match(functionRegex);\n        return functions ? functions.map(applyDefaultFilter).join(\" \") : v;\n    },\n};\n\nexport { filter };\n","/*#__NO_SIDE_EFFECTS__*/\nconst createUnitType = (unit) => ({\n    test: (v) => typeof v === \"string\" && v.endsWith(unit) && v.split(\" \").length === 1,\n    parse: parseFloat,\n    transform: (v) => `${v}${unit}`,\n});\nconst degrees = /*@__PURE__*/ createUnitType(\"deg\");\nconst percent = /*@__PURE__*/ createUnitType(\"%\");\nconst px = /*@__PURE__*/ createUnitType(\"px\");\nconst vh = /*@__PURE__*/ createUnitType(\"vh\");\nconst vw = /*@__PURE__*/ createUnitType(\"vw\");\nconst progressPercentage = /*@__PURE__*/ (() => ({\n    ...percent,\n    parse: (v) => percent.parse(v) / 100,\n    transform: (v) => percent.transform(v * 100),\n}))();\n\nexport { degrees, percent, progressPercentage, px, vh, vw };\n","import { isMotionValue } from 'motion-dom';\nimport { isForcedMotionValue } from '../../../motion/utils/is-forced-motion-value.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n    const { style } = props;\n    const newValues = {};\n    for (const key in style) {\n        if (isMotionValue(style[key]) ||\n            (prevProps.style &&\n                isMotionValue(prevProps.style[key])) ||\n            isForcedMotionValue(key, props) ||\n            visualElement?.getValue(key)?.liveStyle !== undefined) {\n            newValues[key] = style[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { mixNumber } from 'motion-dom';\nimport { hasTransform } from '../utils/has-transform.mjs';\n\n/**\n * Scales a point based on a factor and an originPoint\n */\nfunction scalePoint(point, scale, originPoint) {\n    const distanceFromOrigin = point - originPoint;\n    const scaled = scale * distanceFromOrigin;\n    return originPoint + scaled;\n}\n/**\n * Applies a translate/scale delta to a point\n */\nfunction applyPointDelta(point, translate, scale, originPoint, boxScale) {\n    if (boxScale !== undefined) {\n        point = scalePoint(point, boxScale, originPoint);\n    }\n    return scalePoint(point, scale, originPoint) + translate;\n}\n/**\n * Applies a translate/scale delta to an axis\n */\nfunction applyAxisDelta(axis, translate = 0, scale = 1, originPoint, boxScale) {\n    axis.min = applyPointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = applyPointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Applies a translate/scale delta to a box\n */\nfunction applyBoxDelta(box, { x, y }) {\n    applyAxisDelta(box.x, x.translate, x.scale, x.originPoint);\n    applyAxisDelta(box.y, y.translate, y.scale, y.originPoint);\n}\nconst TREE_SCALE_SNAP_MIN = 0.999999999999;\nconst TREE_SCALE_SNAP_MAX = 1.0000000000001;\n/**\n * Apply a tree of deltas to a box. We do this to calculate the effect of all the transforms\n * in a tree upon our box before then calculating how to project it into our desired viewport-relative box\n *\n * This is the final nested loop within updateLayoutDelta for future refactoring\n */\nfunction applyTreeDeltas(box, treeScale, treePath, isSharedTransition = false) {\n    const treeLength = treePath.length;\n    if (!treeLength)\n        return;\n    // Reset the treeScale\n    treeScale.x = treeScale.y = 1;\n    let node;\n    let delta;\n    for (let i = 0; i < treeLength; i++) {\n        node = treePath[i];\n        delta = node.projectionDelta;\n        /**\n         * TODO: Prefer to remove this, but currently we have motion components with\n         * display: contents in Framer.\n         */\n        const { visualElement } = node.options;\n        if (visualElement &&\n            visualElement.props.style &&\n            visualElement.props.style.display === \"contents\") {\n            continue;\n        }\n        if (isSharedTransition &&\n            node.options.layoutScroll &&\n            node.scroll &&\n            node !== node.root) {\n            transformBox(box, {\n                x: -node.scroll.offset.x,\n                y: -node.scroll.offset.y,\n            });\n        }\n        if (delta) {\n            // Incoporate each ancestor's scale into a culmulative treeScale for this component\n            treeScale.x *= delta.x.scale;\n            treeScale.y *= delta.y.scale;\n            // Apply each ancestor's calculated delta into this component's recorded layout box\n            applyBoxDelta(box, delta);\n        }\n        if (isSharedTransition && hasTransform(node.latestValues)) {\n            transformBox(box, node.latestValues);\n        }\n    }\n    /**\n     * Snap tree scale back to 1 if it's within a non-perceivable threshold.\n     * This will help reduce useless scales getting rendered.\n     */\n    if (treeScale.x < TREE_SCALE_SNAP_MAX &&\n        treeScale.x > TREE_SCALE_SNAP_MIN) {\n        treeScale.x = 1.0;\n    }\n    if (treeScale.y < TREE_SCALE_SNAP_MAX &&\n        treeScale.y > TREE_SCALE_SNAP_MIN) {\n        treeScale.y = 1.0;\n    }\n}\nfunction translateAxis(axis, distance) {\n    axis.min = axis.min + distance;\n    axis.max = axis.max + distance;\n}\n/**\n * Apply a transform to an axis from the latest resolved motion values.\n * This function basically acts as a bridge between a flat motion value map\n * and applyAxisDelta\n */\nfunction transformAxis(axis, axisTranslate, axisScale, boxScale, axisOrigin = 0.5) {\n    const originPoint = mixNumber(axis.min, axis.max, axisOrigin);\n    // Apply the axis delta to the final axis\n    applyAxisDelta(axis, axisTranslate, axisScale, originPoint, boxScale);\n}\n/**\n * Apply a transform to a box from the latest resolved motion values.\n */\nfunction transformBox(box, transform) {\n    transformAxis(box.x, transform.x, transform.scaleX, transform.scale, transform.originX);\n    transformAxis(box.y, transform.y, transform.scaleY, transform.scale, transform.originY);\n}\n\nexport { applyAxisDelta, applyBoxDelta, applyPointDelta, applyTreeDeltas, scalePoint, transformAxis, transformBox, translateAxis };\n","const floatRegex = /-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/gu;\n\nexport { floatRegex };\n","const createAxisDelta = () => ({\n    translate: 0,\n    scale: 1,\n    origin: 0,\n    originPoint: 0,\n});\nconst createDelta = () => ({\n    x: createAxisDelta(),\n    y: createAxisDelta(),\n});\nconst createAxis = () => ({ min: 0, max: 0 });\nconst createBox = () => ({\n    x: createAxis(),\n    y: createAxis(),\n});\n\nexport { createAxis, createAxisDelta, createBox, createDelta };\n","import { clamp } from 'motion-utils';\nimport { number, alpha } from '../numbers/index.mjs';\nimport { sanitize } from '../utils/sanitize.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst clampRgbUnit = (v) => clamp(0, 255, v);\nconst rgbUnit = {\n    ...number,\n    transform: (v) => Math.round(clampRgbUnit(v)),\n};\nconst rgba = {\n    test: /*@__PURE__*/ isColorString(\"rgb\", \"red\"),\n    parse: /*@__PURE__*/ splitColor(\"red\", \"green\", \"blue\"),\n    transform: ({ red, green, blue, alpha: alpha$1 = 1 }) => \"rgba(\" +\n        rgbUnit.transform(red) +\n        \", \" +\n        rgbUnit.transform(green) +\n        \", \" +\n        rgbUnit.transform(blue) +\n        \", \" +\n        sanitize(alpha.transform(alpha$1)) +\n        \")\",\n};\n\nexport { rgbUnit, rgba };\n","function getValueState(visualElement) {\n    const state = [{}, {}];\n    visualElement?.values.forEach((value, key) => {\n        state[0][key] = value.get();\n        state[1][key] = value.getVelocity();\n    });\n    return state;\n}\nfunction resolveVariantFromProps(props, definition, custom, visualElement) {\n    /**\n     * If the variant definition is a function, resolve.\n     */\n    if (typeof definition === \"function\") {\n        const [current, velocity] = getValueState(visualElement);\n        definition = definition(custom !== undefined ? custom : props.custom, current, velocity);\n    }\n    /**\n     * If the variant definition is a variant label, or\n     * the function returned a variant label, resolve.\n     */\n    if (typeof definition === \"string\") {\n        definition = props.variants && props.variants[definition];\n    }\n    /**\n     * At this point we've resolved both functions and variant labels,\n     * but the resolved variant label might itself have been a function.\n     * If so, resolve. This can only have returned a valid target object.\n     */\n    if (typeof definition === \"function\") {\n        const [current, velocity] = getValueState(visualElement);\n        definition = definition(custom !== undefined ? custom : props.custom, current, velocity);\n    }\n    return definition;\n}\n\nexport { resolveVariantFromProps };\n","function resolveElements(elementOrSelector, scope, selectorCache) {\n    if (elementOrSelector instanceof EventTarget) {\n        return [elementOrSelector];\n    }\n    else if (typeof elementOrSelector === \"string\") {\n        let root = document;\n        if (scope) {\n            root = scope.current;\n        }\n        const elements = selectorCache?.[elementOrSelector] ??\n            root.querySelectorAll(elementOrSelector);\n        return elements ? Array.from(elements) : [];\n    }\n    return Array.from(elementOrSelector);\n}\n\nexport { resolveElements };\n","function isObject(value) {\n    return typeof value === \"object\" && value !== null;\n}\n\nexport { isObject };\n","import { noop } from 'motion-utils';\nimport { createRenderBatcher } from './batcher.mjs';\n\nconst { schedule: frame, cancel: cancelFrame, state: frameData, steps: frameSteps, } = /* @__PURE__ */ createRenderBatcher(typeof requestAnimationFrame !== \"undefined\" ? requestAnimationFrame : noop, true);\n\nexport { cancelFrame, frame, frameData, frameSteps };\n","const singleColorRegex = /^(?:#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\))$/iu;\n\nexport { singleColorRegex };\n","import { floatRegex } from '../utils/float-regex.mjs';\nimport { isNullish } from '../utils/is-nullish.mjs';\nimport { singleColorRegex } from '../utils/single-color-regex.mjs';\n\n/**\n * Returns true if the provided string is a color, ie rgba(0,0,0,0) or #000,\n * but false if a number or multiple colors\n */\nconst isColorString = (type, testProp) => (v) => {\n    return Boolean((typeof v === \"string\" &&\n        singleColorRegex.test(v) &&\n        v.startsWith(type)) ||\n        (testProp &&\n            !isNullish(v) &&\n            Object.prototype.hasOwnProperty.call(v, testProp)));\n};\nconst splitColor = (aName, bName, cName) => (v) => {\n    if (typeof v !== \"string\")\n        return v;\n    const [a, b, c, alpha] = v.match(floatRegex);\n    return {\n        [aName]: parseFloat(a),\n        [bName]: parseFloat(b),\n        [cName]: parseFloat(c),\n        alpha: alpha !== undefined ? parseFloat(alpha) : 1,\n    };\n};\n\nexport { isColorString, splitColor };\n","function isNullish(v) {\n    return v == null;\n}\n\nexport { isNullish };\n","const activeAnimations = {\n    layout: 0,\n    mainThread: 0,\n    waapi: 0,\n};\n\nexport { activeAnimations };\n","/**\n * Pipe\n * Compose other transformers to run linearily\n * pipe(min(20), max(40))\n * @param  {...functions} transformers\n * @return {function}\n */\nconst combineFunctions = (a, b) => (v) => b(a(v));\nconst pipe = (...transformers) => transformers.reduce(combineFunctions);\n\nexport { pipe };\n","import { isObject } from 'motion-utils';\n\n/**\n * Checks if an element is an HTML element in a way\n * that works across iframes\n */\nfunction isHTMLElement(element) {\n    return isObject(element) && \"offsetHeight\" in element;\n}\n\nexport { isHTMLElement };\n","/**\n * Generate a list of every possible transform key.\n */\nconst transformPropOrder = [\n    \"transformPerspective\",\n    \"x\",\n    \"y\",\n    \"z\",\n    \"translateX\",\n    \"translateY\",\n    \"translateZ\",\n    \"scale\",\n    \"scaleX\",\n    \"scaleY\",\n    \"rotate\",\n    \"rotateX\",\n    \"rotateY\",\n    \"rotateZ\",\n    \"skew\",\n    \"skewX\",\n    \"skewY\",\n];\n/**\n * A quick lookup for transform props.\n */\nconst transformProps = /*@__PURE__*/ (() => new Set(transformPropOrder))();\n\nexport { transformPropOrder, transformProps };\n","const springDefaults = {\n    // Default spring physics\n    stiffness: 100,\n    damping: 10,\n    mass: 1.0,\n    velocity: 0.0,\n    // Default duration/bounce-based options\n    duration: 800, // in ms\n    bounce: 0.3,\n    visualDuration: 0.3, // in seconds\n    // Rest thresholds\n    restSpeed: {\n        granular: 0.01,\n        default: 2,\n    },\n    restDelta: {\n        granular: 0.005,\n        default: 0.5,\n    },\n    // Limits\n    minDuration: 0.01, // in seconds\n    maxDuration: 10.0, // in seconds\n    minDamping: 0.05,\n    maxDamping: 1,\n};\n\nexport { springDefaults };\n","import { warning, secondsToMilliseconds, clamp, millisecondsToSeconds } from 'motion-utils';\nimport { springDefaults } from './defaults.mjs';\n\nconst safeMin = 0.001;\nfunction findSpring({ duration = springDefaults.duration, bounce = springDefaults.bounce, velocity = springDefaults.velocity, mass = springDefaults.mass, }) {\n    let envelope;\n    let derivative;\n    warning(duration <= secondsToMilliseconds(springDefaults.maxDuration), \"Spring duration must be 10 seconds or less\");\n    let dampingRatio = 1 - bounce;\n    /**\n     * Restrict dampingRatio and duration to within acceptable ranges.\n     */\n    dampingRatio = clamp(springDefaults.minDamping, springDefaults.maxDamping, dampingRatio);\n    duration = clamp(springDefaults.minDuration, springDefaults.maxDuration, millisecondsToSeconds(duration));\n    if (dampingRatio < 1) {\n        /**\n         * Underdamped spring\n         */\n        envelope = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const a = exponentialDecay - velocity;\n            const b = calcAngularFreq(undampedFreq, dampingRatio);\n            const c = Math.exp(-delta);\n            return safeMin - (a / b) * c;\n        };\n        derivative = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const d = delta * velocity + velocity;\n            const e = Math.pow(dampingRatio, 2) * Math.pow(undampedFreq, 2) * duration;\n            const f = Math.exp(-delta);\n            const g = calcAngularFreq(Math.pow(undampedFreq, 2), dampingRatio);\n            const factor = -envelope(undampedFreq) + safeMin > 0 ? -1 : 1;\n            return (factor * ((d - e) * f)) / g;\n        };\n    }\n    else {\n        /**\n         * Critically-damped spring\n         */\n        envelope = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (undampedFreq - velocity) * duration + 1;\n            return -safeMin + a * b;\n        };\n        derivative = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (velocity - undampedFreq) * (duration * duration);\n            return a * b;\n        };\n    }\n    const initialGuess = 5 / duration;\n    const undampedFreq = approximateRoot(envelope, derivative, initialGuess);\n    duration = secondsToMilliseconds(duration);\n    if (isNaN(undampedFreq)) {\n        return {\n            stiffness: springDefaults.stiffness,\n            damping: springDefaults.damping,\n            duration,\n        };\n    }\n    else {\n        const stiffness = Math.pow(undampedFreq, 2) * mass;\n        return {\n            stiffness,\n            damping: dampingRatio * 2 * Math.sqrt(mass * stiffness),\n            duration,\n        };\n    }\n}\nconst rootIterations = 12;\nfunction approximateRoot(envelope, derivative, initialGuess) {\n    let result = initialGuess;\n    for (let i = 1; i < rootIterations; i++) {\n        result = result - envelope(result) / derivative(result);\n    }\n    return result;\n}\nfunction calcAngularFreq(undampedFreq, dampingRatio) {\n    return undampedFreq * Math.sqrt(1 - dampingRatio * dampingRatio);\n}\n\nexport { calcAngularFreq, findSpring };\n","import { millisecondsToSeconds, secondsToMilliseconds, clamp } from 'motion-utils';\nimport { generateLinearEasing } from '../../waapi/utils/linear.mjs';\nimport { calcGeneratorDuration, maxGeneratorDuration } from '../utils/calc-duration.mjs';\nimport { createGeneratorEasing } from '../utils/create-generator-easing.mjs';\nimport { calcGeneratorVelocity } from '../utils/velocity.mjs';\nimport { springDefaults } from './defaults.mjs';\nimport { findSpring, calcAngularFreq } from './find.mjs';\n\nconst durationKeys = [\"duration\", \"bounce\"];\nconst physicsKeys = [\"stiffness\", \"damping\", \"mass\"];\nfunction isSpringType(options, keys) {\n    return keys.some((key) => options[key] !== undefined);\n}\nfunction getSpringOptions(options) {\n    let springOptions = {\n        velocity: springDefaults.velocity,\n        stiffness: springDefaults.stiffness,\n        damping: springDefaults.damping,\n        mass: springDefaults.mass,\n        isResolvedFromDuration: false,\n        ...options,\n    };\n    // stiffness/damping/mass overrides duration/bounce\n    if (!isSpringType(options, physicsKeys) &&\n        isSpringType(options, durationKeys)) {\n        if (options.visualDuration) {\n            const visualDuration = options.visualDuration;\n            const root = (2 * Math.PI) / (visualDuration * 1.2);\n            const stiffness = root * root;\n            const damping = 2 *\n                clamp(0.05, 1, 1 - (options.bounce || 0)) *\n                Math.sqrt(stiffness);\n            springOptions = {\n                ...springOptions,\n                mass: springDefaults.mass,\n                stiffness,\n                damping,\n            };\n        }\n        else {\n            const derived = findSpring(options);\n            springOptions = {\n                ...springOptions,\n                ...derived,\n                mass: springDefaults.mass,\n            };\n            springOptions.isResolvedFromDuration = true;\n        }\n    }\n    return springOptions;\n}\nfunction spring(optionsOrVisualDuration = springDefaults.visualDuration, bounce = springDefaults.bounce) {\n    const options = typeof optionsOrVisualDuration !== \"object\"\n        ? {\n            visualDuration: optionsOrVisualDuration,\n            keyframes: [0, 1],\n            bounce,\n        }\n        : optionsOrVisualDuration;\n    let { restSpeed, restDelta } = options;\n    const origin = options.keyframes[0];\n    const target = options.keyframes[options.keyframes.length - 1];\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    const { stiffness, damping, mass, duration, velocity, isResolvedFromDuration, } = getSpringOptions({\n        ...options,\n        velocity: -millisecondsToSeconds(options.velocity || 0),\n    });\n    const initialVelocity = velocity || 0.0;\n    const dampingRatio = damping / (2 * Math.sqrt(stiffness * mass));\n    const initialDelta = target - origin;\n    const undampedAngularFreq = millisecondsToSeconds(Math.sqrt(stiffness / mass));\n    /**\n     * If we're working on a granular scale, use smaller defaults for determining\n     * when the spring is finished.\n     *\n     * These defaults have been selected emprically based on what strikes a good\n     * ratio between feeling good and finishing as soon as changes are imperceptible.\n     */\n    const isGranularScale = Math.abs(initialDelta) < 5;\n    restSpeed || (restSpeed = isGranularScale\n        ? springDefaults.restSpeed.granular\n        : springDefaults.restSpeed.default);\n    restDelta || (restDelta = isGranularScale\n        ? springDefaults.restDelta.granular\n        : springDefaults.restDelta.default);\n    let resolveSpring;\n    if (dampingRatio < 1) {\n        const angularFreq = calcAngularFreq(undampedAngularFreq, dampingRatio);\n        // Underdamped spring\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            return (target -\n                envelope *\n                    (((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) /\n                        angularFreq) *\n                        Math.sin(angularFreq * t) +\n                        initialDelta * Math.cos(angularFreq * t)));\n        };\n    }\n    else if (dampingRatio === 1) {\n        // Critically damped spring\n        resolveSpring = (t) => target -\n            Math.exp(-undampedAngularFreq * t) *\n                (initialDelta +\n                    (initialVelocity + undampedAngularFreq * initialDelta) * t);\n    }\n    else {\n        // Overdamped spring\n        const dampedAngularFreq = undampedAngularFreq * Math.sqrt(dampingRatio * dampingRatio - 1);\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            // When performing sinh or cosh values can hit Infinity so we cap them here\n            const freqForT = Math.min(dampedAngularFreq * t, 300);\n            return (target -\n                (envelope *\n                    ((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) *\n                        Math.sinh(freqForT) +\n                        dampedAngularFreq *\n                            initialDelta *\n                            Math.cosh(freqForT))) /\n                    dampedAngularFreq);\n        };\n    }\n    const generator = {\n        calculatedDuration: isResolvedFromDuration ? duration || null : null,\n        next: (t) => {\n            const current = resolveSpring(t);\n            if (!isResolvedFromDuration) {\n                let currentVelocity = t === 0 ? initialVelocity : 0.0;\n                /**\n                 * We only need to calculate velocity for under-damped springs\n                 * as over- and critically-damped springs can't overshoot, so\n                 * checking only for displacement is enough.\n                 */\n                if (dampingRatio < 1) {\n                    currentVelocity =\n                        t === 0\n                            ? secondsToMilliseconds(initialVelocity)\n                            : calcGeneratorVelocity(resolveSpring, t, current);\n                }\n                const isBelowVelocityThreshold = Math.abs(currentVelocity) <= restSpeed;\n                const isBelowDisplacementThreshold = Math.abs(target - current) <= restDelta;\n                state.done =\n                    isBelowVelocityThreshold && isBelowDisplacementThreshold;\n            }\n            else {\n                state.done = t >= duration;\n            }\n            state.value = state.done ? target : current;\n            return state;\n        },\n        toString: () => {\n            const calculatedDuration = Math.min(calcGeneratorDuration(generator), maxGeneratorDuration);\n            const easing = generateLinearEasing((progress) => generator.next(calculatedDuration * progress).value, calculatedDuration, 30);\n            return calculatedDuration + \"ms \" + easing;\n        },\n        toTransition: () => { },\n    };\n    return generator;\n}\nspring.applyToOptions = (options) => {\n    const generatorOptions = createGeneratorEasing(options, 100, spring);\n    options.ease = generatorOptions.ease;\n    options.duration = secondsToMilliseconds(generatorOptions.duration);\n    options.type = \"keyframes\";\n    return options;\n};\n\nexport { spring };\n","import { color } from '../color/index.mjs';\nimport { complex } from '../complex/index.mjs';\nimport { dimensionValueTypes } from '../dimensions.mjs';\nimport { testValueType } from '../test.mjs';\n\n/**\n * A list of all ValueTypes\n */\nconst valueTypes = [...dimensionValueTypes, color, complex];\n/**\n * Tests a value against the list of ValueTypes\n */\nconst findValueType = (v) => valueTypes.find(testValueType(v));\n\nexport { findValueType };\n","// Does this device prefer reduced motion? Returns `null` server-side.\nconst prefersReducedMotion = { current: null };\nconst hasReducedMotionListener = { current: false };\n\nexport { hasReducedMotionListener, prefersReducedMotion };\n","import { KeyframeResolver, time, frame, isMotionValue, cancelFrame, transformProps, motionValue, findValueType, complex, getAnimatableNone } from 'motion-dom';\nimport { warnOnce, isNumericalString, isZeroValueString, SubscriptionManager } from 'motion-utils';\nimport { featureDefinitions } from '../motion/features/definitions.mjs';\nimport { createBox } from '../projection/geometry/models.mjs';\nimport { initPrefersReducedMotion } from '../utils/reduced-motion/index.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from '../utils/reduced-motion/state.mjs';\nimport { visualElementStore } from './store.mjs';\nimport { isControllingVariants, isVariantNode } from './utils/is-controlling-variants.mjs';\nimport { updateMotionValuesFromProps } from './utils/motion-values.mjs';\nimport { resolveVariantFromProps } from './utils/resolve-variants.mjs';\n\nconst propEventHandlers = [\n    \"AnimationStart\",\n    \"AnimationComplete\",\n    \"Update\",\n    \"BeforeLayoutMeasure\",\n    \"LayoutMeasure\",\n    \"LayoutAnimationStart\",\n    \"LayoutAnimationComplete\",\n];\n/**\n * A VisualElement is an imperative abstraction around UI elements such as\n * HTMLElement, SVGElement, Three.Object3D etc.\n */\nclass VisualElement {\n    /**\n     * This method takes React props and returns found MotionValues. For example, HTML\n     * MotionValues will be found within the style prop, whereas for Three.js within attribute arrays.\n     *\n     * This isn't an abstract method as it needs calling in the constructor, but it is\n     * intended to be one.\n     */\n    scrapeMotionValuesFromProps(_props, _prevProps, _visualElement) {\n        return {};\n    }\n    constructor({ parent, props, presenceContext, reducedMotionConfig, blockInitialAnimation, visualState, }, options = {}) {\n        /**\n         * A reference to the current underlying Instance, e.g. a HTMLElement\n         * or Three.Mesh etc.\n         */\n        this.current = null;\n        /**\n         * A set containing references to this VisualElement's children.\n         */\n        this.children = new Set();\n        /**\n         * Determine what role this visual element should take in the variant tree.\n         */\n        this.isVariantNode = false;\n        this.isControllingVariants = false;\n        /**\n         * Decides whether this VisualElement should animate in reduced motion\n         * mode.\n         *\n         * TODO: This is currently set on every individual VisualElement but feels\n         * like it could be set globally.\n         */\n        this.shouldReduceMotion = null;\n        /**\n         * A map of all motion values attached to this visual element. Motion\n         * values are source of truth for any given animated value. A motion\n         * value might be provided externally by the component via props.\n         */\n        this.values = new Map();\n        this.KeyframeResolver = KeyframeResolver;\n        /**\n         * Cleanup functions for active features (hover/tap/exit etc)\n         */\n        this.features = {};\n        /**\n         * A map of every subscription that binds the provided or generated\n         * motion values onChange listeners to this visual element.\n         */\n        this.valueSubscriptions = new Map();\n        /**\n         * A reference to the previously-provided motion values as returned\n         * from scrapeMotionValuesFromProps. We use the keys in here to determine\n         * if any motion values need to be removed after props are updated.\n         */\n        this.prevMotionValues = {};\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        /**\n         * An object containing an unsubscribe function for each prop event subscription.\n         * For example, every \"Update\" event can have multiple subscribers via\n         * VisualElement.on(), but only one of those can be defined via the onUpdate prop.\n         */\n        this.propEventSubscriptions = {};\n        this.notifyUpdate = () => this.notify(\"Update\", this.latestValues);\n        this.render = () => {\n            if (!this.current)\n                return;\n            this.triggerBuild();\n            this.renderInstance(this.current, this.renderState, this.props.style, this.projection);\n        };\n        this.renderScheduledAt = 0.0;\n        this.scheduleRender = () => {\n            const now = time.now();\n            if (this.renderScheduledAt < now) {\n                this.renderScheduledAt = now;\n                frame.render(this.render, false, true);\n            }\n        };\n        const { latestValues, renderState } = visualState;\n        this.latestValues = latestValues;\n        this.baseTarget = { ...latestValues };\n        this.initialValues = props.initial ? { ...latestValues } : {};\n        this.renderState = renderState;\n        this.parent = parent;\n        this.props = props;\n        this.presenceContext = presenceContext;\n        this.depth = parent ? parent.depth + 1 : 0;\n        this.reducedMotionConfig = reducedMotionConfig;\n        this.options = options;\n        this.blockInitialAnimation = Boolean(blockInitialAnimation);\n        this.isControllingVariants = isControllingVariants(props);\n        this.isVariantNode = isVariantNode(props);\n        if (this.isVariantNode) {\n            this.variantChildren = new Set();\n        }\n        this.manuallyAnimateOnMount = Boolean(parent && parent.current);\n        /**\n         * Any motion values that are provided to the element when created\n         * aren't yet bound to the element, as this would technically be impure.\n         * However, we iterate through the motion values and set them to the\n         * initial values for this component.\n         *\n         * TODO: This is impure and we should look at changing this to run on mount.\n         * Doing so will break some tests but this isn't necessarily a breaking change,\n         * more a reflection of the test.\n         */\n        const { willChange, ...initialMotionValues } = this.scrapeMotionValuesFromProps(props, {}, this);\n        for (const key in initialMotionValues) {\n            const value = initialMotionValues[key];\n            if (latestValues[key] !== undefined && isMotionValue(value)) {\n                value.set(latestValues[key], false);\n            }\n        }\n    }\n    mount(instance) {\n        this.current = instance;\n        visualElementStore.set(instance, this);\n        if (this.projection && !this.projection.instance) {\n            this.projection.mount(instance);\n        }\n        if (this.parent && this.isVariantNode && !this.isControllingVariants) {\n            this.removeFromVariantTree = this.parent.addVariantChild(this);\n        }\n        this.values.forEach((value, key) => this.bindToMotionValue(key, value));\n        if (!hasReducedMotionListener.current) {\n            initPrefersReducedMotion();\n        }\n        this.shouldReduceMotion =\n            this.reducedMotionConfig === \"never\"\n                ? false\n                : this.reducedMotionConfig === \"always\"\n                    ? true\n                    : prefersReducedMotion.current;\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(this.shouldReduceMotion !== true, \"You have Reduced Motion enabled on your device. Animations may not appear as expected.\");\n        }\n        if (this.parent)\n            this.parent.children.add(this);\n        this.update(this.props, this.presenceContext);\n    }\n    unmount() {\n        this.projection && this.projection.unmount();\n        cancelFrame(this.notifyUpdate);\n        cancelFrame(this.render);\n        this.valueSubscriptions.forEach((remove) => remove());\n        this.valueSubscriptions.clear();\n        this.removeFromVariantTree && this.removeFromVariantTree();\n        this.parent && this.parent.children.delete(this);\n        for (const key in this.events) {\n            this.events[key].clear();\n        }\n        for (const key in this.features) {\n            const feature = this.features[key];\n            if (feature) {\n                feature.unmount();\n                feature.isMounted = false;\n            }\n        }\n        this.current = null;\n    }\n    bindToMotionValue(key, value) {\n        if (this.valueSubscriptions.has(key)) {\n            this.valueSubscriptions.get(key)();\n        }\n        const valueIsTransform = transformProps.has(key);\n        if (valueIsTransform && this.onBindTransform) {\n            this.onBindTransform();\n        }\n        const removeOnChange = value.on(\"change\", (latestValue) => {\n            this.latestValues[key] = latestValue;\n            this.props.onUpdate && frame.preRender(this.notifyUpdate);\n            if (valueIsTransform && this.projection) {\n                this.projection.isTransformDirty = true;\n            }\n        });\n        const removeOnRenderRequest = value.on(\"renderRequest\", this.scheduleRender);\n        let removeSyncCheck;\n        if (window.MotionCheckAppearSync) {\n            removeSyncCheck = window.MotionCheckAppearSync(this, key, value);\n        }\n        this.valueSubscriptions.set(key, () => {\n            removeOnChange();\n            removeOnRenderRequest();\n            if (removeSyncCheck)\n                removeSyncCheck();\n            if (value.owner)\n                value.stop();\n        });\n    }\n    sortNodePosition(other) {\n        /**\n         * If these nodes aren't even of the same type we can't compare their depth.\n         */\n        if (!this.current ||\n            !this.sortInstanceNodePosition ||\n            this.type !== other.type) {\n            return 0;\n        }\n        return this.sortInstanceNodePosition(this.current, other.current);\n    }\n    updateFeatures() {\n        let key = \"animation\";\n        for (key in featureDefinitions) {\n            const featureDefinition = featureDefinitions[key];\n            if (!featureDefinition)\n                continue;\n            const { isEnabled, Feature: FeatureConstructor } = featureDefinition;\n            /**\n             * If this feature is enabled but not active, make a new instance.\n             */\n            if (!this.features[key] &&\n                FeatureConstructor &&\n                isEnabled(this.props)) {\n                this.features[key] = new FeatureConstructor(this);\n            }\n            /**\n             * If we have a feature, mount or update it.\n             */\n            if (this.features[key]) {\n                const feature = this.features[key];\n                if (feature.isMounted) {\n                    feature.update();\n                }\n                else {\n                    feature.mount();\n                    feature.isMounted = true;\n                }\n            }\n        }\n    }\n    triggerBuild() {\n        this.build(this.renderState, this.latestValues, this.props);\n    }\n    /**\n     * Measure the current viewport box with or without transforms.\n     * Only measures axis-aligned boxes, rotate and skew must be manually\n     * removed with a re-render to work.\n     */\n    measureViewportBox() {\n        return this.current\n            ? this.measureInstanceViewportBox(this.current, this.props)\n            : createBox();\n    }\n    getStaticValue(key) {\n        return this.latestValues[key];\n    }\n    setStaticValue(key, value) {\n        this.latestValues[key] = value;\n    }\n    /**\n     * Update the provided props. Ensure any newly-added motion values are\n     * added to our map, old ones removed, and listeners updated.\n     */\n    update(props, presenceContext) {\n        if (props.transformTemplate || this.props.transformTemplate) {\n            this.scheduleRender();\n        }\n        this.prevProps = this.props;\n        this.props = props;\n        this.prevPresenceContext = this.presenceContext;\n        this.presenceContext = presenceContext;\n        /**\n         * Update prop event handlers ie onAnimationStart, onAnimationComplete\n         */\n        for (let i = 0; i < propEventHandlers.length; i++) {\n            const key = propEventHandlers[i];\n            if (this.propEventSubscriptions[key]) {\n                this.propEventSubscriptions[key]();\n                delete this.propEventSubscriptions[key];\n            }\n            const listenerName = (\"on\" + key);\n            const listener = props[listenerName];\n            if (listener) {\n                this.propEventSubscriptions[key] = this.on(key, listener);\n            }\n        }\n        this.prevMotionValues = updateMotionValuesFromProps(this, this.scrapeMotionValuesFromProps(props, this.prevProps, this), this.prevMotionValues);\n        if (this.handleChildMotionValue) {\n            this.handleChildMotionValue();\n        }\n    }\n    getProps() {\n        return this.props;\n    }\n    /**\n     * Returns the variant definition with a given name.\n     */\n    getVariant(name) {\n        return this.props.variants ? this.props.variants[name] : undefined;\n    }\n    /**\n     * Returns the defined default transition on this component.\n     */\n    getDefaultTransition() {\n        return this.props.transition;\n    }\n    getTransformPagePoint() {\n        return this.props.transformPagePoint;\n    }\n    getClosestVariantNode() {\n        return this.isVariantNode\n            ? this\n            : this.parent\n                ? this.parent.getClosestVariantNode()\n                : undefined;\n    }\n    /**\n     * Add a child visual element to our set of children.\n     */\n    addVariantChild(child) {\n        const closestVariantNode = this.getClosestVariantNode();\n        if (closestVariantNode) {\n            closestVariantNode.variantChildren &&\n                closestVariantNode.variantChildren.add(child);\n            return () => closestVariantNode.variantChildren.delete(child);\n        }\n    }\n    /**\n     * Add a motion value and bind it to this visual element.\n     */\n    addValue(key, value) {\n        // Remove existing value if it exists\n        const existingValue = this.values.get(key);\n        if (value !== existingValue) {\n            if (existingValue)\n                this.removeValue(key);\n            this.bindToMotionValue(key, value);\n            this.values.set(key, value);\n            this.latestValues[key] = value.get();\n        }\n    }\n    /**\n     * Remove a motion value and unbind any active subscriptions.\n     */\n    removeValue(key) {\n        this.values.delete(key);\n        const unsubscribe = this.valueSubscriptions.get(key);\n        if (unsubscribe) {\n            unsubscribe();\n            this.valueSubscriptions.delete(key);\n        }\n        delete this.latestValues[key];\n        this.removeValueFromRenderState(key, this.renderState);\n    }\n    /**\n     * Check whether we have a motion value for this key\n     */\n    hasValue(key) {\n        return this.values.has(key);\n    }\n    getValue(key, defaultValue) {\n        if (this.props.values && this.props.values[key]) {\n            return this.props.values[key];\n        }\n        let value = this.values.get(key);\n        if (value === undefined && defaultValue !== undefined) {\n            value = motionValue(defaultValue === null ? undefined : defaultValue, { owner: this });\n            this.addValue(key, value);\n        }\n        return value;\n    }\n    /**\n     * If we're trying to animate to a previously unencountered value,\n     * we need to check for it in our state and as a last resort read it\n     * directly from the instance (which might have performance implications).\n     */\n    readValue(key, target) {\n        let value = this.latestValues[key] !== undefined || !this.current\n            ? this.latestValues[key]\n            : this.getBaseTargetFromProps(this.props, key) ??\n                this.readValueFromInstance(this.current, key, this.options);\n        if (value !== undefined && value !== null) {\n            if (typeof value === \"string\" &&\n                (isNumericalString(value) || isZeroValueString(value))) {\n                // If this is a number read as a string, ie \"0\" or \"200\", convert it to a number\n                value = parseFloat(value);\n            }\n            else if (!findValueType(value) && complex.test(target)) {\n                value = getAnimatableNone(key, target);\n            }\n            this.setBaseTarget(key, isMotionValue(value) ? value.get() : value);\n        }\n        return isMotionValue(value) ? value.get() : value;\n    }\n    /**\n     * Set the base target to later animate back to. This is currently\n     * only hydrated on creation and when we first read a value.\n     */\n    setBaseTarget(key, value) {\n        this.baseTarget[key] = value;\n    }\n    /**\n     * Find the base target for a value thats been removed from all animation\n     * props.\n     */\n    getBaseTarget(key) {\n        const { initial } = this.props;\n        let valueFromInitial;\n        if (typeof initial === \"string\" || typeof initial === \"object\") {\n            const variant = resolveVariantFromProps(this.props, initial, this.presenceContext?.custom);\n            if (variant) {\n                valueFromInitial = variant[key];\n            }\n        }\n        /**\n         * If this value still exists in the current initial variant, read that.\n         */\n        if (initial && valueFromInitial !== undefined) {\n            return valueFromInitial;\n        }\n        /**\n         * Alternatively, if this VisualElement config has defined a getBaseTarget\n         * so we can read the value from an alternative source, try that.\n         */\n        const target = this.getBaseTargetFromProps(this.props, key);\n        if (target !== undefined && !isMotionValue(target))\n            return target;\n        /**\n         * If the value was initially defined on initial, but it doesn't any more,\n         * return undefined. Otherwise return the value as initially read from the DOM.\n         */\n        return this.initialValues[key] !== undefined &&\n            valueFromInitial === undefined\n            ? undefined\n            : this.baseTarget[key];\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        return this.events[eventName].add(callback);\n    }\n    notify(eventName, ...args) {\n        if (this.events[eventName]) {\n            this.events[eventName].notify(...args);\n        }\n    }\n}\n\nexport { VisualElement };\n","import { isBrowser } from '../is-browser.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from './state.mjs';\n\nfunction initPrefersReducedMotion() {\n    hasReducedMotionListener.current = true;\n    if (!isBrowser)\n        return;\n    if (window.matchMedia) {\n        const motionMediaQuery = window.matchMedia(\"(prefers-reduced-motion)\");\n        const setReducedMotionPreferences = () => (prefersReducedMotion.current = motionMediaQuery.matches);\n        motionMediaQuery.addListener(setReducedMotionPreferences);\n        setReducedMotionPreferences();\n    }\n    else {\n        prefersReducedMotion.current = false;\n    }\n}\n\nexport { initPrefersReducedMotion };\n","import { isMotionValue, motionValue } from 'motion-dom';\n\nfunction updateMotionValuesFromProps(element, next, prev) {\n    for (const key in next) {\n        const nextValue = next[key];\n        const prevValue = prev[key];\n        if (isMotionValue(nextValue)) {\n            /**\n             * If this is a motion value found in props or style, we want to add it\n             * to our visual element's motion value map.\n             */\n            element.addValue(key, nextValue);\n        }\n        else if (isMotionValue(prevValue)) {\n            /**\n             * If we're swapping from a motion value to a static value,\n             * create a new motion value from that\n             */\n            element.addValue(key, motionValue(nextValue, { owner: element }));\n        }\n        else if (prevValue !== nextValue) {\n            /**\n             * If this is a flat value that has changed, update the motion value\n             * or create one if it doesn't exist. We only want to do this if we're\n             * not handling the value with our animation state.\n             */\n            if (element.hasValue(key)) {\n                const existingValue = element.getValue(key);\n                if (existingValue.liveStyle === true) {\n                    existingValue.jump(nextValue);\n                }\n                else if (!existingValue.hasAnimated) {\n                    existingValue.set(nextValue);\n                }\n            }\n            else {\n                const latestValue = element.getStaticValue(key);\n                element.addValue(key, motionValue(latestValue !== undefined ? latestValue : nextValue, { owner: element }));\n            }\n        }\n    }\n    // Handle removed values\n    for (const key in prev) {\n        if (next[key] === undefined)\n            element.removeValue(key);\n    }\n    return next;\n}\n\nexport { updateMotionValuesFromProps };\n","function getValueTransition(transition, key) {\n    return (transition?.[key] ??\n        transition?.[\"default\"] ??\n        transition);\n}\n\nexport { getValueTransition };\n","import { useContext, useId, useEffect, useCallback } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\n\n/**\n * When a component is the child of `AnimatePresence`, it can use `usePresence`\n * to access information about whether it's still present in the React tree.\n *\n * ```jsx\n * import { usePresence } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const [isPresent, safeToRemove] = usePresence()\n *\n *   useEffect(() => {\n *     !isPresent && setTimeout(safeToRemove, 1000)\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * If `isPresent` is `false`, it means that a component has been removed the tree, but\n * `AnimatePresence` won't really remove it until `safeToRemove` has been called.\n *\n * @public\n */\nfunction usePresence(subscribe = true) {\n    const context = useContext(PresenceContext);\n    if (context === null)\n        return [true, null];\n    const { isPresent, onExitComplete, register } = context;\n    // It's safe to call the following hooks conditionally (after an early return) because the context will always\n    // either be null or non-null for the lifespan of the component.\n    const id = useId();\n    useEffect(() => {\n        if (subscribe) {\n            return register(id);\n        }\n    }, [subscribe]);\n    const safeToRemove = useCallback(() => subscribe && onExitComplete && onExitComplete(id), [id, onExitComplete, subscribe]);\n    return !isPresent && onExitComplete ? [false, safeToRemove] : [true];\n}\n/**\n * Similar to `usePresence`, except `useIsPresent` simply returns whether or not the component is present.\n * There is no `safeToRemove` function.\n *\n * ```jsx\n * import { useIsPresent } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const isPresent = useIsPresent()\n *\n *   useEffect(() => {\n *     !isPresent && console.log(\"I've been removed!\")\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * @public\n */\nfunction useIsPresent() {\n    return isPresent(useContext(PresenceContext));\n}\nfunction isPresent(context) {\n    return context === null ? true : context.isPresent;\n}\n\nexport { isPresent, useIsPresent, usePresence };\n","// Accepts an easing function and returns a new one that outputs mirrored values for\n// the second half of the animation. Turns easeIn into easeInOut.\nconst mirrorEasing = (easing) => (p) => p <= 0.5 ? easing(2 * p) / 2 : (2 - easing(2 * (1 - p))) / 2;\n\nexport { mirrorEasing };\n","// Adapted from https://gist.github.com/mjackson/5311256\nfunction hueToRgb(p, q, t) {\n    if (t < 0)\n        t += 1;\n    if (t > 1)\n        t -= 1;\n    if (t < 1 / 6)\n        return p + (q - p) * 6 * t;\n    if (t < 1 / 2)\n        return q;\n    if (t < 2 / 3)\n        return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\nfunction hslaToRgba({ hue, saturation, lightness, alpha }) {\n    hue /= 360;\n    saturation /= 100;\n    lightness /= 100;\n    let red = 0;\n    let green = 0;\n    let blue = 0;\n    if (!saturation) {\n        red = green = blue = lightness;\n    }\n    else {\n        const q = lightness < 0.5\n            ? lightness * (1 + saturation)\n            : lightness + saturation - lightness * saturation;\n        const p = 2 * lightness - q;\n        red = hueToRgb(p, q, hue + 1 / 3);\n        green = hueToRgb(p, q, hue);\n        blue = hueToRgb(p, q, hue - 1 / 3);\n    }\n    return {\n        red: Math.round(red * 255),\n        green: Math.round(green * 255),\n        blue: Math.round(blue * 255),\n        alpha,\n    };\n}\n\nexport { hslaToRgba };\n","function mixImmediate(a, b) {\n    return (p) => (p > 0 ? b : a);\n}\n\nexport { mixImmediate };\n","import { warning } from 'motion-utils';\nimport { hex } from '../../value/types/color/hex.mjs';\nimport { hsla } from '../../value/types/color/hsla.mjs';\nimport { hslaToRgba } from '../../value/types/color/hsla-to-rgba.mjs';\nimport { rgba } from '../../value/types/color/rgba.mjs';\nimport { mixImmediate } from './immediate.mjs';\nimport { mixNumber } from './number.mjs';\n\n// Linear color space blending\n// Explained https://www.youtube.com/watch?v=LKnqECcg6Gw\n// Demonstrated http://codepen.io/osublake/pen/xGVVaN\nconst mixLinearColor = (from, to, v) => {\n    const fromExpo = from * from;\n    const expo = v * (to * to - fromExpo) + fromExpo;\n    return expo < 0 ? 0 : Math.sqrt(expo);\n};\nconst colorTypes = [hex, rgba, hsla];\nconst getColorType = (v) => colorTypes.find((type) => type.test(v));\nfunction asRGBA(color) {\n    const type = getColorType(color);\n    warning(Boolean(type), `'${color}' is not an animatable color. Use the equivalent color code instead.`);\n    if (!Boolean(type))\n        return false;\n    let model = type.parse(color);\n    if (type === hsla) {\n        // TODO Remove this cast - needed since Motion's stricter typing\n        model = hslaToRgba(model);\n    }\n    return model;\n}\nconst mixColor = (from, to) => {\n    const fromRGBA = asRGBA(from);\n    const toRGBA = asRGBA(to);\n    if (!fromRGBA || !toRGBA) {\n        return mixImmediate(from, to);\n    }\n    const blended = { ...fromRGBA };\n    return (v) => {\n        blended.red = mixLinearColor(fromRGBA.red, toRGBA.red, v);\n        blended.green = mixLinearColor(fromRGBA.green, toRGBA.green, v);\n        blended.blue = mixLinearColor(fromRGBA.blue, toRGBA.blue, v);\n        blended.alpha = mixNumber(fromRGBA.alpha, toRGBA.alpha, v);\n        return rgba.transform(blended);\n    };\n};\n\nexport { mixColor, mixLinearColor };\n","const invisibleValues = new Set([\"none\", \"hidden\"]);\n/**\n * Returns a function that, when provided a progress value between 0 and 1,\n * will return the \"none\" or \"hidden\" string only when the progress is that of\n * the origin or target.\n */\nfunction mixVisibility(origin, target) {\n    if (invisibleValues.has(origin)) {\n        return (p) => (p <= 0 ? origin : target);\n    }\n    else {\n        return (p) => (p >= 1 ? target : origin);\n    }\n}\n\nexport { invisibleValues, mixVisibility };\n","import { pipe, warning } from 'motion-utils';\nimport { isCSSVariableToken } from '../../animation/utils/is-css-variable.mjs';\nimport { color } from '../../value/types/color/index.mjs';\nimport { complex, analyseComplexValue } from '../../value/types/complex/index.mjs';\nimport { mixColor } from './color.mjs';\nimport { mixImmediate } from './immediate.mjs';\nimport { mixNumber as mixNumber$1 } from './number.mjs';\nimport { invisibleValues, mixVisibility } from './visibility.mjs';\n\nfunction mixNumber(a, b) {\n    return (p) => mixNumber$1(a, b, p);\n}\nfunction getMixer(a) {\n    if (typeof a === \"number\") {\n        return mixNumber;\n    }\n    else if (typeof a === \"string\") {\n        return isCSSVariableToken(a)\n            ? mixImmediate\n            : color.test(a)\n                ? mixColor\n                : mixComplex;\n    }\n    else if (Array.isArray(a)) {\n        return mixArray;\n    }\n    else if (typeof a === \"object\") {\n        return color.test(a) ? mixColor : mixObject;\n    }\n    return mixImmediate;\n}\nfunction mixArray(a, b) {\n    const output = [...a];\n    const numValues = output.length;\n    const blendValue = a.map((v, i) => getMixer(v)(v, b[i]));\n    return (p) => {\n        for (let i = 0; i < numValues; i++) {\n            output[i] = blendValue[i](p);\n        }\n        return output;\n    };\n}\nfunction mixObject(a, b) {\n    const output = { ...a, ...b };\n    const blendValue = {};\n    for (const key in output) {\n        if (a[key] !== undefined && b[key] !== undefined) {\n            blendValue[key] = getMixer(a[key])(a[key], b[key]);\n        }\n    }\n    return (v) => {\n        for (const key in blendValue) {\n            output[key] = blendValue[key](v);\n        }\n        return output;\n    };\n}\nfunction matchOrder(origin, target) {\n    const orderedOrigin = [];\n    const pointers = { color: 0, var: 0, number: 0 };\n    for (let i = 0; i < target.values.length; i++) {\n        const type = target.types[i];\n        const originIndex = origin.indexes[type][pointers[type]];\n        const originValue = origin.values[originIndex] ?? 0;\n        orderedOrigin[i] = originValue;\n        pointers[type]++;\n    }\n    return orderedOrigin;\n}\nconst mixComplex = (origin, target) => {\n    const template = complex.createTransformer(target);\n    const originStats = analyseComplexValue(origin);\n    const targetStats = analyseComplexValue(target);\n    const canInterpolate = originStats.indexes.var.length === targetStats.indexes.var.length &&\n        originStats.indexes.color.length === targetStats.indexes.color.length &&\n        originStats.indexes.number.length >= targetStats.indexes.number.length;\n    if (canInterpolate) {\n        if ((invisibleValues.has(origin) &&\n            !targetStats.values.length) ||\n            (invisibleValues.has(target) &&\n                !originStats.values.length)) {\n            return mixVisibility(origin, target);\n        }\n        return pipe(mixArray(matchOrder(originStats, targetStats), targetStats.values), template);\n    }\n    else {\n        warning(true, `Complex values '${origin}' and '${target}' too different to mix. Ensure all colors are of the same type, and that each contains the same quantity of number and color values. Falling back to instant transition.`);\n        return mixImmediate(origin, target);\n    }\n};\n\nexport { getMixer, mixArray, mixComplex, mixObject };\n","import { getMixer } from './complex.mjs';\nimport { mixNumber } from './number.mjs';\n\nfunction mix(from, to, p) {\n    if (typeof from === \"number\" &&\n        typeof to === \"number\" &&\n        typeof p === \"number\") {\n        return mixNumber(from, to, p);\n    }\n    const mixer = getMixer(from);\n    return mixer(from, to);\n}\n\nexport { mix };\n","import { time } from '../../frameloop/sync-time.mjs';\nimport { frame, cancelFrame, frameData } from '../../frameloop/frame.mjs';\n\nconst frameloopDriver = (update) => {\n    const passTimestamp = ({ timestamp }) => update(timestamp);\n    return {\n        start: (keepAlive = true) => frame.update(passTimestamp, keepAlive),\n        stop: () => cancelFrame(passTimestamp),\n        /**\n         * If we're processing this frame we can use the\n         * framelocked timestamp to keep things in sync.\n         */\n        now: () => (frameData.isProcessing ? frameData.timestamp : time.now()),\n    };\n};\n\nexport { frameloopDriver };\n","import { spring } from './spring/index.mjs';\nimport { calcGeneratorVelocity } from './utils/velocity.mjs';\n\nfunction inertia({ keyframes, velocity = 0.0, power = 0.8, timeConstant = 325, bounceDamping = 10, bounceStiffness = 500, modifyTarget, min, max, restDelta = 0.5, restSpeed, }) {\n    const origin = keyframes[0];\n    const state = {\n        done: false,\n        value: origin,\n    };\n    const isOutOfBounds = (v) => (min !== undefined && v < min) || (max !== undefined && v > max);\n    const nearestBoundary = (v) => {\n        if (min === undefined)\n            return max;\n        if (max === undefined)\n            return min;\n        return Math.abs(min - v) < Math.abs(max - v) ? min : max;\n    };\n    let amplitude = power * velocity;\n    const ideal = origin + amplitude;\n    const target = modifyTarget === undefined ? ideal : modifyTarget(ideal);\n    /**\n     * If the target has changed we need to re-calculate the amplitude, otherwise\n     * the animation will start from the wrong position.\n     */\n    if (target !== ideal)\n        amplitude = target - origin;\n    const calcDelta = (t) => -amplitude * Math.exp(-t / timeConstant);\n    const calcLatest = (t) => target + calcDelta(t);\n    const applyFriction = (t) => {\n        const delta = calcDelta(t);\n        const latest = calcLatest(t);\n        state.done = Math.abs(delta) <= restDelta;\n        state.value = state.done ? target : latest;\n    };\n    /**\n     * Ideally this would resolve for t in a stateless way, we could\n     * do that by always precalculating the animation but as we know\n     * this will be done anyway we can assume that spring will\n     * be discovered during that.\n     */\n    let timeReachedBoundary;\n    let spring$1;\n    const checkCatchBoundary = (t) => {\n        if (!isOutOfBounds(state.value))\n            return;\n        timeReachedBoundary = t;\n        spring$1 = spring({\n            keyframes: [state.value, nearestBoundary(state.value)],\n            velocity: calcGeneratorVelocity(calcLatest, t, state.value), // TODO: This should be passing * 1000\n            damping: bounceDamping,\n            stiffness: bounceStiffness,\n            restDelta,\n            restSpeed,\n        });\n    };\n    checkCatchBoundary(0);\n    return {\n        calculatedDuration: null,\n        next: (t) => {\n            /**\n             * We need to resolve the friction to figure out if we need a\n             * spring but we don't want to do this twice per frame. So here\n             * we flag if we updated for this frame and later if we did\n             * we can skip doing it again.\n             */\n            let hasUpdatedFrame = false;\n            if (!spring$1 && timeReachedBoundary === undefined) {\n                hasUpdatedFrame = true;\n                applyFriction(t);\n                checkCatchBoundary(t);\n            }\n            /**\n             * If we have a spring and the provided t is beyond the moment the friction\n             * animation crossed the min/max boundary, use the spring.\n             */\n            if (timeReachedBoundary !== undefined && t >= timeReachedBoundary) {\n                return spring$1.next(t - timeReachedBoundary);\n            }\n            else {\n                !hasUpdatedFrame && applyFriction(t);\n                return state;\n            }\n        },\n    };\n}\n\nexport { inertia };\n","import { noop } from '../noop.mjs';\n\n/*\n  Bezier function generator\n  This has been modified from Gaëtan Renaudeau's BezierEasing\n  https://github.com/gre/bezier-easing/blob/master/src/index.js\n  https://github.com/gre/bezier-easing/blob/master/LICENSE\n  \n  I've removed the newtonRaphsonIterate algo because in benchmarking it\n  wasn't noticiably faster than binarySubdivision, indeed removing it\n  usually improved times, depending on the curve.\n  I also removed the lookup table, as for the added bundle size and loop we're\n  only cutting ~4 or so subdivision iterations. I bumped the max iterations up\n  to 12 to compensate and this still tended to be faster for no perceivable\n  loss in accuracy.\n  Usage\n    const easeOut = cubicBezier(.17,.67,.83,.67);\n    const x = easeOut(0.5); // returns 0.627...\n*/\n// Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\nconst calcBezier = (t, a1, a2) => (((1.0 - 3.0 * a2 + 3.0 * a1) * t + (3.0 * a2 - 6.0 * a1)) * t + 3.0 * a1) *\n    t;\nconst subdivisionPrecision = 0.0000001;\nconst subdivisionMaxIterations = 12;\nfunction binarySubdivide(x, lowerBound, upperBound, mX1, mX2) {\n    let currentX;\n    let currentT;\n    let i = 0;\n    do {\n        currentT = lowerBound + (upperBound - lowerBound) / 2.0;\n        currentX = calcBezier(currentT, mX1, mX2) - x;\n        if (currentX > 0.0) {\n            upperBound = currentT;\n        }\n        else {\n            lowerBound = currentT;\n        }\n    } while (Math.abs(currentX) > subdivisionPrecision &&\n        ++i < subdivisionMaxIterations);\n    return currentT;\n}\nfunction cubicBezier(mX1, mY1, mX2, mY2) {\n    // If this is a linear gradient, return linear easing\n    if (mX1 === mY1 && mX2 === mY2)\n        return noop;\n    const getTForX = (aX) => binarySubdivide(aX, 0, 1, mX1, mX2);\n    // If animation is at start/end, return t without easing\n    return (t) => t === 0 || t === 1 ? t : calcBezier(getTForX(t), mY1, mY2);\n}\n\nexport { cubicBezier };\n","import { cubicBezier } from './cubic-bezier.mjs';\n\nconst easeIn = /*@__PURE__*/ cubicBezier(0.42, 0, 1, 1);\nconst easeOut = /*@__PURE__*/ cubicBezier(0, 0, 0.58, 1);\nconst easeInOut = /*@__PURE__*/ cubicBezier(0.42, 0, 0.58, 1);\n\nexport { easeIn, easeInOut, easeOut };\n","import { cubicBezier } from './cubic-bezier.mjs';\nimport { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst backOut = /*@__PURE__*/ cubicBezier(0.33, 1.53, 0.69, 0.99);\nconst backIn = /*@__PURE__*/ reverseEasing(backOut);\nconst backInOut = /*@__PURE__*/ mirrorEasing(backIn);\n\nexport { backIn, backInOut, backOut };\n","import { backIn } from './back.mjs';\n\nconst anticipate = (p) => (p *= 2) < 1 ? 0.5 * backIn(p) : 0.5 * (2 - Math.pow(2, -10 * (p - 1)));\n\nexport { anticipate };\n","const isBezierDefinition = (easing) => Array.isArray(easing) && typeof easing[0] === \"number\";\n\nexport { isBezierDefinition };\n","import { invariant } from '../../errors.mjs';\nimport { noop } from '../../noop.mjs';\nimport { anticipate } from '../anticipate.mjs';\nimport { backIn, backInOut, backOut } from '../back.mjs';\nimport { circIn, circInOut, circOut } from '../circ.mjs';\nimport { cubicBezier } from '../cubic-bezier.mjs';\nimport { easeIn, easeInOut, easeOut } from '../ease.mjs';\nimport { isBezierDefinition } from './is-bezier-definition.mjs';\n\nconst easingLookup = {\n    linear: noop,\n    easeIn,\n    easeInOut,\n    easeOut,\n    circIn,\n    circInOut,\n    circOut,\n    backIn,\n    backInOut,\n    backOut,\n    anticipate,\n};\nconst isValidEasing = (easing) => {\n    return typeof easing === \"string\";\n};\nconst easingDefinitionToFunction = (definition) => {\n    if (isBezierDefinition(definition)) {\n        // If cubic bezier definition, create bezier curve\n        invariant(definition.length === 4, `Cubic bezier arrays must contain four numerical values.`);\n        const [x1, y1, x2, y2] = definition;\n        return cubicBezier(x1, y1, x2, y2);\n    }\n    else if (isValidEasing(definition)) {\n        // Else lookup from table\n        invariant(easingLookup[definition] !== undefined, `Invalid easing type '${definition}'`);\n        return easingLookup[definition];\n    }\n    return definition;\n};\n\nexport { easingDefinitionToFunction };\n","import { invariant, clamp, MotionGlobalConfig, noop, pipe, progress } from 'motion-utils';\nimport { mix } from './mix/index.mjs';\n\nfunction createMixers(output, ease, customMixer) {\n    const mixers = [];\n    const mixerFactory = customMixer || MotionGlobalConfig.mix || mix;\n    const numMixers = output.length - 1;\n    for (let i = 0; i < numMixers; i++) {\n        let mixer = mixerFactory(output[i], output[i + 1]);\n        if (ease) {\n            const easingFunction = Array.isArray(ease) ? ease[i] || noop : ease;\n            mixer = pipe(easingFunction, mixer);\n        }\n        mixers.push(mixer);\n    }\n    return mixers;\n}\n/**\n * Create a function that maps from a numerical input array to a generic output array.\n *\n * Accepts:\n *   - Numbers\n *   - Colors (hex, hsl, hsla, rgb, rgba)\n *   - Complex (combinations of one or more numbers or strings)\n *\n * ```jsx\n * const mixColor = interpolate([0, 1], ['#fff', '#000'])\n *\n * mixColor(0.5) // 'rgba(128, 128, 128, 1)'\n * ```\n *\n * TODO Revisit this approach once we've moved to data models for values,\n * probably not needed to pregenerate mixer functions.\n *\n * @public\n */\nfunction interpolate(input, output, { clamp: isClamp = true, ease, mixer } = {}) {\n    const inputLength = input.length;\n    invariant(inputLength === output.length, \"Both input and output ranges must be the same length\");\n    /**\n     * If we're only provided a single input, we can just make a function\n     * that returns the output.\n     */\n    if (inputLength === 1)\n        return () => output[0];\n    if (inputLength === 2 && output[0] === output[1])\n        return () => output[1];\n    const isZeroDeltaRange = input[0] === input[1];\n    // If input runs highest -> lowest, reverse both arrays\n    if (input[0] > input[inputLength - 1]) {\n        input = [...input].reverse();\n        output = [...output].reverse();\n    }\n    const mixers = createMixers(output, ease, mixer);\n    const numMixers = mixers.length;\n    const interpolator = (v) => {\n        if (isZeroDeltaRange && v < input[0])\n            return output[0];\n        let i = 0;\n        if (numMixers > 1) {\n            for (; i < input.length - 2; i++) {\n                if (v < input[i + 1])\n                    break;\n            }\n        }\n        const progressInRange = progress(input[i], input[i + 1], v);\n        return mixers[i](progressInRange);\n    };\n    return isClamp\n        ? (v) => interpolator(clamp(input[0], input[inputLength - 1], v))\n        : interpolator;\n}\n\nexport { interpolate };\n","import { easeInOut, isEasingArray, easingDefinitionToFunction } from 'motion-utils';\nimport { interpolate } from '../../utils/interpolate.mjs';\nimport { defaultOffset } from '../keyframes/offsets/default.mjs';\nimport { convertOffsetToTimes } from '../keyframes/offsets/time.mjs';\n\nfunction defaultEasing(values, easing) {\n    return values.map(() => easing || easeInOut).splice(0, values.length - 1);\n}\nfunction keyframes({ duration = 300, keyframes: keyframeValues, times, ease = \"easeInOut\", }) {\n    /**\n     * Easing functions can be externally defined as strings. Here we convert them\n     * into actual functions.\n     */\n    const easingFunctions = isEasingArray(ease)\n        ? ease.map(easingDefinitionToFunction)\n        : easingDefinitionToFunction(ease);\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = {\n        done: false,\n        value: keyframeValues[0],\n    };\n    /**\n     * Create a times array based on the provided 0-1 offsets\n     */\n    const absoluteTimes = convertOffsetToTimes(\n    // Only use the provided offsets if they're the correct length\n    // TODO Maybe we should warn here if there's a length mismatch\n    times && times.length === keyframeValues.length\n        ? times\n        : defaultOffset(keyframeValues), duration);\n    const mapTimeToKeyframe = interpolate(absoluteTimes, keyframeValues, {\n        ease: Array.isArray(easingFunctions)\n            ? easingFunctions\n            : defaultEasing(keyframeValues, easingFunctions),\n    });\n    return {\n        calculatedDuration: duration,\n        next: (t) => {\n            state.value = mapTimeToKeyframe(t);\n            state.done = t >= duration;\n            return state;\n        },\n    };\n}\n\nexport { defaultEasing, keyframes };\n","function convertOffsetToTimes(offset, duration) {\n    return offset.map((o) => o * duration);\n}\n\nexport { convertOffsetToTimes };\n","const isNotNull = (value) => value !== null;\nfunction getFinalKeyframe(keyframes, { repeat, repeatType = \"loop\" }, finalKeyframe, speed = 1) {\n    const resolvedKeyframes = keyframes.filter(isNotNull);\n    const useFirstKeyframe = speed < 0 || (repeat && repeatType !== \"loop\" && repeat % 2 === 1);\n    const index = useFirstKeyframe ? 0 : resolvedKeyframes.length - 1;\n    return !index || finalKeyframe === undefined\n        ? resolvedKeyframes[index]\n        : finalKeyframe;\n}\n\nexport { getFinalKeyframe };\n","import { inertia } from '../generators/inertia.mjs';\nimport { keyframes } from '../generators/keyframes.mjs';\nimport { spring } from '../generators/spring/index.mjs';\n\nconst transitionTypeMap = {\n    decay: inertia,\n    inertia,\n    tween: keyframes,\n    keyframes: keyframes,\n    spring,\n};\nfunction replaceTransitionType(transition) {\n    if (typeof transition.type === \"string\") {\n        transition.type = transitionTypeMap[transition.type];\n    }\n}\n\nexport { replaceTransitionType };\n","class WithPromise {\n    constructor() {\n        this.updateFinished();\n    }\n    get finished() {\n        return this._finished;\n    }\n    updateFinished() {\n        this._finished = new Promise((resolve) => {\n            this.resolve = resolve;\n        });\n    }\n    notifyFinished() {\n        this.resolve();\n    }\n    /**\n     * Allows the animation to be awaited.\n     *\n     * @deprecated Use `finished` instead.\n     */\n    then(onResolve, onReject) {\n        return this.finished.then(onResolve, onReject);\n    }\n}\n\nexport { WithPromise };\n","import { invariant, pipe, clamp, millisecondsToSeconds, secondsToMilliseconds } from 'motion-utils';\nimport { time } from '../frameloop/sync-time.mjs';\nimport { activeAnimations } from '../stats/animation-count.mjs';\nimport { mix } from '../utils/mix/index.mjs';\nimport { frameloopDriver } from './drivers/frame.mjs';\nimport { inertia } from './generators/inertia.mjs';\nimport { keyframes } from './generators/keyframes.mjs';\nimport { calcGeneratorDuration } from './generators/utils/calc-duration.mjs';\nimport { getFinalKeyframe } from './keyframes/get-final.mjs';\nimport { replaceTransitionType } from './utils/replace-transition-type.mjs';\nimport { WithPromise } from './utils/WithPromise.mjs';\n\nconst percentToProgress = (percent) => percent / 100;\nclass JSAnimation extends WithPromise {\n    constructor(options) {\n        super();\n        this.state = \"idle\";\n        this.startTime = null;\n        this.isStopped = false;\n        /**\n         * The current time of the animation.\n         */\n        this.currentTime = 0;\n        /**\n         * The time at which the animation was paused.\n         */\n        this.holdTime = null;\n        /**\n         * Playback speed as a factor. 0 would be stopped, -1 reverse and 2 double speed.\n         */\n        this.playbackSpeed = 1;\n        /**\n         * This method is bound to the instance to fix a pattern where\n         * animation.stop is returned as a reference from a useEffect.\n         */\n        this.stop = () => {\n            const { motionValue } = this.options;\n            if (motionValue && motionValue.updatedAt !== time.now()) {\n                this.tick(time.now());\n            }\n            this.isStopped = true;\n            if (this.state === \"idle\")\n                return;\n            this.teardown();\n            this.options.onStop?.();\n        };\n        activeAnimations.mainThread++;\n        this.options = options;\n        this.initAnimation();\n        this.play();\n        if (options.autoplay === false)\n            this.pause();\n    }\n    initAnimation() {\n        const { options } = this;\n        replaceTransitionType(options);\n        const { type = keyframes, repeat = 0, repeatDelay = 0, repeatType, velocity = 0, } = options;\n        let { keyframes: keyframes$1 } = options;\n        const generatorFactory = type || keyframes;\n        if (process.env.NODE_ENV !== \"production\" &&\n            generatorFactory !== keyframes) {\n            invariant(keyframes$1.length <= 2, `Only two keyframes currently supported with spring and inertia animations. Trying to animate ${keyframes$1}`);\n        }\n        if (generatorFactory !== keyframes &&\n            typeof keyframes$1[0] !== \"number\") {\n            this.mixKeyframes = pipe(percentToProgress, mix(keyframes$1[0], keyframes$1[1]));\n            keyframes$1 = [0, 100];\n        }\n        const generator = generatorFactory({ ...options, keyframes: keyframes$1 });\n        /**\n         * If we have a mirror repeat type we need to create a second generator that outputs the\n         * mirrored (not reversed) animation and later ping pong between the two generators.\n         */\n        if (repeatType === \"mirror\") {\n            this.mirroredGenerator = generatorFactory({\n                ...options,\n                keyframes: [...keyframes$1].reverse(),\n                velocity: -velocity,\n            });\n        }\n        /**\n         * If duration is undefined and we have repeat options,\n         * we need to calculate a duration from the generator.\n         *\n         * We set it to the generator itself to cache the duration.\n         * Any timeline resolver will need to have already precalculated\n         * the duration by this step.\n         */\n        if (generator.calculatedDuration === null) {\n            generator.calculatedDuration = calcGeneratorDuration(generator);\n        }\n        const { calculatedDuration } = generator;\n        this.calculatedDuration = calculatedDuration;\n        this.resolvedDuration = calculatedDuration + repeatDelay;\n        this.totalDuration = this.resolvedDuration * (repeat + 1) - repeatDelay;\n        this.generator = generator;\n    }\n    updateTime(timestamp) {\n        const animationTime = Math.round(timestamp - this.startTime) * this.playbackSpeed;\n        // Update currentTime\n        if (this.holdTime !== null) {\n            this.currentTime = this.holdTime;\n        }\n        else {\n            // Rounding the time because floating point arithmetic is not always accurate, e.g. 3000.367 - 1000.367 =\n            // 2000.0000000000002. This is a problem when we are comparing the currentTime with the duration, for\n            // example.\n            this.currentTime = animationTime;\n        }\n    }\n    tick(timestamp, sample = false) {\n        const { generator, totalDuration, mixKeyframes, mirroredGenerator, resolvedDuration, calculatedDuration, } = this;\n        if (this.startTime === null)\n            return generator.next(0);\n        const { delay = 0, keyframes, repeat, repeatType, repeatDelay, type, onUpdate, finalKeyframe, } = this.options;\n        /**\n         * requestAnimationFrame timestamps can come through as lower than\n         * the startTime as set by performance.now(). Here we prevent this,\n         * though in the future it could be possible to make setting startTime\n         * a pending operation that gets resolved here.\n         */\n        if (this.speed > 0) {\n            this.startTime = Math.min(this.startTime, timestamp);\n        }\n        else if (this.speed < 0) {\n            this.startTime = Math.min(timestamp - totalDuration / this.speed, this.startTime);\n        }\n        if (sample) {\n            this.currentTime = timestamp;\n        }\n        else {\n            this.updateTime(timestamp);\n        }\n        // Rebase on delay\n        const timeWithoutDelay = this.currentTime - delay * (this.playbackSpeed >= 0 ? 1 : -1);\n        const isInDelayPhase = this.playbackSpeed >= 0\n            ? timeWithoutDelay < 0\n            : timeWithoutDelay > totalDuration;\n        this.currentTime = Math.max(timeWithoutDelay, 0);\n        // If this animation has finished, set the current time  to the total duration.\n        if (this.state === \"finished\" && this.holdTime === null) {\n            this.currentTime = totalDuration;\n        }\n        let elapsed = this.currentTime;\n        let frameGenerator = generator;\n        if (repeat) {\n            /**\n             * Get the current progress (0-1) of the animation. If t is >\n             * than duration we'll get values like 2.5 (midway through the\n             * third iteration)\n             */\n            const progress = Math.min(this.currentTime, totalDuration) / resolvedDuration;\n            /**\n             * Get the current iteration (0 indexed). For instance the floor of\n             * 2.5 is 2.\n             */\n            let currentIteration = Math.floor(progress);\n            /**\n             * Get the current progress of the iteration by taking the remainder\n             * so 2.5 is 0.5 through iteration 2\n             */\n            let iterationProgress = progress % 1.0;\n            /**\n             * If iteration progress is 1 we count that as the end\n             * of the previous iteration.\n             */\n            if (!iterationProgress && progress >= 1) {\n                iterationProgress = 1;\n            }\n            iterationProgress === 1 && currentIteration--;\n            currentIteration = Math.min(currentIteration, repeat + 1);\n            /**\n             * Reverse progress if we're not running in \"normal\" direction\n             */\n            const isOddIteration = Boolean(currentIteration % 2);\n            if (isOddIteration) {\n                if (repeatType === \"reverse\") {\n                    iterationProgress = 1 - iterationProgress;\n                    if (repeatDelay) {\n                        iterationProgress -= repeatDelay / resolvedDuration;\n                    }\n                }\n                else if (repeatType === \"mirror\") {\n                    frameGenerator = mirroredGenerator;\n                }\n            }\n            elapsed = clamp(0, 1, iterationProgress) * resolvedDuration;\n        }\n        /**\n         * If we're in negative time, set state as the initial keyframe.\n         * This prevents delay: x, duration: 0 animations from finishing\n         * instantly.\n         */\n        const state = isInDelayPhase\n            ? { done: false, value: keyframes[0] }\n            : frameGenerator.next(elapsed);\n        if (mixKeyframes) {\n            state.value = mixKeyframes(state.value);\n        }\n        let { done } = state;\n        if (!isInDelayPhase && calculatedDuration !== null) {\n            done =\n                this.playbackSpeed >= 0\n                    ? this.currentTime >= totalDuration\n                    : this.currentTime <= 0;\n        }\n        const isAnimationFinished = this.holdTime === null &&\n            (this.state === \"finished\" || (this.state === \"running\" && done));\n        // TODO: The exception for inertia could be cleaner here\n        if (isAnimationFinished && type !== inertia) {\n            state.value = getFinalKeyframe(keyframes, this.options, finalKeyframe, this.speed);\n        }\n        if (onUpdate) {\n            onUpdate(state.value);\n        }\n        if (isAnimationFinished) {\n            this.finish();\n        }\n        return state;\n    }\n    /**\n     * Allows the returned animation to be awaited or promise-chained. Currently\n     * resolves when the animation finishes at all but in a future update could/should\n     * reject if its cancels.\n     */\n    then(resolve, reject) {\n        return this.finished.then(resolve, reject);\n    }\n    get duration() {\n        return millisecondsToSeconds(this.calculatedDuration);\n    }\n    get time() {\n        return millisecondsToSeconds(this.currentTime);\n    }\n    set time(newTime) {\n        newTime = secondsToMilliseconds(newTime);\n        this.currentTime = newTime;\n        if (this.startTime === null ||\n            this.holdTime !== null ||\n            this.playbackSpeed === 0) {\n            this.holdTime = newTime;\n        }\n        else if (this.driver) {\n            this.startTime = this.driver.now() - newTime / this.playbackSpeed;\n        }\n        this.driver?.start(false);\n    }\n    get speed() {\n        return this.playbackSpeed;\n    }\n    set speed(newSpeed) {\n        this.updateTime(time.now());\n        const hasChanged = this.playbackSpeed !== newSpeed;\n        this.playbackSpeed = newSpeed;\n        if (hasChanged) {\n            this.time = millisecondsToSeconds(this.currentTime);\n        }\n    }\n    play() {\n        if (this.isStopped)\n            return;\n        const { driver = frameloopDriver, startTime } = this.options;\n        if (!this.driver) {\n            this.driver = driver((timestamp) => this.tick(timestamp));\n        }\n        this.options.onPlay?.();\n        const now = this.driver.now();\n        if (this.state === \"finished\") {\n            this.updateFinished();\n            this.startTime = now;\n        }\n        else if (this.holdTime !== null) {\n            this.startTime = now - this.holdTime;\n        }\n        else if (!this.startTime) {\n            this.startTime = startTime ?? now;\n        }\n        if (this.state === \"finished\" && this.speed < 0) {\n            this.startTime += this.calculatedDuration;\n        }\n        this.holdTime = null;\n        /**\n         * Set playState to running only after we've used it in\n         * the previous logic.\n         */\n        this.state = \"running\";\n        this.driver.start();\n    }\n    pause() {\n        this.state = \"paused\";\n        this.updateTime(time.now());\n        this.holdTime = this.currentTime;\n    }\n    complete() {\n        if (this.state !== \"running\") {\n            this.play();\n        }\n        this.state = \"finished\";\n        this.holdTime = null;\n    }\n    finish() {\n        this.notifyFinished();\n        this.teardown();\n        this.state = \"finished\";\n        this.options.onComplete?.();\n    }\n    cancel() {\n        this.holdTime = null;\n        this.startTime = 0;\n        this.tick(0);\n        this.teardown();\n        this.options.onCancel?.();\n    }\n    teardown() {\n        this.state = \"idle\";\n        this.stopDriver();\n        this.startTime = this.holdTime = null;\n        activeAnimations.mainThread--;\n    }\n    stopDriver() {\n        if (!this.driver)\n            return;\n        this.driver.stop();\n        this.driver = undefined;\n    }\n    sample(sampleTime) {\n        this.startTime = 0;\n        return this.tick(sampleTime, true);\n    }\n    attachTimeline(timeline) {\n        if (this.options.allowFlatten) {\n            this.options.type = \"keyframes\";\n            this.options.ease = \"linear\";\n            this.initAnimation();\n        }\n        this.driver?.stop();\n        return timeline.observe(this);\n    }\n}\n// Legacy function support\nfunction animateValue(options) {\n    return new JSAnimation(options);\n}\n\nexport { JSAnimation, animateValue };\n","/*#__NO_SIDE_EFFECTS__*/\nfunction memo(callback) {\n    let result;\n    return () => {\n        if (result === undefined)\n            result = callback();\n        return result;\n    };\n}\n\nexport { memo };\n","import { memo } from 'motion-utils';\n\nconst supportsScrollTimeline = /* @__PURE__ */ memo(() => window.ScrollTimeline !== undefined);\n\nexport { supportsScrollTimeline };\n","/**\n * Add the ability for test suites to manually set support flags\n * to better test more environments.\n */\nconst supportsFlags = {};\n\nexport { supportsFlags };\n","import { memo } from 'motion-utils';\nimport { supportsFlags } from './flags.mjs';\n\nfunction memoSupports(callback, supportsFlag) {\n    const memoized = memo(callback);\n    return () => supportsFlags[supportsFlag] ?? memoized();\n}\n\nexport { memoSupports };\n","import { memoSupports } from './memo.mjs';\n\nconst supportsLinearEasing = /*@__PURE__*/ memoSupports(() => {\n    try {\n        document\n            .createElement(\"div\")\n            .animate({ opacity: 0 }, { easing: \"linear(0, 1)\" });\n    }\n    catch (e) {\n        return false;\n    }\n    return true;\n}, \"linearEasing\");\n\nexport { supportsLinearEasing };\n","const cubicBezierAsString = ([a, b, c, d]) => `cubic-bezier(${a}, ${b}, ${c}, ${d})`;\n\nexport { cubicBezierAsString };\n","import { cubicBezierAsString } from './cubic-bezier.mjs';\n\nconst supportedWaapiEasing = {\n    linear: \"linear\",\n    ease: \"ease\",\n    easeIn: \"ease-in\",\n    easeOut: \"ease-out\",\n    easeInOut: \"ease-in-out\",\n    circIn: /*@__PURE__*/ cubicBezierAsString([0, 0.65, 0.55, 1]),\n    circOut: /*@__PURE__*/ cubicBezierAsString([0.55, 0, 1, 0.45]),\n    backIn: /*@__PURE__*/ cubicBezierAsString([0.31, 0.01, 0.66, -0.59]),\n    backOut: /*@__PURE__*/ cubicBezierAsString([0.33, 1.53, 0.69, 0.99]),\n};\n\nexport { supportedWaapiEasing };\n","import { isBezierDefinition } from 'motion-utils';\nimport { supportsLinearEasing } from '../../../utils/supports/linear-easing.mjs';\nimport { generateLinearEasing } from '../utils/linear.mjs';\nimport { cubicBezierAsString } from './cubic-bezier.mjs';\nimport { supportedWaapiEasing } from './supported.mjs';\n\nfunction mapEasingToNativeEasing(easing, duration) {\n    if (!easing) {\n        return undefined;\n    }\n    else if (typeof easing === \"function\") {\n        return supportsLinearEasing()\n            ? generateLinearEasing(easing, duration)\n            : \"ease-out\";\n    }\n    else if (isBezierDefinition(easing)) {\n        return cubicBezierAsString(easing);\n    }\n    else if (Array.isArray(easing)) {\n        return easing.map((segmentEasing) => mapEasingToNativeEasing(segmentEasing, duration) ||\n            supportedWaapiEasing.easeOut);\n    }\n    else {\n        return supportedWaapiEasing[easing];\n    }\n}\n\nexport { mapEasingToNativeEasing };\n","import { activeAnimations } from '../../stats/animation-count.mjs';\nimport { statsBuffer } from '../../stats/buffer.mjs';\nimport { mapEasingToNativeEasing } from './easing/map-easing.mjs';\n\nfunction startWaapiAnimation(element, valueName, keyframes, { delay = 0, duration = 300, repeat = 0, repeatType = \"loop\", ease = \"easeOut\", times, } = {}, pseudoElement = undefined) {\n    const keyframeOptions = {\n        [valueName]: keyframes,\n    };\n    if (times)\n        keyframeOptions.offset = times;\n    const easing = mapEasingToNativeEasing(ease, duration);\n    /**\n     * If this is an easing array, apply to keyframes, not animation as a whole\n     */\n    if (Array.isArray(easing))\n        keyframeOptions.easing = easing;\n    if (statsBuffer.value) {\n        activeAnimations.waapi++;\n    }\n    const options = {\n        delay,\n        duration,\n        easing: !Array.isArray(easing) ? easing : \"linear\",\n        fill: \"both\",\n        iterations: repeat + 1,\n        direction: repeatType === \"reverse\" ? \"alternate\" : \"normal\",\n    };\n    if (pseudoElement)\n        options.pseudoElement = pseudoElement;\n    const animation = element.animate(keyframeOptions, options);\n    if (statsBuffer.value) {\n        animation.finished.finally(() => {\n            activeAnimations.waapi--;\n        });\n    }\n    return animation;\n}\n\nexport { startWaapiAnimation };\n","import { invariant, millisecondsToSeconds, secondsToMilliseconds, noop } from 'motion-utils';\nimport { setStyle } from '../render/dom/style-set.mjs';\nimport { supportsScrollTimeline } from '../utils/supports/scroll-timeline.mjs';\nimport { getFinalKeyframe } from './keyframes/get-final.mjs';\nimport { WithPromise } from './utils/WithPromise.mjs';\nimport { startWaapiAnimation } from './waapi/start-waapi-animation.mjs';\nimport { applyGeneratorOptions } from './waapi/utils/apply-generator.mjs';\n\n/**\n * NativeAnimation implements AnimationPlaybackControls for the browser's Web Animations API.\n */\nclass NativeAnimation extends WithPromise {\n    constructor(options) {\n        super();\n        this.finishedTime = null;\n        this.isStopped = false;\n        if (!options)\n            return;\n        const { element, name, keyframes, pseudoElement, allowFlatten = false, finalKeyframe, onComplete, } = options;\n        this.isPseudoElement = Boolean(pseudoElement);\n        this.allowFlatten = allowFlatten;\n        this.options = options;\n        invariant(typeof options.type !== \"string\", `animateMini doesn't support \"type\" as a string. Did you mean to import { spring } from \"motion\"?`);\n        const transition = applyGeneratorOptions(options);\n        this.animation = startWaapiAnimation(element, name, keyframes, transition, pseudoElement);\n        if (transition.autoplay === false) {\n            this.animation.pause();\n        }\n        this.animation.onfinish = () => {\n            this.finishedTime = this.time;\n            if (!pseudoElement) {\n                const keyframe = getFinalKeyframe(keyframes, this.options, finalKeyframe, this.speed);\n                if (this.updateMotionValue) {\n                    this.updateMotionValue(keyframe);\n                }\n                else {\n                    /**\n                     * If we can, we want to commit the final style as set by the user,\n                     * rather than the computed keyframe value supplied by the animation.\n                     */\n                    setStyle(element, name, keyframe);\n                }\n                this.animation.cancel();\n            }\n            onComplete?.();\n            this.notifyFinished();\n        };\n    }\n    play() {\n        if (this.isStopped)\n            return;\n        this.animation.play();\n        if (this.state === \"finished\") {\n            this.updateFinished();\n        }\n    }\n    pause() {\n        this.animation.pause();\n    }\n    complete() {\n        this.animation.finish?.();\n    }\n    cancel() {\n        try {\n            this.animation.cancel();\n        }\n        catch (e) { }\n    }\n    stop() {\n        if (this.isStopped)\n            return;\n        this.isStopped = true;\n        const { state } = this;\n        if (state === \"idle\" || state === \"finished\") {\n            return;\n        }\n        if (this.updateMotionValue) {\n            this.updateMotionValue();\n        }\n        else {\n            this.commitStyles();\n        }\n        if (!this.isPseudoElement)\n            this.cancel();\n    }\n    /**\n     * WAAPI doesn't natively have any interruption capabilities.\n     *\n     * In this method, we commit styles back to the DOM before cancelling\n     * the animation.\n     *\n     * This is designed to be overridden by NativeAnimationExtended, which\n     * will create a renderless JS animation and sample it twice to calculate\n     * its current value, \"previous\" value, and therefore allow\n     * Motion to also correctly calculate velocity for any subsequent animation\n     * while deferring the commit until the next animation frame.\n     */\n    commitStyles() {\n        if (!this.isPseudoElement) {\n            this.animation.commitStyles?.();\n        }\n    }\n    get duration() {\n        const duration = this.animation.effect?.getComputedTiming?.().duration || 0;\n        return millisecondsToSeconds(Number(duration));\n    }\n    get time() {\n        return millisecondsToSeconds(Number(this.animation.currentTime) || 0);\n    }\n    set time(newTime) {\n        this.finishedTime = null;\n        this.animation.currentTime = secondsToMilliseconds(newTime);\n    }\n    /**\n     * The playback speed of the animation.\n     * 1 = normal speed, 2 = double speed, 0.5 = half speed.\n     */\n    get speed() {\n        return this.animation.playbackRate;\n    }\n    set speed(newSpeed) {\n        // Allow backwards playback after finishing\n        if (newSpeed < 0)\n            this.finishedTime = null;\n        this.animation.playbackRate = newSpeed;\n    }\n    get state() {\n        return this.finishedTime !== null\n            ? \"finished\"\n            : this.animation.playState;\n    }\n    get startTime() {\n        return Number(this.animation.startTime);\n    }\n    set startTime(newStartTime) {\n        this.animation.startTime = newStartTime;\n    }\n    /**\n     * Attaches a timeline to the animation, for instance the `ScrollTimeline`.\n     */\n    attachTimeline({ timeline, observe }) {\n        if (this.allowFlatten) {\n            this.animation.effect?.updateTiming({ easing: \"linear\" });\n        }\n        this.animation.onfinish = null;\n        if (timeline && supportsScrollTimeline()) {\n            this.animation.timeline = timeline;\n            return noop;\n        }\n        else {\n            return observe(this);\n        }\n    }\n}\n\nexport { NativeAnimation };\n","import { supportsLinearEasing } from '../../../utils/supports/linear-easing.mjs';\nimport { isGenerator } from '../../generators/utils/is-generator.mjs';\n\nfunction applyGeneratorOptions({ type, ...options }) {\n    if (isGenerator(type) && supportsLinearEasing()) {\n        return type.applyToOptions(options);\n    }\n    else {\n        options.duration ?? (options.duration = 300);\n        options.ease ?? (options.ease = \"easeOut\");\n    }\n    return options;\n}\n\nexport { applyGeneratorOptions };\n","import { isCSSVar } from './is-css-var.mjs';\n\nfunction setStyle(element, name, value) {\n    isCSSVar(name)\n        ? element.style.setProperty(name, value)\n        : (element.style[name] = value);\n}\n\nexport { setStyle };\n","const isCSSVar = (name) => name.startsWith(\"--\");\n\nexport { isCSSVar };\n","import { anticipate, backInOut, circInOut } from 'motion-utils';\n\nconst unsupportedEasingFunctions = {\n    anticipate,\n    backInOut,\n    circInOut,\n};\nfunction isUnsupportedEase(key) {\n    return key in unsupportedEasingFunctions;\n}\nfunction replaceStringEasing(transition) {\n    if (typeof transition.ease === \"string\" &&\n        isUnsupportedEase(transition.ease)) {\n        transition.ease = unsupportedEasingFunctions[transition.ease];\n    }\n}\n\nexport { replaceStringEasing };\n","import { secondsToMilliseconds } from 'motion-utils';\nimport { JSAnimation } from './JSAnimation.mjs';\nimport { NativeAnimation } from './NativeAnimation.mjs';\nimport { replaceTransitionType } from './utils/replace-transition-type.mjs';\nimport { replaceStringEasing } from './waapi/utils/unsupported-easing.mjs';\n\n/**\n * 10ms is chosen here as it strikes a balance between smooth\n * results (more than one keyframe per frame at 60fps) and\n * keyframe quantity.\n */\nconst sampleDelta = 10; //ms\nclass NativeAnimationExtended extends NativeAnimation {\n    constructor(options) {\n        /**\n         * The base NativeAnimation function only supports a subset\n         * of Motion easings, and WAAPI also only supports some\n         * easing functions via string/cubic-bezier definitions.\n         *\n         * This function replaces those unsupported easing functions\n         * with a JS easing function. This will later get compiled\n         * to a linear() easing function.\n         */\n        replaceStringEasing(options);\n        /**\n         * Ensure we replace the transition type with a generator function\n         * before passing to WAAPI.\n         *\n         * TODO: Does this have a better home? It could be shared with\n         * JSAnimation.\n         */\n        replaceTransitionType(options);\n        super(options);\n        if (options.startTime) {\n            this.startTime = options.startTime;\n        }\n        this.options = options;\n    }\n    /**\n     * WAAPI doesn't natively have any interruption capabilities.\n     *\n     * Rather than read commited styles back out of the DOM, we can\n     * create a renderless JS animation and sample it twice to calculate\n     * its current value, \"previous\" value, and therefore allow\n     * Motion to calculate velocity for any subsequent animation.\n     */\n    updateMotionValue(value) {\n        const { motionValue, onUpdate, onComplete, element, ...options } = this.options;\n        if (!motionValue)\n            return;\n        if (value !== undefined) {\n            motionValue.set(value);\n            return;\n        }\n        const sampleAnimation = new JSAnimation({\n            ...options,\n            autoplay: false,\n        });\n        const sampleTime = secondsToMilliseconds(this.finishedTime ?? this.time);\n        motionValue.setWithVelocity(sampleAnimation.sample(sampleTime - sampleDelta).value, sampleAnimation.sample(sampleTime).value, sampleDelta);\n        sampleAnimation.stop();\n    }\n}\n\nexport { NativeAnimationExtended };\n","import { complex } from '../../value/types/complex/index.mjs';\n\n/**\n * Check if a value is animatable. Examples:\n *\n * ✅: 100, \"100px\", \"#fff\"\n * ❌: \"block\", \"url(2.jpg)\"\n * @param value\n *\n * @internal\n */\nconst isAnimatable = (value, name) => {\n    // If the list of keys tat might be non-animatable grows, replace with Set\n    if (name === \"zIndex\")\n        return false;\n    // If it's a number or a keyframes array, we can animate it. We might at some point\n    // need to do a deep isAnimatable check of keyframes, or let Popmotion handle this,\n    // but for now lets leave it like this for performance reasons\n    if (typeof value === \"number\" || Array.isArray(value))\n        return true;\n    if (typeof value === \"string\" && // It's animatable if we have a string\n        (complex.test(value) || value === \"0\") && // And it contains numbers and/or colors\n        !value.startsWith(\"url(\") // Unless it starts with \"url(\"\n    ) {\n        return true;\n    }\n    return false;\n};\n\nexport { isAnimatable };\n","import { memo } from 'motion-utils';\nimport { isHTMLElement } from '../../../utils/is-html-element.mjs';\n\n/**\n * A list of values that can be hardware-accelerated.\n */\nconst acceleratedValues = new Set([\n    \"opacity\",\n    \"clipPath\",\n    \"filter\",\n    \"transform\",\n    // TODO: Could be re-enabled now we have support for linear() easing\n    // \"background-color\"\n]);\nconst supportsWaapi = /*@__PURE__*/ memo(() => Object.hasOwnProperty.call(Element.prototype, \"animate\"));\nfunction supportsBrowserAnimation(options) {\n    const { motionValue, name, repeatDelay, repeatType, damping, type } = options;\n    if (!isHTMLElement(motionValue?.owner?.current)) {\n        return false;\n    }\n    const { onUpdate, transformTemplate } = motionValue.owner.getProps();\n    return (supportsWaapi() &&\n        name &&\n        acceleratedValues.has(name) &&\n        (name !== \"transform\" || !transformTemplate) &&\n        /**\n         * If we're outputting values to onUpdate then we can't use WAAPI as there's\n         * no way to read the value from WAAPI every frame.\n         */\n        !onUpdate &&\n        !repeatDelay &&\n        repeatType !== \"mirror\" &&\n        damping !== 0 &&\n        type !== \"inertia\");\n}\n\nexport { supportsBrowserAnimation };\n","import { MotionGlobalConfig, noop } from 'motion-utils';\nimport { time } from '../frameloop/sync-time.mjs';\nimport { JSAnimation } from './JSAnimation.mjs';\nimport { getFinalKeyframe } from './keyframes/get-final.mjs';\nimport { KeyframeResolver, flushKeyframeResolvers } from './keyframes/KeyframesResolver.mjs';\nimport { NativeAnimationExtended } from './NativeAnimationExtended.mjs';\nimport { canAnimate } from './utils/can-animate.mjs';\nimport { WithPromise } from './utils/WithPromise.mjs';\nimport { supportsBrowserAnimation } from './waapi/supports/waapi.mjs';\n\n/**\n * Maximum time allowed between an animation being created and it being\n * resolved for us to use the latter as the start time.\n *\n * This is to ensure that while we prefer to \"start\" an animation as soon\n * as it's triggered, we also want to avoid a visual jump if there's a big delay\n * between these two moments.\n */\nconst MAX_RESOLVE_DELAY = 40;\nclass AsyncMotionValueAnimation extends WithPromise {\n    constructor({ autoplay = true, delay = 0, type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType = \"loop\", keyframes, name, motionValue, element, ...options }) {\n        super();\n        /**\n         * Bound to support return animation.stop pattern\n         */\n        this.stop = () => {\n            if (this._animation) {\n                this._animation.stop();\n                this.stopTimeline?.();\n            }\n            this.keyframeResolver?.cancel();\n        };\n        this.createdAt = time.now();\n        const optionsWithDefaults = {\n            autoplay,\n            delay,\n            type,\n            repeat,\n            repeatDelay,\n            repeatType,\n            name,\n            motionValue,\n            element,\n            ...options,\n        };\n        const KeyframeResolver$1 = element?.KeyframeResolver || KeyframeResolver;\n        this.keyframeResolver = new KeyframeResolver$1(keyframes, (resolvedKeyframes, finalKeyframe, forced) => this.onKeyframesResolved(resolvedKeyframes, finalKeyframe, optionsWithDefaults, !forced), name, motionValue, element);\n        this.keyframeResolver?.scheduleResolve();\n    }\n    onKeyframesResolved(keyframes, finalKeyframe, options, sync) {\n        this.keyframeResolver = undefined;\n        const { name, type, velocity, delay, isHandoff, onUpdate } = options;\n        this.resolvedAt = time.now();\n        /**\n         * If we can't animate this value with the resolved keyframes\n         * then we should complete it immediately.\n         */\n        if (!canAnimate(keyframes, name, type, velocity)) {\n            if (MotionGlobalConfig.instantAnimations || !delay) {\n                onUpdate?.(getFinalKeyframe(keyframes, options, finalKeyframe));\n            }\n            keyframes[0] = keyframes[keyframes.length - 1];\n            options.duration = 0;\n            options.repeat = 0;\n        }\n        /**\n         * Resolve startTime for the animation.\n         *\n         * This method uses the createdAt and resolvedAt to calculate the\n         * animation startTime. *Ideally*, we would use the createdAt time as t=0\n         * as the following frame would then be the first frame of the animation in\n         * progress, which would feel snappier.\n         *\n         * However, if there's a delay (main thread work) between the creation of\n         * the animation and the first commited frame, we prefer to use resolvedAt\n         * to avoid a sudden jump into the animation.\n         */\n        const startTime = sync\n            ? !this.resolvedAt\n                ? this.createdAt\n                : this.resolvedAt - this.createdAt > MAX_RESOLVE_DELAY\n                    ? this.resolvedAt\n                    : this.createdAt\n            : undefined;\n        const resolvedOptions = {\n            startTime,\n            finalKeyframe,\n            ...options,\n            keyframes,\n        };\n        /**\n         * Animate via WAAPI if possible. If this is a handoff animation, the optimised animation will be running via\n         * WAAPI. Therefore, this animation must be JS to ensure it runs \"under\" the\n         * optimised animation.\n         */\n        const animation = !isHandoff && supportsBrowserAnimation(resolvedOptions)\n            ? new NativeAnimationExtended({\n                ...resolvedOptions,\n                element: resolvedOptions.motionValue.owner.current,\n            })\n            : new JSAnimation(resolvedOptions);\n        animation.finished.then(() => this.notifyFinished()).catch(noop);\n        if (this.pendingTimeline) {\n            this.stopTimeline = animation.attachTimeline(this.pendingTimeline);\n            this.pendingTimeline = undefined;\n        }\n        this._animation = animation;\n    }\n    get finished() {\n        if (!this._animation) {\n            return this._finished;\n        }\n        else {\n            return this.animation.finished;\n        }\n    }\n    then(onResolve, _onReject) {\n        return this.finished.finally(onResolve).then(() => { });\n    }\n    get animation() {\n        if (!this._animation) {\n            this.keyframeResolver?.resume();\n            flushKeyframeResolvers();\n        }\n        return this._animation;\n    }\n    get duration() {\n        return this.animation.duration;\n    }\n    get time() {\n        return this.animation.time;\n    }\n    set time(newTime) {\n        this.animation.time = newTime;\n    }\n    get speed() {\n        return this.animation.speed;\n    }\n    get state() {\n        return this.animation.state;\n    }\n    set speed(newSpeed) {\n        this.animation.speed = newSpeed;\n    }\n    get startTime() {\n        return this.animation.startTime;\n    }\n    attachTimeline(timeline) {\n        if (this._animation) {\n            this.stopTimeline = this.animation.attachTimeline(timeline);\n        }\n        else {\n            this.pendingTimeline = timeline;\n        }\n        return () => this.stop();\n    }\n    play() {\n        this.animation.play();\n    }\n    pause() {\n        this.animation.pause();\n    }\n    complete() {\n        this.animation.complete();\n    }\n    cancel() {\n        if (this._animation) {\n            this.animation.cancel();\n        }\n        this.keyframeResolver?.cancel();\n    }\n}\n\nexport { AsyncMotionValueAnimation };\n","import { warning } from 'motion-utils';\nimport { isGenerator } from '../generators/utils/is-generator.mjs';\nimport { isAnimatable } from './is-animatable.mjs';\n\nfunction hasKeyframesChanged(keyframes) {\n    const current = keyframes[0];\n    if (keyframes.length === 1)\n        return true;\n    for (let i = 0; i < keyframes.length; i++) {\n        if (keyframes[i] !== current)\n            return true;\n    }\n}\nfunction canAnimate(keyframes, name, type, velocity) {\n    /**\n     * Check if we're able to animate between the start and end keyframes,\n     * and throw a warning if we're attempting to animate between one that's\n     * animatable and another that isn't.\n     */\n    const originKeyframe = keyframes[0];\n    if (originKeyframe === null)\n        return false;\n    /**\n     * These aren't traditionally animatable but we do support them.\n     * In future we could look into making this more generic or replacing\n     * this function with mix() === mixImmediate\n     */\n    if (name === \"display\" || name === \"visibility\")\n        return true;\n    const targetKeyframe = keyframes[keyframes.length - 1];\n    const isOriginAnimatable = isAnimatable(originKeyframe, name);\n    const isTargetAnimatable = isAnimatable(targetKeyframe, name);\n    warning(isOriginAnimatable === isTargetAnimatable, `You are trying to animate ${name} from \"${originKeyframe}\" to \"${targetKeyframe}\". ${originKeyframe} is not an animatable value - to enable this animation set ${originKeyframe} to a value animatable to ${targetKeyframe} via the \\`style\\` property.`);\n    // Always skip if any of these are true\n    if (!isOriginAnimatable || !isTargetAnimatable) {\n        return false;\n    }\n    return (hasKeyframesChanged(keyframes) ||\n        ((type === \"spring\" || isGenerator(type)) && velocity));\n}\n\nexport { canAnimate };\n","const isNotNull = (value) => value !== null;\nfunction getFinalKeyframe(keyframes, { repeat, repeatType = \"loop\" }, finalKeyframe) {\n    const resolvedKeyframes = keyframes.filter(isNotNull);\n    const index = repeat && repeatType !== \"loop\" && repeat % 2 === 1\n        ? 0\n        : resolvedKeyframes.length - 1;\n    return !index || finalKeyframe === undefined\n        ? resolvedKeyframes[index]\n        : finalKeyframe;\n}\n\nexport { getFinalKeyframe };\n","import { transformProps } from 'motion-dom';\n\nconst underDampedSpring = {\n    type: \"spring\",\n    stiffness: 500,\n    damping: 25,\n    restSpeed: 10,\n};\nconst criticallyDampedSpring = (target) => ({\n    type: \"spring\",\n    stiffness: 550,\n    damping: target === 0 ? 2 * Math.sqrt(550) : 30,\n    restSpeed: 10,\n});\nconst keyframesTransition = {\n    type: \"keyframes\",\n    duration: 0.8,\n};\n/**\n * Default easing curve is a slightly shallower version of\n * the default browser easing curve.\n */\nconst ease = {\n    type: \"keyframes\",\n    ease: [0.25, 0.1, 0.35, 1],\n    duration: 0.3,\n};\nconst getDefaultTransition = (valueKey, { keyframes }) => {\n    if (keyframes.length > 2) {\n        return keyframesTransition;\n    }\n    else if (transformProps.has(valueKey)) {\n        return valueKey.startsWith(\"scale\")\n            ? criticallyDampedSpring(keyframes[1])\n            : underDampedSpring;\n    }\n    return ease;\n};\n\nexport { getDefaultTransition };\n","import { getValueTransition, frame, JSAnimation, AsyncMotionValueAnimation } from 'motion-dom';\nimport { secondsToMilliseconds, MotionGlobalConfig } from 'motion-utils';\nimport { getFinalKeyframe } from '../animators/waapi/utils/get-final-keyframe.mjs';\nimport { getDefaultTransition } from '../utils/default-transitions.mjs';\nimport { isTransitionDefined } from '../utils/is-transition-defined.mjs';\n\nconst animateMotionValue = (name, value, target, transition = {}, element, isHandoff) => (onComplete) => {\n    const valueTransition = getValueTransition(transition, name) || {};\n    /**\n     * Most transition values are currently completely overwritten by value-specific\n     * transitions. In the future it'd be nicer to blend these transitions. But for now\n     * delay actually does inherit from the root transition if not value-specific.\n     */\n    const delay = valueTransition.delay || transition.delay || 0;\n    /**\n     * Elapsed isn't a public transition option but can be passed through from\n     * optimized appear effects in milliseconds.\n     */\n    let { elapsed = 0 } = transition;\n    elapsed = elapsed - secondsToMilliseconds(delay);\n    const options = {\n        keyframes: Array.isArray(target) ? target : [null, target],\n        ease: \"easeOut\",\n        velocity: value.getVelocity(),\n        ...valueTransition,\n        delay: -elapsed,\n        onUpdate: (v) => {\n            value.set(v);\n            valueTransition.onUpdate && valueTransition.onUpdate(v);\n        },\n        onComplete: () => {\n            onComplete();\n            valueTransition.onComplete && valueTransition.onComplete();\n        },\n        name,\n        motionValue: value,\n        element: isHandoff ? undefined : element,\n    };\n    /**\n     * If there's no transition defined for this value, we can generate\n     * unique transition settings for this value.\n     */\n    if (!isTransitionDefined(valueTransition)) {\n        Object.assign(options, getDefaultTransition(name, options));\n    }\n    /**\n     * Both WAAPI and our internal animation functions use durations\n     * as defined by milliseconds, while our external API defines them\n     * as seconds.\n     */\n    options.duration && (options.duration = secondsToMilliseconds(options.duration));\n    options.repeatDelay && (options.repeatDelay = secondsToMilliseconds(options.repeatDelay));\n    /**\n     * Support deprecated way to set initial value. Prefer keyframe syntax.\n     */\n    if (options.from !== undefined) {\n        options.keyframes[0] = options.from;\n    }\n    let shouldSkip = false;\n    if (options.type === false ||\n        (options.duration === 0 && !options.repeatDelay)) {\n        options.duration = 0;\n        if (options.delay === 0) {\n            shouldSkip = true;\n        }\n    }\n    if (MotionGlobalConfig.instantAnimations ||\n        MotionGlobalConfig.skipAnimations) {\n        shouldSkip = true;\n        options.duration = 0;\n        options.delay = 0;\n    }\n    /**\n     * If the transition type or easing has been explicitly set by the user\n     * then we don't want to allow flattening the animation.\n     */\n    options.allowFlatten = !valueTransition.type && !valueTransition.ease;\n    /**\n     * If we can or must skip creating the animation, and apply only\n     * the final keyframe, do so. We also check once keyframes are resolved but\n     * this early check prevents the need to create an animation at all.\n     */\n    if (shouldSkip && !isHandoff && value.get() !== undefined) {\n        const finalKeyframe = getFinalKeyframe(options.keyframes, valueTransition);\n        if (finalKeyframe !== undefined) {\n            frame.update(() => {\n                options.onUpdate(finalKeyframe);\n                options.onComplete();\n            });\n            return;\n        }\n    }\n    return valueTransition.isSync\n        ? new JSAnimation(options)\n        : new AsyncMotionValueAnimation(options);\n};\n\nexport { animateMotionValue };\n","/**\n * Decide whether a transition is defined on a given Transition.\n * This filters out orchestration options and returns true\n * if any options are left.\n */\nfunction isTransitionDefined({ when, delay: _delay, delayChildren, staggerChildren, staggerDirection, repeat, repeatType, repeatDelay, from, elapsed, ...transition }) {\n    return !!Object.keys(transition).length;\n}\n\nexport { isTransitionDefined };\n","import { motionValue } from 'motion-dom';\nimport { isKeyframesTarget } from '../../animation/utils/is-keyframes-target.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\n/**\n * Set VisualElement's MotionValue, creating a new MotionValue for it if\n * it doesn't exist.\n */\nfunction setMotionValue(visualElement, key, value) {\n    if (visualElement.hasValue(key)) {\n        visualElement.getValue(key).set(value);\n    }\n    else {\n        visualElement.addValue(key, motionValue(value));\n    }\n}\nfunction resolveFinalValueInKeyframes(v) {\n    // TODO maybe throw if v.length - 1 is placeholder token?\n    return isKeyframesTarget(v) ? v[v.length - 1] || 0 : v;\n}\nfunction setTarget(visualElement, definition) {\n    const resolved = resolveVariant(visualElement, definition);\n    let { transitionEnd = {}, transition = {}, ...target } = resolved || {};\n    target = { ...target, ...transitionEnd };\n    for (const key in target) {\n        const value = resolveFinalValueInKeyframes(target[key]);\n        setMotionValue(visualElement, key, value);\n    }\n}\n\nexport { setTarget };\n","import { getValueTransition, frame, positionalKeys } from 'motion-dom';\nimport { setTarget } from '../../render/utils/setters.mjs';\nimport { addValueToWillChange } from '../../value/use-will-change/add-will-change.mjs';\nimport { getOptimisedAppearId } from '../optimized-appear/get-appear-id.mjs';\nimport { animateMotionValue } from './motion-value.mjs';\n\n/**\n * Decide whether we should block this animation. Previously, we achieved this\n * just by checking whether the key was listed in protectedKeys, but this\n * posed problems if an animation was triggered by afterChildren and protectedKeys\n * had been set to true in the meantime.\n */\nfunction shouldBlockAnimation({ protectedKeys, needsAnimating }, key) {\n    const shouldBlock = protectedKeys.hasOwnProperty(key) && needsAnimating[key] !== true;\n    needsAnimating[key] = false;\n    return shouldBlock;\n}\nfunction animateTarget(visualElement, targetAndTransition, { delay = 0, transitionOverride, type } = {}) {\n    let { transition = visualElement.getDefaultTransition(), transitionEnd, ...target } = targetAndTransition;\n    if (transitionOverride)\n        transition = transitionOverride;\n    const animations = [];\n    const animationTypeState = type &&\n        visualElement.animationState &&\n        visualElement.animationState.getState()[type];\n    for (const key in target) {\n        const value = visualElement.getValue(key, visualElement.latestValues[key] ?? null);\n        const valueTarget = target[key];\n        if (valueTarget === undefined ||\n            (animationTypeState &&\n                shouldBlockAnimation(animationTypeState, key))) {\n            continue;\n        }\n        const valueTransition = {\n            delay,\n            ...getValueTransition(transition || {}, key),\n        };\n        /**\n         * If the value is already at the defined target, skip the animation.\n         */\n        const currentValue = value.get();\n        if (currentValue !== undefined &&\n            !value.isAnimating &&\n            !Array.isArray(valueTarget) &&\n            valueTarget === currentValue &&\n            !valueTransition.velocity) {\n            continue;\n        }\n        /**\n         * If this is the first time a value is being animated, check\n         * to see if we're handling off from an existing animation.\n         */\n        let isHandoff = false;\n        if (window.MotionHandoffAnimation) {\n            const appearId = getOptimisedAppearId(visualElement);\n            if (appearId) {\n                const startTime = window.MotionHandoffAnimation(appearId, key, frame);\n                if (startTime !== null) {\n                    valueTransition.startTime = startTime;\n                    isHandoff = true;\n                }\n            }\n        }\n        addValueToWillChange(visualElement, key);\n        value.start(animateMotionValue(key, value, valueTarget, visualElement.shouldReduceMotion && positionalKeys.has(key)\n            ? { type: false }\n            : valueTransition, visualElement, isHandoff));\n        const animation = value.animation;\n        if (animation) {\n            animations.push(animation);\n        }\n    }\n    if (transitionEnd) {\n        Promise.all(animations).then(() => {\n            frame.update(() => {\n                transitionEnd && setTarget(visualElement, transitionEnd);\n            });\n        });\n    }\n    return animations;\n}\n\nexport { animateTarget };\n","const isSVGTag = (tag) => typeof tag === \"string\" && tag.toLowerCase() === \"svg\";\n\nexport { isSVGTag };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { variantProps } from './variant-props.mjs';\n\nfunction isControllingVariants(props) {\n    return (isAnimationControls(props.animate) ||\n        variantProps.some((name) => isVariantLabel(props[name])));\n}\nfunction isVariantNode(props) {\n    return Boolean(isControllingVariants(props) || props.variants);\n}\n\nexport { isControllingVariants, isVariantNode };\n","import { color } from '../color/index.mjs';\nimport { filter } from '../complex/filter.mjs';\nimport { numberValueTypes } from './number.mjs';\n\n/**\n * A map of default value types for common values\n */\nconst defaultValueTypes = {\n    ...numberValueTypes,\n    // Color props\n    color,\n    backgroundColor: color,\n    outlineColor: color,\n    fill: color,\n    stroke: color,\n    // Border props\n    borderColor: color,\n    borderTopColor: color,\n    borderRightColor: color,\n    borderBottomColor: color,\n    borderLeftColor: color,\n    filter,\n    WebkitFilter: filter,\n};\n/**\n * Gets the default ValueType for the provided value key\n */\nconst getDefaultValueType = (key) => defaultValueTypes[key];\n\nexport { defaultValueTypes, getDefaultValueType };\n","let warning = () => { };\nlet invariant = () => { };\nif (process.env.NODE_ENV !== \"production\") {\n    warning = (check, message) => {\n        if (!check && typeof console !== \"undefined\") {\n            console.warn(message);\n        }\n    };\n    invariant = (check, message) => {\n        if (!check) {\n            throw new Error(message);\n        }\n    };\n}\n\nexport { invariant, warning };\n","const featureProps = {\n    animation: [\n        \"animate\",\n        \"variants\",\n        \"whileHover\",\n        \"whileTap\",\n        \"exit\",\n        \"whileInView\",\n        \"whileFocus\",\n        \"whileDrag\",\n    ],\n    exit: [\"exit\"],\n    drag: [\"drag\", \"dragControls\"],\n    focus: [\"whileFocus\"],\n    hover: [\"whileHover\", \"onHoverStart\", \"onHoverEnd\"],\n    tap: [\"whileTap\", \"onTap\", \"onTapStart\", \"onTapCancel\"],\n    pan: [\"onPan\", \"onPanStart\", \"onPanSessionStart\", \"onPanEnd\"],\n    inView: [\"whileInView\", \"onViewportEnter\", \"onViewportLeave\"],\n    layout: [\"layout\", \"layoutId\"],\n};\nconst featureDefinitions = {};\nfor (const key in featureProps) {\n    featureDefinitions[key] = {\n        isEnabled: (props) => featureProps[key].some((name) => !!props[name]),\n    };\n}\n\nexport { featureDefinitions };\n","function isAnimationControls(v) {\n    return (v !== null &&\n        typeof v === \"object\" &&\n        typeof v.start === \"function\");\n}\n\nexport { isAnimationControls };\n","\"use client\";\nimport { createContext } from 'react';\n\n/**\n * @public\n */\nconst PresenceContext = \n/* @__PURE__ */ createContext(null);\n\nexport { PresenceContext };\n","/**\n * Decides if the supplied variable is variant label\n */\nfunction isVariantLabel(v) {\n    return typeof v === \"string\" || Array.isArray(v);\n}\n\nexport { isVariantLabel };\n","function addUniqueItem(arr, item) {\n    if (arr.indexOf(item) === -1)\n        arr.push(item);\n}\nfunction removeItem(arr, item) {\n    const index = arr.indexOf(item);\n    if (index > -1)\n        arr.splice(index, 1);\n}\n// Adapted from array-move\nfunction moveItem([...arr], fromIndex, toIndex) {\n    const startIndex = fromIndex < 0 ? arr.length + fromIndex : fromIndex;\n    if (startIndex >= 0 && startIndex < arr.length) {\n        const endIndex = toIndex < 0 ? arr.length + toIndex : toIndex;\n        const [item] = arr.splice(fromIndex, 1);\n        arr.splice(endIndex, 0, item);\n    }\n    return arr;\n}\n\nexport { addUniqueItem, moveItem, removeItem };\n","import { isMotionValue, motionValue } from 'motion-dom';\nimport { animateMotionValue } from '../interfaces/motion-value.mjs';\n\nfunction animateSingleValue(value, keyframes, options) {\n    const motionValue$1 = isMotionValue(value) ? value : motionValue(value);\n    motionValue$1.start(animateMotionValue(\"\", motionValue$1, keyframes, options));\n    return motionValue$1.animation;\n}\n\nexport { animateSingleValue };\n","/**\n * Check if the value is a zero value string like \"0px\" or \"0%\"\n */\nconst isZeroValueString = (v) => /^0[^.\\s]+$/u.test(v);\n\nexport { isZeroValueString };\n","const visualElementStore = new WeakMap();\n\nexport { visualElementStore };\n","import { px } from 'motion-dom';\n\nconst dashKeys = {\n    offset: \"stroke-dashoffset\",\n    array: \"stroke-dasharray\",\n};\nconst camelKeys = {\n    offset: \"strokeDashoffset\",\n    array: \"strokeDasharray\",\n};\n/**\n * Build SVG path properties. Uses the path's measured length to convert\n * our custom pathLength, pathSpacing and pathOffset into stroke-dashoffset\n * and stroke-dasharray attributes.\n *\n * This function is mutative to reduce per-frame GC.\n */\nfunction buildSVGPath(attrs, length, spacing = 1, offset = 0, useDashCase = true) {\n    // Normalise path length by setting SVG attribute pathLength to 1\n    attrs.pathLength = 1;\n    // We use dash case when setting attributes directly to the DOM node and camel case\n    // when defining props on a React component.\n    const keys = useDashCase ? dashKeys : camelKeys;\n    // Build the dash offset\n    attrs[keys.offset] = px.transform(-offset);\n    // Build the dash array\n    const pathLength = px.transform(length);\n    const pathSpacing = px.transform(spacing);\n    attrs[keys.array] = `${pathLength} ${pathSpacing}`;\n}\n\nexport { buildSVGPath };\n","import { buildHTMLStyles } from '../../html/utils/build-styles.mjs';\nimport { buildSVGPath } from './path.mjs';\n\n/**\n * Build SVG visual attrbutes, like cx and style.transform\n */\nfunction buildSVGAttrs(state, { attrX, attrY, attrScale, pathLength, pathSpacing = 1, pathOffset = 0, \n// This is object creation, which we try to avoid per-frame.\n...latest }, isSVGTag, transformTemplate, styleProp) {\n    buildHTMLStyles(state, latest, transformTemplate);\n    /**\n     * For svg tags we just want to make sure viewBox is animatable and treat all the styles\n     * as normal HTML tags.\n     */\n    if (isSVGTag) {\n        if (state.style.viewBox) {\n            state.attrs.viewBox = state.style.viewBox;\n        }\n        return;\n    }\n    state.attrs = state.style;\n    state.style = {};\n    const { attrs, style } = state;\n    /**\n     * However, we apply transforms as CSS transforms.\n     * So if we detect a transform, transformOrigin we take it from attrs and copy it into style.\n     */\n    if (attrs.transform) {\n        style.transform = attrs.transform;\n        delete attrs.transform;\n    }\n    if (style.transform || attrs.transformOrigin) {\n        style.transformOrigin = attrs.transformOrigin ?? \"50% 50%\";\n        delete attrs.transformOrigin;\n    }\n    if (style.transform) {\n        /**\n         * SVG's element transform-origin uses its own median as a reference.\n         * Therefore, transformBox becomes a fill-box\n         */\n        style.transformBox = styleProp?.transformBox ?? \"fill-box\";\n        delete attrs.transformBox;\n    }\n    // Render attrX/attrY/attrScale as attributes\n    if (attrX !== undefined)\n        attrs.x = attrX;\n    if (attrY !== undefined)\n        attrs.y = attrY;\n    if (attrScale !== undefined)\n        attrs.scale = attrScale;\n    // Build SVG path if one has been defined\n    if (pathLength !== undefined) {\n        buildSVGPath(attrs, pathLength, pathSpacing, pathOffset, false);\n    }\n}\n\nexport { buildSVGAttrs };\n"],"names":["clamp","min","max","v","resolveVariant","visualElement","definition","custom","props","getProps","resolveVariantFromProps","undefined","useIsomorphicLayoutEffect","isBrowser","useLayoutEffect","useEffect","int","number","transform","Math","round","transformValueTypes","rotate","degrees","rotateX","rotateY","rotateZ","scale","scaleX","scaleY","scaleZ","skew","skewX","skewY","distance","px","translateX","translateY","translateZ","x","y","z","perspective","transformPerspective","opacity","alpha","originX","progressPercentage","originY","originZ","numberValueTypes","borderWidth","borderTopWidth","borderRightWidth","borderBottomWidth","borderLeftWidth","borderRadius","radius","borderTopLeftRadius","borderTopRightRadius","borderBottomRightRadius","borderBottomLeftRadius","width","maxWidth","height","maxHeight","top","right","bottom","left","padding","paddingTop","paddingRight","paddingBottom","paddingLeft","margin","marginTop","marginRight","marginBottom","marginLeft","backgroundPositionX","backgroundPositionY","zIndex","fillOpacity","strokeOpacity","numOctaves","positionalKeys","Set","transformPropOrder","camelCaseAttributes","SVGVisualElement","DOMVisualElement","constructor","super","arguments","this","type","isSVGTag","measureInstanceViewportBox","createBox","getBaseTargetFromProps","key","readValueFromInstance","instance","transformProps","has","defaultType","getDefaultValueType","default","camelToDash","getAttribute","scrapeMotionValuesFromProps","prevProps","build","renderState","latestValues","buildSVGAttrs","transformTemplate","style","renderInstance","styleProp","projection","element","_styleProp","renderHTML","attrs","setAttribute","renderSVG","mount","tagName","createGeneratorEasing","options","length","generator","keyframes","duration","calcGeneratorDuration","maxGeneratorDuration","ease","progress","next","value","millisecondsToSeconds","isSVGSVGElement","isSVGElement","test","parse","parseFloat","isNumericalString","isNumOrPxType","transformKeys","nonTranslationalTransformKeys","filter","removeNonTranslationalTransform","removedTransforms","forEach","getValue","push","get","set","startsWith","positionalValues","_ref","_ref2","_ref3","_ref4","_bbox","_ref5","_ref6","_ref7","_ref8","_ref9","_ref10","_ref11","parseValueFromTransform","_ref12","defaultOffset","arr","offset","fillOffset","optimizedAppearDataAttribute","MotionConfigContext","createContext","transformPagePoint","p","isStatic","reducedMotion","splitCSSVariableRegex","getVariableValue","current","depth","invariant","token","fallback","match","exec","token1","token2","parseCSSVariable","resolved","window","getComputedStyle","getPropertyValue","trimmed","trim","isCSSVariableToken","invalidTemplates","DOMKeyframesResolver","KeyframeResolver","unresolvedKeyframes","onComplete","name","motionValue","readKeyframes","i","keyframe","finalKeyframe","resolveNoneKeyframes","origin","target","originType","findDimensionValueType","targetType","needsMeasurement","noneKeyframeIndexes","isZeroValueString","animatableTemplate","analyseComplexValue","values","noneIndex","getAnimatableNone","makeNoneKeyframesAnimatable","measureInitialState","suspendedScrollY","pageYOffset","measuredOrigin","measureViewportBox","measureKeyframe","jump","measureEndState","finalKeyframeIndex","unsetTransformName","unsetTransformValue","VisualElement","sortInstanceNodePosition","a","b","compareDocumentPosition","removeValueFromRenderState","vars","handleChildMotionValue","childSubscription","children","isMotionValue","on","latest","textContent","newValues","scrapeMotionValuesFromProps$1","indexOf","charAt","toUpperCase","substring","stepsOrder","maxElapsed","createRenderBatcher","scheduleNextBatch","allowKeepAlive","runNextFrame","useDefaultElapsed","state","delta","timestamp","isProcessing","flagRunNextFrame","steps","reduce","acc","stepName","thisFrame","nextFrame","flushNextFrame","toKeepAlive","WeakSet","latestFrameData","numCalls","triggerCallback","callback","step","schedule","queue","add","cancel","delete","process","frameData","statsBuffer","frameloop","clear","createRenderStep","setup","read","resolveKeyframes","preUpdate","update","preRender","render","postRender","processBatch","MotionGlobalConfig","useManualTiming","performance","now","keepAlive","immediate","isKeyframesTarget","Array","isArray","Boolean","getVelocity","done","Infinity","dimensionValueTypes","percent","vw","vh","find","testValueType","reverseEasing","easing","mixNumber","from","to","checkStringStartsWith","isCSSVariableName","startsAsVariableToken","singleCssVariableRegex","split","str","replace","toLowerCase","LayoutGroupContext","colorRegex","NUMBER_TOKEN","COLOR_TOKEN","VAR_TOKEN","VAR_FUNCTION_TOKEN","SPLIT_TOKEN","complexRegex","originalValue","toString","indexes","color","var","types","parsedValue","parseComplexValue","createTransformer","source","numSections","output","sanitize","convertNumbersToZero","complex","isNaN","floatRegex","parsed","transformer","map","toFromDifference","isForcedMotionValue","layout","layoutId","scaleCorrectors","radToDeg","rad","PI","angle","atan2","rebaseAngle","matrix2dParsers","abs","atan","sqrt","matrix3dParsers","defaultTransformValue","includes","matrix3dMatch","parsers","matrix2dMatch","valueParser","convertTransformToNumber","readTransformValue","isGenerator","Object","assign","getProjectionStyles","setProperty","hsla","isColorString","splitColor","hue","saturation","lightness","alpha$1","secondsToMilliseconds","seconds","milliseconds","variantPriorityOrder","variantProps","generateLinearEasing","resolution","points","numPoints","isEasingArray","velocitySampleDuration","calcGeneratorVelocity","resolveValue","t","prevT","velocityPerSecond","isIdentityScale","hasScale","hasTransform","has2DTranslate","is2DTranslate","noop","any","velocity","frameDuration","circIn","sin","acos","circOut","circInOut","mirrorEasing","addScaleCorrector","correctors","isCSSVariable","useConstant","init","ref","useRef","hex","r","g","red","parseInt","green","blue","rgba","defaultValueType","toResolve","isScheduled","anyNeedsMeasurement","isForced","measureAllKeyframes","resolversToMeasure","resolver","elementsToMeasure","transformsToRestore","Map","restore","scrollTo","complete","readAllKeyframes","flushKeyframeResolvers","isAsync","scheduleResolve","frame","currentValue","valueAsRead","readValue","fillWildcards","setFinalKeyframe","renderEndStyles","isForcedComplete","resume","isObject","HTMLVisualElement","isProjecting","computedStyle","buildHTMLStyles","remaining","offsetProgress","hasOwnProperty","createDOMMotionComponentProxy","componentFactory","Proxy","componentCache","_target","animateVariant","variant","presenceContext","transition","getDefaultTransition","transitionOverride","getAnimation","Promise","all","animateTarget","resolve","getChildAnimations","variantChildren","size","forwardDelay","delayChildren","staggerChildren","staggerDirection","animations","maxStaggerDuration","generateStaggerDuration","sort","sortByTreeOrder","child","notify","delay","then","animateChildren","when","first","last","sortNodePosition","shallowCompare","prev","prevLength","numVariantProps","getVariantContext","isControllingVariants","context","parent","initial","prop","isVariantLabel","reversePriorityOrder","reverse","numAnimationTypes","animateList","animation","resolvedDefinition","animateVisualElement","createAnimationState","animate","createState","isInitialRender","buildResolvedTypeValues","transitionEnd","animateChanges","changedActiveType","removedKeys","encounteredKeys","removedVariantIndex","typeState","propIsVariant","activeDelta","isActive","isInherited","manuallyAnimateOnMount","protectedKeys","prevProp","isAnimationControls","variantDidChange","checkVariantsDidChange","shouldAnimateType","handledRemovedValues","definitionList","resolvedValues","prevResolvedValues","allKeys","markToAnimate","needsAnimating","liveStyle","valueHasChanged","blockInitialAnimation","fallbackAnimation","initialTransition","fallbackTarget","getBaseTarget","shouldAnimate","setActive","animationState","setAnimateFunction","makeAnimator","getState","reset","createTypeState","whileInView","whileHover","whileTap","whileDrag","whileFocus","exit","Feature","node","isMounted","id","updateAnimationControlsSubscription","unmountControls","subscribe","prevAnimate","unmount","isPresent","onExitComplete","prevIsPresent","prevPresenceContext","exitAnimation","register","isDragging","isDragActive","addDomEvent","eventName","handler","passive","addEventListener","removeEventListener","isPrimaryPointer","event","pointerType","button","isPrimary","extractEventInfo","point","pageX","pageY","addPointerEvent","addPointerInfo","calcLength","axis","calcAxisDelta","originPoint","translate","calcBoxDelta","calcRelativeAxis","relative","calcRelativeAxisPosition","calcRelativePosition","eachAxis","getContextWindow","ownerDocument","defaultView","isRefObject","prototype","call","PanSession","handlers","contextWindow","dragSnapToOrigin","startEvent","lastMoveEvent","lastMoveEventInfo","updatePoint","info","getPanInfo","history","isPanStarted","isDistancePastThreshold","xDelta","yDelta","distance2D","onStart","onMove","handlePointerMove","transformPoint","handlePointerUp","end","onEnd","onSessionEnd","resumeAnimation","panInfo","initialInfo","onSessionStart","removeListeners","pipe","updateHandlers","cancelFrame","subtractPoint","lastDevicePoint","startDevicePoint","timeDelta","timestampedPoint","lastPoint","time","currentVelocity","calcRelativeAxisConstraints","calcViewportAxisConstraints","layoutAxis","constraintsAxis","defaultElastic","resolveAxisElastic","dragElastic","minLabel","maxLabel","resolvePointElastic","label","elementDragControls","WeakMap","VisualElementDragControls","openDragLock","currentDirection","constraints","hasMutatedConstraints","elastic","start","originEvent","snapToCursor","panSession","pauseAnimation","stopAnimation","drag","dragPropagation","onDragStart","resolveConstraints","isAnimationBlocked","getAxisMotionValue","measuredAxis","layoutBox","addValueToWillChange","dragDirectionLock","onDirectionLock","onDrag","lockThreshold","direction","getCurrentDirection","updateAxis","stop","getAnimationState","play","getTransformPagePoint","startAnimation","onDragEnd","_point","shouldDrag","axisValue","applyConstraints","dragConstraints","measure","prevConstraints","resolveRefConstraints","calcRelativeConstraints","resolveDragElastic","relativeConstraints","rebaseAxisConstraints","onMeasureDragConstraints","constraintsElement","constraintsBox","measurePageBox","root","measuredConstraints","calcViewportConstraints","userConstraints","convertBoxToBoundingBox","convertBoundingBoxToBox","dragMomentum","dragTransition","onDragTransitionEnd","momentumAnimations","bounceStiffness","bounceDamping","inertia","timeConstant","restDelta","restSpeed","startAxisValueAnimation","animateMotionValue","pause","dragKey","externalMotionValue","scalePositionWithinConstraints","boxProgress","sourceLength","targetLength","calcOrigin","updateScroll","updateLayout","addListeners","stopPointerListener","dragListener","measureDragConstraints","stopMeasureLayoutListener","stopResizeListener","stopLayoutUpdateListener","hasLayoutChanged","asyncHandler","microtask","cancelMicrotask","queueMicrotask","SwitchLayoutGroupContext","globalProjectionState","hasAnimatedSinceResize","hasEverUpdated","pixelsToPercent","pixels","correctBorderRadius","correct","correctBoxShadow","treeScale","projectionDelta","original","shadow","template","xScale","yScale","averageScale","MeasureLayoutWithContext","Component","componentDidMount","layoutGroup","switchLayoutGroup","defaultScaleCorrectors","group","didUpdate","safeToRemove","setOptions","getSnapshotBeforeUpdate","layoutDependency","willUpdate","promote","relegate","stack","getStack","members","componentDidUpdate","currentAnimation","isLead","componentWillUnmount","promoteContext","scheduleCheckAfterUnmount","remove","deregister","MeasureLayout","usePresence","useContext","jsx","applyTo","boxShadow","compareByDepth","FlatTree","isDirty","addUniqueItem","removeItem","timeout","checkElapsed","elapsed","resolveMotionValue","borders","numBorders","asNumber","isPx","getRadius","radiusName","easeCrossfadeIn","compress","easeCrossfadeOut","copyAxisInto","originAxis","copyBoxInto","box","originBox","copyAxisDeltaInto","originDelta","removePointDelta","boxScale","scalePoint","removeAxisTransforms","transforms","sourceAxis","scaleKey","originKey","removeAxisDelta","xKeys","yKeys","removeBoxTransforms","sourceBox","isAxisDeltaZero","isDeltaZero","axisEquals","axisEqualsRounded","boxEqualsRounded","aspectRatio","axisDeltaEquals","NodeStack","scheduleRender","prevLead","lead","indexOfNode","findIndex","member","preserveFollowOpacity","show","resumeFrom","preserveOpacity","snapshot","animationValues","isUpdating","isLayoutDirty","crossfade","hide","exitAnimationComplete","resumingFrom","removeLeadSnapshot","metrics","nodes","calculatedTargetDeltas","calculatedProjections","transformAxes","hiddenVisibility","visibility","resetDistortingTransform","sharedAnimationValues","setStaticValue","cancelTreeOptimisedTransformAnimations","projectionNode","hasCheckedOptimisedAppear","appearId","getOptimisedAppearId","MotionHasOptimisedAnimation","MotionCancelOptimisedAnimation","createProjectionNode","attachResizeListener","defaultParent","measureScroll","checkIsScrollRoot","resetTransform","animationId","isTreeAnimating","isProjectionDirty","isSharedProjectionDirty","isTransformDirty","updateManuallyBlocked","updateBlockedByResize","isSVG","needsReset","shouldResetTransform","eventHandlers","hasTreeAnimated","updateScheduled","scheduleUpdate","projectionUpdateScheduled","checkUpdateFailed","clearAllSnapshots","updateProjection","propagateDirtyNodes","resolveTargetDelta","calcProjection","cleanDirtyNodes","addProjectionMetrics","resolvedRelativeTargetAt","hasProjected","isVisible","animationProgress","sharedNodes","path","SubscriptionManager","notifyListeners","subscriptionManager","_len","args","_key","hasListeners","cancelDelay","resizeUnblockUpdate","finishAnimation","registerSharedNode","hasRelativeLayoutChanged","newLayout","isTreeAnimationBlocked","relativeTarget","layoutTransition","defaultLayoutTransition","onLayoutAnimationStart","onLayoutAnimationComplete","hasTargetChanged","targetLayout","hasOnlyRelativeTargetChanged","layoutRoot","animationOptions","getValueTransition","onPlay","shouldReduceMotion","setAnimationOrigin","blockUpdate","unblockUpdate","isUpdateBlocked","startUpdate","resetSkewAndRotation","getTransformTemplate","shouldNotifyListeners","prevTransformTemplateValue","updateSnapshot","clearMeasurements","clearIsLayoutDirty","resetTransformStyle","notifyLayoutUpdate","frameSteps","clearSnapshot","removeLeadSnapshots","scheduleUpdateProjection","measuredBox","alwaysMeasureLayout","prevLayout","layoutCorrected","phase","layoutScroll","scroll","isRoot","wasRoot","isResetRequested","hasProjection","transformTemplateValue","transformTemplateHasChanged","removeTransform","pageBox","removeElementScroll","roundAxis","some","checkNodeWasScrollRoot","translateAxis","boxWithoutScroll","applyTransform","transformOnly","withTransforms","transformBox","boxWithoutTransform","setTargetDelta","targetDelta","forceRelativeParentToResolveTarget","relativeParent","forceRecalculation","getLead","isShared","attemptToResolveRelativeTarget","getClosestProjectingParent","relativeTargetOrigin","targetWithTransforms","applyBoxDelta","canSkip","pendingAnimation","prevTreeScaleX","prevTreeScaleY","applyTreeDeltas","prevProjectionDelta","createProjectionDeltas","notifyAll","createDelta","projectionDeltaWithTransform","snapshotLatestValues","mixedValues","relativeLayout","isSharedLayoutAnimation","isOnlyMember","shouldCrossfadeOpacity","hasOpacityCrossfade","prevRelativeTarget","mixTargetDelta","mixAxisDelta","mixAxis","follow","opacityExit","borderLabel","followRadius","leadRadius","mixValues","activeAnimations","animateSingleValue","isSync","onUpdate","onStop","completeAnimation","applyTransformsToTarget","shouldAnimatePositionOnly","animationType","xLength","yLength","config","initialPromotionConfig","shouldPreserveFollowOpacity","getPrevLead","hasDistortingTransform","resetValues","styles","pointerEvents","emptyStyles","valuesToRender","latestTransform","xTranslate","yTranslate","zTranslate","elementScaleX","elementScaleY","buildProjectionTransform","transformOrigin","corrected","num","resetTree","measuredLayout","axisSnapshot","layoutDelta","visualDelta","parentSnapshot","parentLayout","relativeSnapshot","onBeforeLayoutMeasure","userAgentContains","string","navigator","userAgent","roundPoint","maxDistance","isNear","DocumentProjectionNode","document","documentElement","scrollLeft","body","scrollTop","rootProjectionNode","HTMLProjectionNode","documentNode","position","pan","removePointerDownListener","onPointerDown","pointerDownEvent","session","createPanHandlers","onPanSessionStart","onPanStart","onPan","onPanEnd","removeGroupControls","controls","dragControls","ProjectionNode","setupGesture","elementOrSelector","elements","resolveElements","gestureAbortController","AbortController","signal","abort","isValidHover","handleHoverEvent","lifecycle","isNodeOrChild","parentElement","focusableElements","isPressing","filterEvents","firePointerEvent","dispatchEvent","PointerEvent","bubbles","isValidPressEvent","press","targetOrSelector","onPressStart","targets","eventOptions","cancelEvents","startPress","currentTarget","onPressEnd","onPointerEnd","endEvent","success","onPointerUp","onPointerCancel","upEvent","useGlobalTarget","cancelEvent","isHTMLElement","enableKeyboardPress","focusEvent","handleKeydown","handleKeyup","handleBlur","tabIndex","hasAttribute","handlePressEvent","HTMLButtonElement","disabled","observerCallbacks","observers","fireObserverCallback","entry","fireAllObserverCallbacks","entries","observeIntersection","rootInteresectionObserver","lookupRoot","rootObservers","JSON","stringify","IntersectionObserver","initIntersectionObserver","observe","unobserve","thresholdNames","gestureAnimations","inView","hasEnteredView","isInView","startObserver","viewport","rootMargin","amount","once","threshold","isIntersecting","onViewportEnter","onViewportLeave","hasOptionsChanged","prevViewport","hasViewportOptionChanged","tap","_element","globalTapTarget","focus","onFocus","isFocusVisible","matches","e","onBlur","hover","onHoverStart","onPointerEnter","enterEvent","onHoverEnd","onPointerLeave","leaveEvent","LazyContext","strict","MotionContext","useCreateMotionContext","inherit","getCurrentTreeVariants","useMemo","variantLabelsAsDependency","join","motionComponentSymbol","Symbol","for","useMotionRef","visualState","externalRef","useCallback","onMount","useVisualElement","createVisualElement","ProjectionNodeConstructor","lazyContext","PresenceContext","reducedMotionConfig","visualElementRef","renderer","initialLayoutGroupConfig","layoutCrossfade","getClosestProjectingNode","useInsertionEffect","optimisedAppearId","wantsHandoff","MotionHandoffIsComplete","MotionIsMounted","updateFeatures","MotionHandoffMarkAsComplete","allowProjection","createRendererMotionComponent","preloadedFeatures","useRender","useVisualState","MotionComponent","configAndProps","useLayoutId","useStrictMode","layoutProjection","featureDefinitions","combined","isEnabled","getProjectionFunctionality","jsxs","Provider","features","loadFeatures","displayName","ForwardRefMotionComponent","forwardRef","layoutGroupId","createHtmlRenderState","copyRawValuesOnly","useStyle","useInitialMotionValues","useHTMLProps","htmlProps","draggable","userSelect","WebkitUserSelect","WebkitTouchCallout","touchAction","onTap","onTapStart","createSvgRenderState","useSVGProps","_isStatic","visualProps","rawStyles","validMotionProps","isValidMotionProp","shouldForward","isValidProp","require","lowercaseSVGElements","isSVGComponent","createUseRender","forwardMotionProps","filteredProps","isDom","filterProps","elementProps","Fragment","renderedChildren","createElement","makeUseVisualState","make","createRenderState","makeLatestValues","makeState","scrapeMotionValues","motionValues","isControllingVariants$1","isVariantNode$1","isVariantNode","isInitialAnimationBlocked","variantToSet","list","valueTarget","htmlMotionConfig","svgMotionConfig","createMotionComponentFactory","motion","createDomVisualElement","getValueAsType","translateAlias","numTransforms","hasTransformOrigin","valueAsType","transformString","transformIsDefault","valueIsDefault","buildTransform","willChange","WillChange","newWillChange","addValue","subscriptions","c","numSubscriptions","getSize","transformBoxPoints","getBoundingClientRect","viewportBox","topLeft","bottomRight","clearTime","newTime","collectMotionValues","MotionValue","_this","canTrackVelocity","events","updateAndNotify","currentTime","updatedAt","setPrevFrameValue","setCurrent","change","dependents","dependent","dirty","renderRequest","hasAnimated","owner","prevFrameValue","prevUpdatedAt","onChange","subscription","unsubscribe","clearListeners","eventManagers","attach","passiveEffect","stopPassiveEffect","setWithVelocity","endAnimation","addDependent","removeDependent","getPrevious","animationStart","animationComplete","clearAnimation","animationCancel","isAnimating","destroy","maxDefaults","applyDefaultFilter","slice","unit","defaultValue","functionRegex","functions","createUnitType","endsWith","applyPointDelta","applyAxisDelta","TREE_SCALE_SNAP_MIN","TREE_SCALE_SNAP_MAX","treePath","isSharedTransition","treeLength","display","transformAxis","axisTranslate","axisScale","axisOrigin","rgbUnit","clampRgbUnit","getValueState","variants","scope","selectorCache","EventTarget","querySelectorAll","requestAnimationFrame","singleColorRegex","testProp","isNullish","aName","bName","cName","mainThread","waapi","combineFunctions","transformers","springDefaults","stiffness","damping","mass","bounce","visualDuration","granular","minDuration","maxDuration","minDamping","maxDamping","safeMin","findSpring","envelope","derivative","warning","dampingRatio","undampedFreq","exponentialDecay","calcAngularFreq","exp","d","pow","f","initialGuess","result","rootIterations","approximateRoot","durationKeys","physicsKeys","isSpringType","keys","spring","optionsOrVisualDuration","isResolvedFromDuration","springOptions","derived","getSpringOptions","initialVelocity","initialDelta","undampedAngularFreq","isGranularScale","resolveSpring","angularFreq","cos","dampedAngularFreq","freqForT","sinh","cosh","calculatedDuration","isBelowVelocityThreshold","isBelowDisplacementThreshold","toTransition","applyToOptions","generatorOptions","valueTypes","prefersReducedMotion","hasReducedMotionListener","propEventHandlers","_props","_prevProps","_visualElement","valueSubscriptions","prevMotionValues","propEventSubscriptions","notifyUpdate","triggerBuild","renderScheduledAt","baseTarget","initialValues","initialMotionValues","visualElementStore","removeFromVariantTree","addVariantChild","bindToMotionValue","matchMedia","motionMediaQuery","setReducedMotionPreferences","addListener","initPrefersReducedMotion","feature","valueIsTransform","onBindTransform","removeOnChange","latestValue","removeOnRenderRequest","removeSyncCheck","MotionCheckAppearSync","other","featureDefinition","FeatureConstructor","getStaticValue","listener","nextValue","prevValue","hasValue","existingValue","removeValue","updateMotionValuesFromProps","getVariant","getClosestVariantNode","closestVariantNode","setBaseTarget","valueFromInitial","useId","hueToRgb","q","mixImmediate","mixLinearColor","fromExpo","expo","colorTypes","asRGBA","model","hslaToRgba","mixColor","fromRGBA","toRGBA","blended","invisibleValues","mixNumber$1","getMixer","mixComplex","mixArray","mixObject","numValues","blendValue","originStats","targetStats","mixVisibility","orderedOrigin","pointers","originIndex","originValue","matchOrder","mix","mixer","frameloopDriver","passTimestamp","power","modifyTarget","nearestBoundary","amplitude","ideal","calcDelta","calcLatest","applyFriction","timeReachedBoundary","spring$1","checkCatchBoundary","hasUpdatedFrame","calcBezier","a1","a2","cubicBezier","mX1","mY1","mX2","mY2","getTForX","aX","lowerBound","upperBound","currentX","currentT","binarySubdivide","easeIn","easeOut","easeInOut","backOut","backIn","backInOut","anticipate","isBezierDefinition","easingLookup","linear","easingDefinitionToFunction","x1","y1","x2","y2","interpolate","input","isClamp","inputLength","isZeroDeltaRange","mixers","customMixer","mixerFactory","numMixers","easingFunction","createMixers","interpolator","progressInRange","keyframeValues","times","easingFunctions","absoluteTimes","o","convertOffsetToTimes","mapTimeToKeyframe","splice","isNotNull","getFinalKeyframe","repeat","repeatType","speed","resolvedKeyframes","index","transitionTypeMap","decay","tween","replaceTransitionType","WithPromise","updateFinished","finished","_finished","notifyFinished","onResolve","onReject","percentToProgress","JSAnimation","startTime","isStopped","holdTime","playbackSpeed","tick","teardown","initAnimation","autoplay","repeatDelay","keyframes$1","generatorFactory","mixKeyframes","mirroredGenerator","resolvedDuration","totalDuration","updateTime","animationTime","sample","timeWithoutDelay","isInDelayPhase","frameGenerator","currentIteration","floor","iterationProgress","isAnimationFinished","finish","reject","driver","newSpeed","hasChanged","onCancel","stopDriver","sampleTime","attachTimeline","timeline","allowFlatten","memo","supportsScrollTimeline","ScrollTimeline","supportsFlags","memoSupports","supportsFlag","memoized","supportsLinearEasing","cubicBezierAsString","supportedWaapiEasing","mapEasingToNativeEasing","segmentEasing","startWaapiAnimation","valueName","pseudoElement","keyframeOptions","fill","iterations","finally","NativeAnimation","finishedTime","isPseudoElement","applyGeneratorOptions","onfinish","updateMotionValue","isCSSVar","setStyle","commitStyles","effect","getComputedTiming","Number","playbackRate","playState","newStartTime","updateTiming","unsupportedEasingFunctions","replaceStringEasing","NativeAnimationExtended","sampleAnimation","isAnimatable","acceleratedValues","supportsWaapi","Element","AsyncMotionValueAnimation","_animation","stopTimeline","keyframeResolver","createdAt","optionsWithDefaults","KeyframeResolver$1","forced","onKeyframesResolved","sync","isHandoff","resolvedAt","originKeyframe","targetKeyframe","isOriginAnimatable","isTargetAnimatable","hasKeyframesChanged","canAnimate","instantAnimations","resolvedOptions","supportsBrowserAnimation","catch","pendingTimeline","_onReject","underDampedSpring","keyframesTransition","valueKey","valueTransition","_delay","isTransitionDefined","shouldSkip","skipAnimations","setMotionValue","shouldBlockAnimation","shouldBlock","targetAndTransition","animationTypeState","MotionHandoffAnimation","setTarget","tag","defaultValueTypes","backgroundColor","outlineColor","stroke","borderColor","borderTopColor","borderRightColor","borderBottomColor","borderLeftColor","WebkitFilter","featureProps","item","motionValue$1","dashKeys","array","camelKeys","attrX","attrY","attrScale","pathLength","pathSpacing","pathOffset","viewBox","spacing","useDashCase","buildSVGPath"],"sourceRoot":""}